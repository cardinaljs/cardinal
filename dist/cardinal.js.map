{"version":3,"file":"cardinal.js","sources":["../src/circular-path/circle.js","../src/circular-path/index.js","../src/util.js","../src/drawer/vector.js","../src/drawer/rectangle.js","../src/drawer/snapped-drawer/bottom.js","../src/drawer/snapped-drawer/left.js","../src/drawer/snapped-drawer/right.js","../src/drawer/snapped-drawer/top.js","../src/drawer/snapped-drawer/index.js","../src/drawer/index.js","../src/nav/backdrop.js","../src/nav/state.js","../src/nav/hashstate.js","../src/nav/drawer.js","../src/nav/navservice.js","../src/nav/index.js","../src/index.js"],"sourcesContent":["export const POINT_ANGLE = 360\nexport const HALF = 1 / 2\nexport const PI = Math.PI\nexport const RAD = PI / (POINT_ANGLE * HALF)\n\nexport class Circle {\n  constructor(radius) {\n    /**\n     * @type {number}\n     */\n    this.radius = radius\n    this.diameter = this.radius * 2\n  }\n\n  get area() {\n    return PI * this.radius ** 2\n  }\n\n  get circumference() {\n    return 2 * PI * this.radius\n  }\n\n  areaOfSect(angle) {\n    angle *= RAD\n    return angle / POINT_ANGLE * this.area\n  }\n\n  lenOfSect(angle) {\n    angle *= RAD\n    return angle / POINT_ANGLE * this.circumference\n  }\n}\n","import {\n  Circle,\n  HALF,\n  POINT_ANGLE,\n  RAD\n} from './circle'\n\nconst ZERO = 0\nconst DEG = 1 / RAD\nconst RIGHT_ANGLE = POINT_ANGLE >> 2\n/**\n * Enum of all quadrants from first to fourth.\n * The quadrant is not a usual one; it starts from the 12th\n * hand of the clock and moves anti-clockwise\n * @enum {number}\n * @const\n */\nconst Quadrant = {\n  FIRST: 90,\n  SECOND: 180,\n  THIRD: 270,\n  FOURTH: 360\n}\n\n// There are two Triangles formed 1) Right angle 2) issoceles\nexport default class CircularPath extends Circle {\n  constructor(radius, angles) {\n    super(radius)\n    this._angles = angles\n    this.angles = angles.map((value) => RAD * value)\n    this._quad = null\n  }\n\n  get path() {\n\n  }\n  // private\n  _degToRad(deg) {\n    return RAD * deg\n  }\n\n  _radToDeg(rad) {\n    return DEG * rad\n  }\n\n  _findOppUseSOH(angle, hyp) {\n    return Math.sin(angle) * hyp\n  }\n\n  _firstPath() {\n    const paths = []\n    this._angles.forEach((angle) => {\n      if (angle === ZERO || angle <= POINT_ANGLE && angle % RIGHT_ANGLE === ZERO) {\n        paths.push(this.radius)\n        return\n      }\n      this._quad = this._getQuadrant(angle)\n      angle = this._quad !== Quadrant.FIRST ? this._quad - angle : angle\n      const radAngle = this._degToRad(angle)\n      const hyp = this._chordLength(radAngle)\n      // RAT: Right Angle Triangle\n      // These are the angles of a RAT that overlaps the circle\n      // with its hypotenuse being the chord that closes the\n      // inner \"cut\" triangle\n      // angleAofRAT = 90 or what else do you think.\n      const angleCofRAT = this._getLastTwoEqAngles(radAngle)\n      const angleBofRAT = RIGHT_ANGLE - angleCofRAT\n      // what would be the path is the `opp` side with respect\n      // to `angleBofRAT` i.e the line that faces it.\n      paths.push(this._findOppUseSOH(this._degToRad(angleBofRAT), hyp))\n    })\n    return paths\n  }\n\n  _resolvePath(val, quadrant) {\n    const paths = []\n    this._angles.forEach((angle) => {\n      if (angle === ZERO || angle <= POINT_ANGLE && angle % RIGHT_ANGLE === ZERO) {\n        paths.push(this.radius)\n        return\n      }\n      this._quad = this._getQuadrant(angle)\n      angle = this._quad !== Quadrant.FIRST ? this._quad - angle : angle\n      const radAngle = this._degToRad(angle)\n      const hyp = this._chordLength(radAngle)\n      // RAT: Right Angle Triangle\n      // These are the angles of a RAT that overlaps the circle\n      // with its hypotenuse being the chord that closes the\n      // inner \"cut\" triangle\n      // angleAofRAT = 90 or what else do you think.\n      const angleCofRAT = this._getLastTwoEqAngles(radAngle)\n      const angleBofRAT = RIGHT_ANGLE - angleCofRAT\n      // what would be the path is the `opp` side with respect\n      // to `angleBofRAT` i.e the line that faces it.\n      paths.push(this._findOppUseSOH(this._degToRad(angleBofRAT), hyp))\n    })\n    return paths\n  }\n\n\n  /**\n   * Finds the value of the last two equal angles in the\n   * triangle cut out of the circle.\n   * There are three angles, one is given as `angleA`;\n   * the other two are equal since two sides `b` & `c` are\n   * equal i.e `b = c = radius`\n   *\n   * @param {number} angleA an angle in degree of the only unequal\n   * part of the triangle\n   * @returns {number} an angle in degree that reps the angle of the\n   * two equal sides of the triangle\n   */\n  _getLastTwoEqAngles(angleA) {\n    return (POINT_ANGLE * HALF - this._radToDeg(angleA)) * HALF\n  }\n\n  _getQuadrant(angle) {\n    if (angle <= Quadrant.FIRST) {\n      return Quadrant.FIRST\n    } else if (angle <= Quadrant.SECOND && angle > Quadrant.FIRST) {\n      return Quadrant.SECOND\n    } else if (angle <= Quadrant.THIRD && angle > Quadrant.SECOND) {\n      return Quadrant.THIRD\n    } else if (angle <= Quadrant.FOURTH && angle > Quadrant.THIRD) {\n      return Quadrant.FOURTH\n    }\n    throw RangeError('Quadrant out of range')\n  }\n\n  _chordLength(angle) {\n    const radiusSq = this.radius ** 2\n    /**\n     * cosine rule [`a**2 = b**2 + c**2 - 2bc cos A`]\n     *\n     * `2 * radiusSq` stands as `b**2 + c**2`.\n     * Therefore `b**2 + c**2 = 2bc` since `b = c = radius`.\n     * Where `b` & `c` are two sides of a triangle cut\n     * from the circle, enclosed with a chord, with the `theta`\n     * joining them equal `angle`\n     *\n     * `angle` is the angle `theta` between the two radii\n     * drawn from the centre of the circle\n     */\n    // a = a**2\n    let a = 2 * radiusSq - 2 * radiusSq * Math.cos(angle)\n    a = Math.sqrt(a)\n    return a\n  }\n}\n","// constants\nconst BLUR_SPREAD_SHADE = '0.7rem 0 rgba(0,0,0,.3)'\nexport const NAV_BOX_SHADOW = {\n  top: `0 0.2rem ${BLUR_SPREAD_SHADE}`,\n  left: `0.2rem 0 ${BLUR_SPREAD_SHADE}`,\n  bottom: `0 -0.2rem ${BLUR_SPREAD_SHADE}`,\n  right: `-0.2rem 0 ${BLUR_SPREAD_SHADE}`\n}\nexport const ZERO = 0\nexport const DIRECTIONS = [\n  'top', 'left',\n  'bottom', 'right'\n]\n\n// classes\nexport class Path {\n  constructor(x, y) {\n    this.x = x\n    this.y = y\n  }\n\n  /**\n   * Get difference between two paths\n   * @param {Path} path1 Path Object\n   * @param {Path} path2 Path Object\n   * @returns {Path} A different Path\n   */\n  static pathDifference(path1, path2) {\n    const x = path1.x - path2.x\n    const y = path1.y - path2.y\n    return new Path(x, y)\n  }\n\n  /**\n   * Join two different paths\n   * @param {Path} path1 Path Object\n   * @param {Path} path2 Path Object\n   * @returns {Path} A joined Path\n   */\n  static join(path1, path2) {\n    const x = path1.x + path2.x\n    const y = path1.y + path2.y\n    return new Path(x, y)\n  }\n}\n\nexport class Bound {\n  constructor(lower, upper) {\n    this.lower = lower\n    this.upper = upper\n  }\n\n  get gap() {\n    return this.upper - this.lower\n  }\n\n  get slack() {\n    return this.lower - this.upper\n  }\n}\n\n// functions\nexport function dataCamelCase(data) {\n  // remove 'data-' prefix and return camelCase string\n  return camelCase(data.substring(5), '-')\n}\n\nexport function camelCase(data, delim = '-') {\n  const list = data instanceof Array ? data : data.split(delim)\n  return list.reduce((acc, cur) => acc + cur.charAt(0)\n    .toUpperCase() + cur.slice(1)\n  )\n}\n\nexport function unique(max) {\n  return Math.floor(Math.random() * max)\n}\n\nexport function $(query) {\n  return document.querySelectorAll(query)[0]\n}\n\nexport function getAttribute(el, attr) {\n  return el.getAttribute(attr)\n}\n\nexport function hasAttribute(el, attr) {\n  return el.hasAttribute(attr)\n}\n\nexport function setAttribute(el, attr, value) {\n  el.setAttribute(attr, value)\n}\n\nexport function getData(el, attr) {\n  const prop = dataCamelCase(attr)\n  // this may return `undefined` in some Safari\n  if (el.dataset && el.dataset[prop]) {\n    return el.dataset[prop]\n  }\n  return getAttribute(el, attr)\n}\n\nexport function validateThreshold(tsh) {\n  const MAX_THRESHOLD = 1\n  const MIN_ILLEGAL_THRESHOLD = 0\n  if (tsh < MAX_THRESHOLD && tsh > MIN_ILLEGAL_THRESHOLD) {\n    tsh = MAX_THRESHOLD - tsh\n    return tsh\n  } else if (tsh < MIN_ILLEGAL_THRESHOLD) {\n    tsh = MAX_THRESHOLD\n    return tsh\n  }\n  return MAX_THRESHOLD\n}\n\n/**\n * @param {HTMLElement} el an HTMLElement whose style should\n * be accessed\n * @param {string | string[] | {}} property A property/properties\n * to set or get\n * @param {string | number} value value to set as\n * @returns {CSSStyleDeclaration | string} A css style property\n * or CSSStyleDeclaration object\n */\nexport function css(...args) {\n  if (args.length < 1) {\n    return null\n  }\n  const el = args[0]\n  const property = args[1]\n  let value = args[2]\n  const STYLEMAP = window.getComputedStyle(el)\n\n  if (typeof property === 'string' && value) {\n    // setting one property\n    el.style[property] = value\n    return null\n  }\n  if (typeof property === 'object' && property instanceof Object) {\n    // `style` MUST = null\n    // setting many properties\n    value = property\n    for (const prop of Object.keys(value)) {\n      el.style[prop] = value[prop]\n    }\n  } else if (property instanceof Array) {\n    // return all values of properties in the array for\n    // the element as object\n    const ostyle = {}\n    for (const prop of STYLEMAP) {\n      ostyle[prop] = STYLEMAP[prop]\n    }\n    return ostyle\n  } else {\n    // get style from property\n    return STYLEMAP[property]\n  }\n  return STYLEMAP\n}\n","export class VectorRectangle {\n  constructor(x1, y1, x2, y2) {\n    this.coordsX = {\n      x1,\n      x2\n    }\n    this.coordsY = {\n      y1,\n      y2\n    }\n  }\n\n  get displacementX() {\n    return this.coordsX.x2 - this.coordsX.x1\n  }\n\n  get displacementY() {\n    return this.coordsY.y2 - this.coordsY.y1\n  }\n\n  get diagonalLength() {\n    if (!this.displacementY) {\n      return this.displacementX\n    } else if (!this.displacementX) {\n      return this.displacementY\n    }\n    return Math.sqrt(\n      this.displacementY ** 2 + this.displacementX ** 2\n    )\n  }\n}\n","import {\n  VectorRectangle\n} from './vector'\n\nexport class Rectangle extends VectorRectangle {\n  // eslint-disable-next-line no-useless-constructor\n  constructor(x1, y1, x2, y2) {\n    super(x1, y1, x2, y2)\n  }\n\n  // getter\n  get width() {\n    return Math.abs(this.displacementX)\n  }\n\n  get height() {\n    return Math.abs(this.displacementY)\n  }\n\n  get greaterWidth() {\n    return this.width > this.height\n  }\n\n  get greaterHeight() {\n    return !this.greaterWidth\n  }\n}\n","import {\n  ZERO,\n  validateThreshold\n} from './../../util'\nimport {\n  Rectangle\n} from './../rectangle'\n\nconst DIRECTION = 'bottom'\nconst DIMENSION = 'dimension'\nconst DISPLACEMENT = 'displacement'\nconst EVENT_OBJ = 'event'\nconst THRESHOLD = 'threshold'\nconst BELOW_THRESHOLD = 'belowthreshold'\nconst OPEN = 'open'\nconst CLOSE = 'close'\nconst UNIT = 'px'\nconst MAX_START_AREA = 25\nconst THRESHOLD_VALUE = 0.667\nconst FALSE_TOUCH_START_POINT = 2\n\nexport default class Bottom {\n  /**\n   * @param {{}} options\n   * an object containing all required properties\n   * @param {Bound} bound a boundary object\n   */\n  constructor(options, bound) {\n    this.options = options\n    this.bound = bound\n    /**\n     * Drawer Element\n     * @type {HTMLElement}\n     */\n    this.element = options.ELEMENT\n    /**\n     * Size of device window\n     * @type {Function}\n     */\n    this._winSize = this.options.sizeOfWindow || Bottom._windowSize\n    /**\n     * @type {number}\n     */\n    this.winSize = this._winSize()\n    /**\n     * @type {number}\n     */\n    this.height = this.options.SIZE\n    this.unit = this.options.unit || UNIT\n    /**\n     * @type {number}\n     * A minimum area where the draw-start is sensitive\n     */\n    this.minArea = this.winSize - (this.bound.lower || this.options.maxStartArea || MAX_START_AREA)\n\n    /**\n     * A threshold which the `touchmove` signal must attain\n     * before being qualified to stay shown\n     * the threshold should be a value between `0` and `1.0`\n     * @type {number}\n     */\n    this.threshold = this.options.threshold || THRESHOLD_VALUE\n    this.threshold = validateThreshold(this.threshold)\n\n    // Touch coordinates (Touch Start)\n    this.startX = -1\n    this.startY = -1\n    // Touch coordinates (Touch Move)\n    this.resumeX = -1\n    this.resumeY = -1\n    // Touch coordinates (Touch End) [these may not be important]\n    this.endX = -1\n    this.endY = -1\n\n    /**\n     * A control for scroll. This control prevents\n     * a clash between coordinates dancing between\n     * the (&delta;`X`) coords and (&delta;`Y`) coords.\n     * Utilising the `Rectangle` class to get bounds\n     * and isolate territories\n     * @type {boolean}\n     */\n    this.scrollControlSet = false\n    this.scrollControl = null\n    this.timing = {\n      /**\n       * @type {Date}\n       */\n      start: null,\n      /**\n       * @type {Date}\n       */\n      end: null\n    }\n\n    this._context = this\n  }\n\n  /**\n   * The `touchstart` event handler for the `Bottom` drawer `class`\n   * @param {TouchEvent} e an event `object`: An event `object`\n   * representing an `object` of all `properties` related\n   * to the `touchstart` event.\n   * @param {Function} fn - a callback function called when the `start`\n   * event is triggered\n   * @returns {void}\n   */\n  start(e, fn) {\n    this.timing.start = new Date()\n    this._updateOrientation()\n    const WIN_HEIGHT = this.winSize\n    const start =  e.changedTouches[0].pageY || e.changedTouches[0].clientY\n    this.startX = e.changedTouches[0].pageX || e.changedTouches[0].clientX\n    this.startY = start\n    /**\n     * The `Drawer`'s `Bottom` class uses the `CSS property`, `bottom`\n     * for updating and defining position of the drawn element\n     */\n    const currentPosition = parseFloat(\n      Bottom._getStyle(this.element)[DIRECTION].replace(\n        /[^\\d]*$/, ''\n      )\n    )\n    const bound = this.bound\n    this.positionOnStart = currentPosition\n    const dimension = bound.lower ? `-${bound.upper - (WIN_HEIGHT - bound.lower)}${this.unit}` : `-${bound.upper - (WIN_HEIGHT - start)}${this.unit}`\n    const displacement = `-${bound.upper - (WIN_HEIGHT - FALSE_TOUCH_START_POINT)}${this.unit}`\n\n    if (start <= WIN_HEIGHT && start >= this.minArea && currentPosition !== ZERO) {\n      const response = {\n        [EVENT_OBJ]: e,\n        [DIMENSION]: dimension,\n        [DISPLACEMENT]: displacement\n      }\n      fn.call(this._context, response, new Rectangle(this.startX, this.startY, -1, -1))\n    }\n  }\n\n  /**\n   * The `touchmove` event handler for the `Bottom` drawer `class`\n   * @param {TouchEvent} e an event `object`: An event `object`\n   * representing an `object` of all `properties` related\n   * to the `touchmove` event.\n   * @param {Function} fn - a callback function called when the `move`\n   * event is triggered\n   * @returns {void}\n   */\n  move(e, fn) {\n    /* eslint complexity: [\"error\", 25] */\n    const WIN_HEIGHT = this.winSize\n    const FALSE_HEIGHT = WIN_HEIGHT - this.bound.upper\n    const resume = e.changedTouches[0].pageY || e.changedTouches[0].clientY\n    this.resumeX = e.changedTouches[0].pageX || e.changedTouches[0].clientX\n    this.resumeY = resume\n\n    const currentPosition = parseFloat(\n      Bottom._getStyle(this.element)[DIRECTION].replace(\n        /[^\\d]*$/, ''\n      )\n    )\n    const bound = this.bound\n    const nextAction = this.positionOnStart === ZERO ? CLOSE : OPEN\n\n    const start = this.startY\n    const height = bound.upper || this.height\n    /**\n     * When the touch doesn't start from the max-height\n     * of the element ignore `start` and use `height`\n     * as starting point.\n     */\n    const virtualStart = start < FALSE_HEIGHT ? FALSE_HEIGHT : start\n\n    /**\n     * Dimension for opening. When the drawer is being opened,\n     * the `height` is the max dimension, and the `start` can\n     * only be less than the `height` (from a range of `0` to `this.maxArea` e.g `0` - `25`), so the current\n     * reading from `resume` is subtracted from the `height` to\n     * get the accurate position to update the drawer with.\n     *\n     *\n     * **WHY IT IS LIKE THIS `height - (WIN_HEIGHT - resume)`**\n     *\n     * `WIN_HEIGHT - resume` converts it from a vector to a scalar.\n     * Keeping it as a vector makes the dimension inaccurate\n     * as the `bottom` property of the `HTMLElement.style` is the one being updated and not the `top`,\n     * so the css `bottom` property is an enough respect for its direction.\n     *\n     * *__If it should be respected then:__*,\n     * 1. The `Bottom Drawer class` would be updating `top css property` and not `bottom`, i.e, initialy an element that uses the `Bottom Drawer` must have a `css file` that defines a `css top property` for the element and not a `bottom` property; As in\n     * ```scss\n     * .menu {\n     *   top: // (window size + height of the element)px\n     * }\n     * ```\n     * 2. Cardinal's `Bottom Drawer class` can always update\n     * as `HTMLElement.style.top = ${height - resume}px`, and\n     * not as it is now.\n     * This way there is no `bottom` property respecting the direction\n     * So the vector attribute of the dimension is preserved.\n     */\n    const dimension = `-${height - (WIN_HEIGHT - resume)}${this.unit}`\n\n    /**\n     * Dimension for closing. When the drawer is being closed,\n     * the `height` is the max dimension and the `start` could\n     * possibly be more than the `height`\n     * or less than the `height`.\n     * To assure an accurate dimension the `virtualStart`\n     * determines whether to use the `height` as starting point\n     * or the actual `start`. If the actual start is more than\n     * `height`, the height becomes the start point else the `start`\n     */\n    const vdimension = `-${resume - virtualStart}${this.unit}`\n    const rect = new Rectangle(\n      this.startX,\n      this.startY,\n      this.resumeX,\n      this.resumeY\n    )\n    const isBoundY = rect.greaterHeight\n\n    if (!this.scrollControlSet) {\n      this.scrollControl = isBoundY\n      this.scrollControlSet = !this.scrollControlSet\n    }\n\n    // OPEN LOGIC\n    if (start <= WIN_HEIGHT && (start >= this.minArea || start >= FALSE_HEIGHT + currentPosition) && currentPosition !== ZERO && isBoundY && nextAction === OPEN && this.scrollControl && rect.displacementY < ZERO) {\n      const response = {\n        [EVENT_OBJ]: e,\n        [DIMENSION]: dimension,\n        open: true,\n        close: false\n      }\n      fn.call(this._context, response, rect)\n    }\n\n    // CLOSE LOGIC\n    if (resume >= FALSE_HEIGHT && Math.abs(currentPosition) < height - bound.lower && isBoundY && nextAction === CLOSE && this.scrollControl && rect.displacementY > ZERO) {\n      const response = {\n        [EVENT_OBJ]: e,\n        [DIMENSION]: vdimension,\n        close: true,\n        open: false\n      }\n      fn.call(this._context, response, rect)\n    }\n  }\n\n  /**\n   * The `touchend` event handler for the `Bottom` drawer `class`\n   * @param {TouchEvent} e an event `object`: An event `object`\n   * representing an `object` of all `properties` related\n   * to the `touchend` event.\n   * @param {Function} fn - a callback function called when the `end`\n   * event is triggered\n   * @param {{}} thresholdState - a state object which should be passed\n   * by reference for updating by this method\n   * @returns {void}\n   */\n  end(e, fn, thresholdState) {\n    this.timing.end = new Date()\n    const WIN_HEIGHT = this.winSize\n    const FALSE_HEIGHT = WIN_HEIGHT - this.bound.upper\n    const end = e.changedTouches[0].pageY || e.changedTouches[0].clientY\n    this.endX = e.changedTouches[0].pageX || e.changedTouches[0].clientX\n    this.endY = end\n\n    const rect = new Rectangle(this.startX, this.startY, this.endX, this.endY)\n\n    const start = this.startY\n    const TIMING = this.timing.end.getTime() - this.timing.start.getTime()\n    const threshold = this.threshold\n    const signedOffsetSide = parseFloat(\n      Bottom._getStyle(this.element)[DIRECTION].replace(\n        /[^\\d]*$/, ''\n      )\n    )\n    const bound = this.bound\n    const nonZero = `${bound.slack}${this.unit}`\n    const zero = `${ZERO}`\n    const offsetSide = Math.abs(signedOffsetSide)\n    let action = OPEN\n    // release the control for another session\n    this.scrollControl = this.scrollControlSet = false // eslint-disable-line no-multi-assign\n\n    const response = {\n      [EVENT_OBJ]: e,\n      position: signedOffsetSide,\n      rect\n    }\n\n    function getResponse(state, trueForOpen) {\n      const opposite = 'oppositeDimension'\n      if (state === THRESHOLD && trueForOpen || state === BELOW_THRESHOLD && !trueForOpen) {\n        return {\n          [DIMENSION]: zero,\n          TIMING,\n          [opposite]: nonZero,\n          ...response\n        }\n      } else if (state === THRESHOLD && !trueForOpen || state === BELOW_THRESHOLD && trueForOpen) {\n        return {\n          [DIMENSION]: nonZero,\n          TIMING,\n          [opposite]: zero,\n          ...response\n        }\n      }\n      return {}\n    }\n\n    // OPEN LOGIC\n    if (rect.displacementY < ZERO && (start >= this.minArea || start >= FALSE_HEIGHT + signedOffsetSide)) {\n      if (offsetSide <= this.height * threshold) {\n        thresholdState.state = [THRESHOLD, CLOSE]\n        thresholdState.stateObj = getResponse(thresholdState.state[0], true)\n      } else {\n        thresholdState.state = [BELOW_THRESHOLD, CLOSE]\n        thresholdState.stateObj = getResponse(thresholdState.state[0], true)\n      }\n      fn.call(this, action)\n      return\n    }\n\n    // CLOSE LOGIC\n    if (rect.displacementY > ZERO && this.resumeY >= FALSE_HEIGHT) {\n      action = CLOSE\n      if (offsetSide >= this.height * threshold) {\n        thresholdState.state = [THRESHOLD, OPEN]\n        thresholdState.stateObj = getResponse(thresholdState.state[0], false)\n      } else {\n        thresholdState.state = [BELOW_THRESHOLD, OPEN]\n        thresholdState.stateObj = getResponse(thresholdState.state[0], false)\n      }\n      fn.call(this, action)\n    }\n  }\n\n  setContext(ctx) {\n    this._context = ctx\n    return this\n  }\n\n  static _getStyle(elt, pseudoElt) {\n    return pseudoElt ? window.getComputedStyle(elt, pseudoElt) : window.getComputedStyle(elt)\n  }\n\n  static _windowSize() {\n    return window.screen.availHeight\n  }\n\n  // no need for `window.onorientationchange`\n  _updateOrientation() {\n    this.winSize = typeof this._winSize === 'function' ? this._winSize() : Bottom._windowSize()\n    this.minArea = this.winSize - (this.bound.lower || this.options.maxStartArea || MAX_START_AREA)\n  }\n}\n","import {\n  ZERO,\n  validateThreshold\n} from './../../util'\nimport {\n  Rectangle\n} from './../rectangle'\n\nconst DIRECTION = 'left'\nconst DIMENSION = 'dimension'\nconst DISPLACEMENT = 'displacement'\nconst EVENT_OBJ = 'event'\nconst THRESHOLD = 'threshold'\nconst BELOW_THRESHOLD = 'belowthreshold'\nconst OPEN = 'open'\nconst CLOSE = 'close'\nconst UNIT = 'px'\nconst MAX_START_AREA = 25\nconst THRESHOLD_VALUE = 0.667\nconst FALSE_TOUCH_START_POINT = 2\n\nexport default class Left {\n  /**\n   * @param {{}} options\n   * an object containing all required properties\n   * @param {Bound} bound a boundary object\n   */\n  constructor(options, bound) {\n    this.options = options\n    this.bound = bound\n    /**\n     * Drawer Element\n     * @type {HTMLElement}\n     */\n    this.element = options.ELEMENT\n    /**\n     * Size of device window\n     *\n     * unused: required in `Right` and `Bottom`\n     * @type {Function}\n     */\n    this._winSize = this.options.sizeOfWindow || Left._windowSize\n    this.winSize = this._winSize()\n    /**\n     * @type {number}\n     */\n    this.width = this.options.SIZE\n    this.unit = this.options.unit || UNIT\n    /**\n     * @type {number}\n     * A maximum area where the draw-start is sensitive\n     * Use set boundary (`bound`) if there's an initial\n     * offset\n     */\n    this.maxArea = this.bound.lower || this.options.maxStartArea || MAX_START_AREA\n\n    /**\n     * A threshold which the `touchmove` signal must attain\n     * before being qualified to stay shown\n     * the threshold should be a value between `0` and `1.0`\n     * @type {number}\n     */\n    this.threshold = this.options.threshold || THRESHOLD_VALUE\n    this.threshold = validateThreshold(this.threshold)\n\n    // Touch coordinates (Touch Start)\n    this.startX = -1\n    this.startY = -1\n    // Touch coordinates (Touch Move)\n    this.resumeX = -1\n    this.resumeY = -1\n    // Touch coordinates (Touch End) [these may not be important]\n    this.endX = -1\n    this.endY = -1\n\n    /**\n     * A control for scroll. This control prevents\n     * a clash between coordinates dancing between\n     * the (&delta;`X`) coords and (&delta;`Y`) coords.\n     * Utilising the `Rectangle` class to get bounds\n     * and isolate territories\n     * @type {boolean}\n     */\n    this.scrollControlSet = false\n    this.scrollControl = null\n    this.timing = {\n      /**\n       * @type {Date}\n       */\n      start: null,\n      /**\n       * @type {Date}\n       */\n      end: null\n    }\n\n    this._context = this\n  }\n\n  /**\n   * The `touchstart` event handler for the `Left` drawer `class`\n   * @param {TouchEvent} e an event `object`: An event `object`\n   * representing an `object` of all `properties` related\n   * to the `touchstart` event.\n   * @param {Function} fn - a callback function called when the `start`\n   * event is triggered\n   * @returns {void}\n   */\n  start(e, fn) {\n    this.timing.start = new Date()\n    const start = e.changedTouches[0].pageX || e.changedTouches[0].clientX\n    this.startX = start\n    this.startY =  e.changedTouches[0].pageY || e.changedTouches[0].clientY\n    /**\n     * The `Drawer`'s `Left` class uses the `CSS property`, `left`\n     * for updating and defining position of the drawn element\n     */\n    const currentPosition = parseFloat(\n      Left._getStyle(this.element)[DIRECTION].replace(\n        /[^\\d]*$/, ''\n      )\n    )\n    const bound = this.bound\n    this.positionOnStart = currentPosition\n    const dimension = bound.lower ? `-${bound.upper - bound.lower}${this.unit}` : `-${bound.upper - start}${this.unit}`\n    const displacement = `-${bound.upper - FALSE_TOUCH_START_POINT}${this.unit}`\n\n    if (start >= ZERO && start <= this.maxArea && currentPosition !== ZERO) {\n      const response = {\n        [EVENT_OBJ]: e,\n        [DIMENSION]: dimension,\n        [DISPLACEMENT]: displacement\n      }\n      fn.call(this._context, response, new Rectangle(this.startX, this.startY, -1, -1))\n    }\n  }\n\n  /**\n   * The `touchmove` event handler for the `Left` drawer `class`\n   * @param {TouchEvent} e an event `object`: An event `object`\n   * representing an `object` of all `properties` related\n   * to the `touchmove` event.\n   * @param {Function} fn - a callback function called when the `move`\n   * event is triggered\n   * @returns {void}\n   */\n  move(e, fn) {\n    /* eslint complexity: [\"error\", 25] */\n    const resume = e.changedTouches[0].pageX || e.changedTouches[0].clientX\n    this.resumeX = resume\n    this.resumeY = e.changedTouches[0].pageY || e.changedTouches[0].clientY\n\n    const currentPosition = parseFloat(\n      Left._getStyle(this.element)[DIRECTION].replace(\n        /[^\\d]*$/, ''\n      )\n    )\n    const bound = this.bound\n    const nextAction = this.positionOnStart === ZERO ? CLOSE : OPEN\n    const start = this.startX\n    const width = bound.upper || this.width\n    /**\n     * When the touch doesn't start from the max-width\n     * of the element ignore `start` and use `width`\n     * as starting point.\n     */\n    const virtualStart = start > width ? width : start\n    /**\n     * Dimension for opening. When the drawer is being opened,\n     * the `width` is the max dimension, and the `start` can\n     * only be less than the `width` (from a range of `0` to\n     * `this.maxArea` e.g `0` - `25`), so the current\n     * reading from `resume` is subtracted from the `width` to\n     * get the accurate position to update the drawer with.\n     */\n    const dimension = `-${width - resume}${this.unit}`\n    /**\n     * Dimension for closing. When the drawer is being closed,\n     * the `width` is the max dimension and the `start` could\n     * possibly be more than the `width`\n     * or less than the `width`.\n     * To assure an accurate dimension the `virtualStart`\n     * determines whether to use the `width` as starting point\n     * or the actual `start`. If the actual start is more than\n     * `width`, the width becomes the start point else the `start`\n     */\n    const vdimension = `-${virtualStart - resume}${this.unit}`\n    const rect = new Rectangle(\n      this.startX,\n      this.startY,\n      this.resumeX,\n      this.resumeY\n    )\n    const isBoundX = rect.greaterWidth\n\n    if (!this.scrollControlSet) {\n      this.scrollControl = isBoundX\n      this.scrollControlSet = !this.scrollControlSet\n    }\n\n    // OPEN LOGIC\n    if (start >= ZERO && (start <= this.maxArea || start <= width + currentPosition) && currentPosition !== ZERO && isBoundX && nextAction === OPEN && this.scrollControl && rect.displacementX > ZERO) {\n      const response = {\n        [EVENT_OBJ]: e,\n        [DIMENSION]: dimension,\n        open: true,\n        close: false\n      }\n      fn.call(this._context, response, rect)\n    }\n\n    // CLOSE LOGIC\n    if (resume <= width && Math.abs(currentPosition) < width - bound.lower && isBoundX && nextAction === CLOSE && this.scrollControl && rect.displacementX < ZERO) {\n      const response = {\n        [EVENT_OBJ]: e,\n        [DIMENSION]: vdimension,\n        close: true,\n        open: false\n      }\n      fn.call(this._context, response, rect)\n    }\n  }\n\n  /**\n   * The `touchend` event handler for the `Left` drawer `class`\n   * @param {TouchEvent} e an event `object`: An event `object`\n   * representing an `object` of all `properties` related\n   * to the `touchend` event.\n   * @param {Function} fn - a callback function called when the `end`\n   * event is triggered\n   * @param {{}} thresholdState - a state object which should be passed\n   * by reference for updating by this method\n   * @returns {void}\n   */\n  end(e, fn, thresholdState) {\n    this.timing.end = new Date()\n\n    const end = e.changedTouches[0].pageX || e.changedTouches[0].clientX\n    this.endX = end\n    this.endY = e.changedTouches[0].pageY || e.changedTouches[0].clientY\n\n    const rect = new Rectangle(this.startX, this.startY, this.endX, this.endY)\n\n    const start = this.startX\n    const TIMING = this.timing.end.getTime() - this.timing.start.getTime()\n    const threshold = this.threshold\n    const signedOffsetSide = parseFloat(\n      Left._getStyle(this.element)[DIRECTION].replace(\n        /[^\\d]*$/, ''\n      )\n    )\n    const bound = this.bound\n    const nonZero = `${bound.slack}${this.unit}`\n    const zero = `${ZERO}`\n    const width = bound.upper || this.width\n    const offsetSide = Math.abs(signedOffsetSide)\n    let action = OPEN\n    // release the control for another session\n    this.scrollControl = this.scrollControlSet = false // eslint-disable-line no-multi-assign\n\n    const response = {\n      [EVENT_OBJ]: e,\n      position: signedOffsetSide,\n      rect\n    }\n\n    function getResponse(state, trueForOpen) {\n      const opposite = 'oppositeDimension'\n      if (state === THRESHOLD && trueForOpen || state === BELOW_THRESHOLD && !trueForOpen) {\n        return {\n          [DIMENSION]: zero,\n          TIMING,\n          [opposite]: nonZero,\n          ...response\n        }\n      } else if (state === THRESHOLD && !trueForOpen || state === BELOW_THRESHOLD && trueForOpen) {\n        return {\n          [DIMENSION]: nonZero,\n          TIMING,\n          [opposite]: zero,\n          ...response\n        }\n      }\n      return {}\n    }\n\n    // OPEN LOGIC\n    if (rect.displacementX > ZERO && (start <= this.maxArea || start <= width + signedOffsetSide)) {\n      if (offsetSide <= this.width * threshold) {\n        thresholdState.state = [THRESHOLD, CLOSE]\n        thresholdState.stateObj = getResponse(thresholdState.state[0], true)\n      } else {\n        thresholdState.state = [BELOW_THRESHOLD, CLOSE]\n        thresholdState.stateObj = getResponse(thresholdState.state[0], true)\n      }\n      fn.call(this, action)\n      return\n    }\n\n    // CLOSE LOGIC\n    if (rect.displacementX < ZERO && this.resumeX <= this.width) {\n      action = CLOSE\n      if (offsetSide >= this.width * threshold) {\n        thresholdState.state = [THRESHOLD, OPEN]\n        thresholdState.stateObj = getResponse(thresholdState.state[0], false)\n      } else {\n        thresholdState.state = [BELOW_THRESHOLD, OPEN]\n        thresholdState.stateObj = getResponse(thresholdState.state[0], false)\n      }\n      fn.call(this, action)\n    }\n    this.startX = -1\n    this.startY = -1\n    this.resumeX = -1\n    this.resumeY = -1\n    this.endX = -1\n    this.endY = -1\n  }\n\n  setContext(ctx) {\n    this._context = ctx\n    return this\n  }\n\n  static _getStyle(elt, pseudoElt) {\n    return pseudoElt ? window.getComputedStyle(elt, pseudoElt) : window.getComputedStyle(elt)\n  }\n\n  static _windowSize() {\n    return window.screen.availWidth\n  }\n}\n","import {\n  ZERO,\n  validateThreshold\n} from './../../util'\nimport {\n  Rectangle\n} from './../rectangle'\n\nconst DIRECTION = 'right'\nconst DIMENSION = 'dimension'\nconst DISPLACEMENT = 'displacement'\nconst EVENT_OBJ = 'event'\nconst THRESHOLD = 'threshold'\nconst BELOW_THRESHOLD = 'belowthreshold'\nconst OPEN = 'open'\nconst CLOSE = 'close'\nconst UNIT = 'px'\nconst MAX_START_AREA = 25\nconst THRESHOLD_VALUE = 0.667\nconst FALSE_TOUCH_START_POINT = 2\n\nexport default class Right {\n  /**\n   * @param {{}} options\n   * an object containing all required properties\n   * @param {Bound} bound a boundary object\n   */\n  constructor(options, bound) {\n    this.options = options\n    this.bound = bound\n    /**\n     * Drawer Element\n     * @type {HTMLElement}\n     */\n    this.element = options.ELEMENT\n    /**\n     * Size of device window\n     * @type {Function}\n     */\n    this._winSize = this.options.sizeOfWindow || Right._windowSize\n    /**\n     * @type {number}\n     */\n    this.winSize = this._winSize()\n    /**\n     * @type {number}\n     */\n    this.width = this.options.SIZE\n    this.unit = this.options.unit || UNIT\n    /**\n     * @type {number}\n     * A minimum area where the draw-start is sensitive\n     */\n    this.minArea = this.winSize - (this.bound.lower || this.options.maxStartArea || MAX_START_AREA)\n\n    /**\n     * A threshold which the `touchmove` signal must attain\n     * before being qualified to stay shown\n     * the threshold should be a value between `0` and `1.0`\n     * @type {number}\n     */\n    this.threshold = this.options.threshold || THRESHOLD_VALUE\n    this.threshold = validateThreshold(this.threshold)\n\n    // Touch coordinates (Touch Start)\n    this.startX = -1\n    this.startY = -1\n    // Touch coordinates (Touch Move)\n    this.resumeX = -1\n    this.resumeY = -1\n    // Touch coordinates (Touch End) [these may not be important]\n    this.endX = -1\n    this.endY = -1\n\n    /**\n     * A control for scroll. This control prevents\n     * a clash between coordinates dancing between\n     * the (&delta;`X`) coords and (&delta;`Y`) coords.\n     * Utilising the `Rectangle` class to get bounds\n     * and isolate territories\n     * @type {boolean}\n     */\n    this.scrollControlSet = false\n    this.scrollControl = null\n    this.timing = {\n      /**\n       * @type {Date}\n       */\n      start: null,\n      /**\n       * @type {Date}\n       */\n      end: null\n    }\n\n    this._context = this\n  }\n\n  /**\n   * The `touchstart` event handler for the `Left` drawer `class`\n   * @param {TouchEvent} e an event `object`: An event `object`\n   * representing an `object` of all `properties` related\n   * to the `touchstart` event.\n   * @param {Function} fn - a callback function called when the `start`\n   * event is triggered\n   * @returns {void}\n   */\n  start(e, fn) {\n    this.timing.start = new Date()\n    this._updateOrientation()\n    const WIN_WIDTH = this.winSize\n    const start = e.changedTouches[0].pageX || e.changedTouches[0].clientX\n    this.startX = start\n    this.startY =  e.changedTouches[0].pageY || e.changedTouches[0].clientY\n    /**\n     * The `Drawer`'s `Right` class uses the `CSS property`, `right`\n     * for updating and defining position of the drawn element\n     */\n    const currentPosition = parseFloat(\n      Right._getStyle(this.element)[DIRECTION].replace(\n        /[^\\d]*$/, ''\n      )\n    )\n    const bound = this.bound\n    this.positionOnStart = currentPosition\n    const dimension = bound.lower ? `-${bound.upper - (WIN_WIDTH - bound.lower)}${this.unit}` : `-${bound.upper - (WIN_WIDTH - start)}${this.unit}`\n    const displacement = `-${bound.upper - (WIN_WIDTH - FALSE_TOUCH_START_POINT)}${this.unit}`\n\n    if (start <= WIN_WIDTH && start >= this.minArea && currentPosition !== ZERO) {\n      const response = {\n        [EVENT_OBJ]: e,\n        [DIMENSION]: dimension,\n        [DISPLACEMENT]: displacement\n      }\n      fn.call(this._context, response, new Rectangle(this.startX, this.startY, -1, -1))\n    }\n  }\n\n  /**\n   * The `touchmove` event handler for the `Right` drawer `class`\n   * @param {TouchEvent} e an event `object`: An event `object`\n   * representing an `object` of all `properties` related\n   * to the `touchmove` event.\n   * @param {Function} fn - a callback function called when the `move`\n   * event is triggered\n   * @returns {void}\n   */\n  move(e, fn) {\n    /* eslint complexity: [\"error\", 25] */\n    const WIN_WIDTH = this.winSize\n    const FALSE_WIDTH = WIN_WIDTH - this.bound.upper\n    const resume = e.changedTouches[0].pageX || e.changedTouches[0].clientX\n    this.resumeX = resume\n    this.resumeY = e.changedTouches[0].pageY || e.changedTouches[0].clientY\n\n    const currentPosition = parseFloat(\n      Right._getStyle(this.element)[DIRECTION].replace(\n        /[^\\d]*$/, ''\n      )\n    )\n    const bound = this.bound\n    const nextAction = this.positionOnStart === ZERO ? CLOSE : OPEN\n\n    const start = this.startX\n    const width = bound.upper || this.width\n    /**\n     * When the touch doesn't start from the max-width\n     * of the element ignore `start` and use `width`\n     * as starting point.\n     */\n    const virtualStart = start < FALSE_WIDTH ? FALSE_WIDTH : start\n\n    /**\n     * Dimension for opening. When the drawer is being opened,\n     * the `width` is the max dimension, and the `start` can\n     * only be less than the `width` (from a range of `0` to `this.maxArea` e.g `0` - `25`), so the current\n     * reading from `resume` is subtracted from the `width` to\n     * get the accurate position to update the drawer with.\n     *\n     *\n     * **WHY IT IS LIKE THIS `width - (WIN_WIDTH - resume)`**\n     *\n     * `WIN_WIDTH - resume` converts it from a vector to a scalar.\n     * Keeping it as a vector makes the dimension inaccurate\n     * as the `right` property of the `HTMLElement.style` is the one being updated and not the `left`,\n     * so the css `right` property is an enough respect for its direction.\n     *\n     * *__If it should be respected then:__*,\n     * 1. The `Right Drawer class` would be updating `left css property` and not `right`, i.e, initialy an element that uses the `Right Drawer` must have a `css file` that defines a `css left property` for the element and not a `right` property; As in\n     * ```scss\n     * .menu {\n     *   left: // (window size + width of the element)px\n     * }\n     * ```\n     * 2. Cardinal's `Right Drawer class` can always update\n     * as `HTMLElement.style.left = ${width - resume}px`, and\n     * not as it is now.\n     * This way there is no `right` property respecting the direction\n     * So the vector attribute of the dimension is preserved.\n     */\n    const dimension = `-${width - (WIN_WIDTH - resume)}${this.unit}`\n\n    /**\n     * Dimension for closing. When the drawer is being closed,\n     * the `width` is the max dimension and the `start` could\n     * possibly be more than the `width`\n     * or less than the `width`.\n     * To assure an accurate dimension the `virtualStart`\n     * determines whether to use the `width` as starting point\n     * or the actual `start`. If the actual start is more than\n     * `width`, the width becomes the start point else the `start`\n     */\n    const vdimension = `-${resume - virtualStart}${this.unit}`\n    const rect = new Rectangle(\n      this.startX,\n      this.startY,\n      this.resumeX,\n      this.resumeY\n    )\n    const isBoundX = rect.greaterWidth\n\n    if (!this.scrollControlSet) {\n      this.scrollControl = isBoundX\n      this.scrollControlSet = !this.scrollControlSet\n    }\n\n    // OPEN LOGIC\n    if (start <= WIN_WIDTH && (start >= this.minArea || start >= FALSE_WIDTH + currentPosition) && currentPosition !== ZERO && isBoundX && nextAction === OPEN && this.scrollControl && rect.displacementX < ZERO) {\n      const response = {\n        [EVENT_OBJ]: e,\n        [DIMENSION]: dimension,\n        open: true,\n        close: false\n      }\n      fn.call(this._context, response, rect)\n    }\n\n    // CLOSE LOGIC\n    if (resume >= FALSE_WIDTH && Math.abs(currentPosition) < width - bound.lower && isBoundX && nextAction === CLOSE && this.scrollControl && rect.displacementX > ZERO) {\n      const response = {\n        [EVENT_OBJ]: e,\n        [DIMENSION]: vdimension,\n        close: true,\n        open: false\n      }\n      fn.call(this._context, response, rect)\n    }\n  }\n\n  /**\n   * The `touchend` event handler for the `Right` drawer `class`\n   * @param {TouchEvent} e an event `object`: An event `object`\n   * representing an `object` of all `properties` related\n   * to the `touchend` event.\n   * @param {Function} fn - a callback function called when the `end`\n   * event is triggered\n   * @param {{}} thresholdState - a state object which should be passed\n   * by reference for updating by this method\n   * @returns {void}\n   */\n  end(e, fn, thresholdState) {\n    this.timing.end = new Date()\n    const WIN_WIDTH = this.winSize\n    const FALSE_WIDTH = WIN_WIDTH - this.bound.upper\n    const end = e.changedTouches[0].pageX || e.changedTouches[0].clientX\n    this.endX = end\n    this.endY = e.changedTouches[0].pageY || e.changedTouches[0].clientY\n\n    const rect = new Rectangle(this.startX, this.startY, this.endX, this.endY)\n\n    const start = this.startX\n    const TIMING = this.timing.end.getTime() - this.timing.start.getTime()\n    const threshold = this.threshold\n    const signedOffsetSide = parseFloat(\n      Right._getStyle(this.element)[DIRECTION].replace(\n        /[^\\d]*$/, ''\n      )\n    )\n    const bound = this.bound\n    const nonZero = `${bound.slack}${this.unit}`\n    const zero = `${ZERO}`\n    const offsetSide = Math.abs(signedOffsetSide)\n    let action = OPEN\n    // release the control for another session\n    this.scrollControl = this.scrollControlSet = false // eslint-disable-line no-multi-assign\n\n    const response = {\n      [EVENT_OBJ]: e,\n      position: signedOffsetSide,\n      rect\n    }\n\n    function getResponse(state, trueForOpen) {\n      const opposite = 'oppositeDimension'\n      if (state === THRESHOLD && trueForOpen || state === BELOW_THRESHOLD && !trueForOpen) {\n        return {\n          [DIMENSION]: zero,\n          TIMING,\n          [opposite]: nonZero,\n          ...response\n        }\n      } else if (state === THRESHOLD && !trueForOpen || state === BELOW_THRESHOLD && trueForOpen) {\n        return {\n          [DIMENSION]: nonZero,\n          TIMING,\n          [opposite]: zero,\n          ...response\n        }\n      }\n      return {}\n    }\n\n    // OPEN LOGIC\n    if (rect.displacementX < ZERO && (start >= this.minArea || start >= FALSE_WIDTH + signedOffsetSide)) {\n      if (offsetSide <= this.width * threshold) {\n        thresholdState.state = [THRESHOLD, CLOSE]\n        thresholdState.stateObj = getResponse(thresholdState.state[0], true)\n      } else {\n        thresholdState.state = [BELOW_THRESHOLD, CLOSE]\n        thresholdState.stateObj = getResponse(thresholdState.state[0], true)\n      }\n      fn.call(this, action)\n      return\n    }\n\n    // CLOSE LOGIC\n    if (rect.displacementX > ZERO && this.resumeX >= FALSE_WIDTH) {\n      action = CLOSE\n      if (offsetSide >= this.width * threshold) {\n        thresholdState.state = [THRESHOLD, OPEN]\n        thresholdState.stateObj = getResponse(thresholdState.state[0], false)\n      } else {\n        thresholdState.state = [BELOW_THRESHOLD, OPEN]\n        thresholdState.stateObj = getResponse(thresholdState.state[0], false)\n      }\n      fn.call(this, action)\n    }\n  }\n\n  setContext(ctx) {\n    this._context = ctx\n    return this\n  }\n\n  static _getStyle(elt, pseudoElt) {\n    return pseudoElt ? window.getComputedStyle(elt, pseudoElt) : window.getComputedStyle(elt)\n  }\n\n  static _windowSize() {\n    return window.screen.availWidth\n  }\n\n  // no need for `window.onorientationchange`\n  _updateOrientation() {\n    this.winSize = typeof this._winSize === 'function' ? this._winSize() : Right._windowSize()\n    this.minArea = this.winSize - (this.bound.lower || this.options.maxStartArea || MAX_START_AREA)\n  }\n}\n","import {\n  ZERO,\n  validateThreshold\n} from './../../util'\nimport {\n  Rectangle\n} from './../rectangle'\n\nconst DIRECTION = 'top'\nconst DIMENSION = 'dimension'\nconst DISPLACEMENT = 'displacement'\nconst EVENT_OBJ = 'event'\nconst THRESHOLD = 'threshold'\nconst BELOW_THRESHOLD = 'belowthreshold'\nconst OPEN = 'open'\nconst CLOSE = 'close'\nconst UNIT = 'px'\nconst MAX_START_AREA = 25\nconst THRESHOLD_VALUE = 0.667\nconst FALSE_TOUCH_START_POINT = 2\n\nexport default class Top {\n  /**\n   * @param {{}} options\n   * an object containing all required properties\n   * @param {Bound} bound a boundary object\n   */\n  constructor(options, bound) {\n    this.options = options\n    this.bound = bound\n    /**\n     * Drawer Element\n     * @type {HTMLElement}\n     */\n    this.element = options.ELEMENT\n    /**\n     * Size of device window\n     *\n     * unused: required in `Right` and `Bottom`\n     * @type {Function}\n     */\n    this._winSize = this.options.sizeOfWindow || Top._windowSize\n    this.winSize = this._winSize()\n    /**\n     * @type {number}\n     */\n    this.height = this.options.SIZE\n    this.unit = this.options.unit || UNIT\n    /**\n     * @type {number}\n     * A maximum area where the draw-start is sensitive\n     * Use set boundary (`bound`) if there's an initial\n     * offset\n     */\n    this.maxArea = this.bound.lower || this.options.maxStartArea || MAX_START_AREA\n\n    /**\n     * A threshold which the `touchmove` signal must attain\n     * before being qualified to stay shown\n     * the threshold should be a value between `0` and `1.0`\n     * @type {number}\n     */\n    this.threshold = this.options.threshold || THRESHOLD_VALUE\n    this.threshold = validateThreshold(this.threshold)\n\n    // Touch coordinates (Touch Start)\n    this.startX = -1\n    this.startY = -1\n    // Touch coordinates (Touch Move)\n    this.resumeX = -1\n    this.resumeY = -1\n    // Touch coordinates (Touch End) [these may not be important]\n    this.endX = -1\n    this.endY = -1\n\n    /**\n     * A control for scroll. This control prevents\n     * a clash between coordinates dancing between\n     * the (&delta;`X`) coords and (&delta;`Y`) coords.\n     * Utilising the `Rectangle` class to get bounds\n     * and isolate territories\n     * @type {boolean}\n     */\n    this.scrollControlSet = false\n    this.scrollControl = null\n    this.timing = {\n      /**\n       * @type {Date}\n       */\n      start: null,\n      /**\n       * @type {Date}\n       */\n      end: null\n    }\n\n    this._context = this\n  }\n\n  /**\n   * The `touchstart` event handler for the `Top` drawer `class`\n   * @param {TouchEvent} e an event `object`: An event `object`\n   * representing an `object` of all `properties` related\n   * to the `touchstart` event.\n   * @param {Function} fn - a callback function called when the `start`\n   * event is triggered\n   * @returns {void}\n   */\n  start(e, fn) {\n    this.timing.start = new Date()\n    const start =  e.changedTouches[0].pageY || e.changedTouches[0].clientY\n    this.startX = e.changedTouches[0].pageX || e.changedTouches[0].clientX\n    this.startY = start\n    /**\n     * The `Drawer`'s `Top` class uses the `CSS property`, `top`\n     * for updating and defining position of the drawn element\n     */\n    const currentPosition = parseFloat(\n      Top._getStyle(this.element)[DIRECTION].replace(\n        /[^\\d]*$/, ''\n      )\n    )\n    const bound = this.bound\n    this.positionOnStart = currentPosition\n    const dimension = bound.lower ? `-${bound.upper - bound.lower}${this.unit}` : `-${bound.upper - start}${this.unit}`\n    const displacement = `-${bound.upper - FALSE_TOUCH_START_POINT}${this.unit}`\n\n    if (start >= ZERO && start <= this.maxArea && currentPosition !== ZERO) {\n      const response = {\n        [EVENT_OBJ]: e,\n        [DIMENSION]: dimension,\n        [DISPLACEMENT]: displacement\n      }\n      fn.call(this._context, response, new Rectangle(this.startX, this.startY, -1, -1))\n    }\n  }\n\n  /**\n   * The `touchmove` event handler for the `Top` drawer `class`\n   * @param {TouchEvent} e an event `object`: An event `object`\n   * representing an `object` of all `properties` related\n   * to the `touchmove` event.\n   * @param {Function} fn - a callback function called when the `move`\n   * event is triggered\n   * @returns {void}\n   */\n  move(e, fn) {\n    /* eslint complexity: [\"error\", 25] */\n    const resume = e.changedTouches[0].pageY || e.changedTouches[0].clientY\n    this.resumeX = e.changedTouches[0].pageX || e.changedTouches[0].clientX\n    this.resumeY = resume\n\n    const currentPosition = parseFloat(\n      Top._getStyle(this.element)[DIRECTION].replace(\n        /[^\\d]*$/, ''\n      )\n    )\n    const bound = this.bound\n    const nextAction = this.positionOnStart === ZERO ? CLOSE : OPEN\n\n    const start = this.startX\n    const height = bound.upper || this.height\n    /**\n     * When the touch doesn't start from the max-height\n     * of the element ignore `start` and use `height`\n     * as starting point.\n     */\n    const virtualStart = start > height ? height : start\n    /**\n     * Dimension for opening. When the drawer is being opened,\n     * the `height` is the max dimension, and the `start` can\n     * only be less than the `height` (from a range of `0` to\n     * `this.maxArea` e.g `0` - `25`), so the current\n     * reading from `resume` is subtracted from the `height` to\n     * get the accurate position to update the drawer with.\n     */\n    const dimension = `-${height - resume}${this.unit}`\n    /**\n     * Dimension for closing. When the drawer is being closed,\n     * the `height` is the max dimension and the `start` could\n     * possibly be more than the `height`\n     * or less than the `height`.\n     * To assure an accurate dimension the `virtualStart`\n     * determines whether to use the `height` as starting point\n     * or the actual `start`. If the actual start is more than\n     * `height`, the height becomes the start point else the `start`\n     */\n    const vdimension = `-${virtualStart - resume}${this.unit}`\n    const rect = new Rectangle(\n      this.startX,\n      this.startY,\n      this.resumeX,\n      this.resumeY\n    )\n    const isBoundY = rect.greaterHeight\n\n    if (!this.scrollControlSet) {\n      this.scrollControl = isBoundY\n      this.scrollControlSet = !this.scrollControlSet\n    }\n\n    // OPEN LOGIC\n    if (start >= ZERO && (start <= this.maxArea || start <= height + currentPosition) && currentPosition !== ZERO && isBoundY && nextAction === OPEN && this.scrollControl && rect.displacementY > ZERO) {\n      const response = {\n        [EVENT_OBJ]: e,\n        [DIMENSION]: dimension,\n        open: true,\n        close: false\n      }\n      fn.call(this._context, response, rect)\n    }\n\n    // CLOSE LOGIC\n    if (resume <= this.height && Math.abs(currentPosition) < height - bound.lower && isBoundY && nextAction === CLOSE && this.scrollControl && rect.displacementY < ZERO) {\n      const response = {\n        [EVENT_OBJ]: e,\n        [DIMENSION]: vdimension,\n        close: true,\n        open: false\n      }\n      fn.call(this._context, response, rect)\n    }\n  }\n\n  /**\n   * The `touchend` event handler for the `Top` drawer `class`\n   * @param {TouchEvent} e an event `object`: An event `object`\n   * representing an `object` of all `properties` related\n   * to the `touchend` event.\n   * @param {Function} fn - a callback function called when the `end`\n   * event is triggered\n   * @param {{}} thresholdState - a state object which should be passed\n   * by reference for updating by this method\n   * @returns {void}\n   */\n  end(e, fn, thresholdState) {\n    this.timing.end = new Date()\n\n    const end = e.changedTouches[0].pageY || e.changedTouches[0].clientY\n    this.endX = e.changedTouches[0].pageX || e.changedTouches[0].clientX\n    this.endY = end\n\n    const rect = new Rectangle(this.startX, this.startY, this.endX, this.endY)\n\n    const start = this.startY\n    const TIMING = this.timing.end.getTime() - this.timing.start.getTime()\n    const threshold = this.threshold\n    const signedOffsetSide = parseFloat(\n      Top._getStyle(this.element)[DIRECTION].replace(\n        /[^\\d]*$/, ''\n      )\n    )\n    const bound = this.bound\n    const nonZero = `${bound.slack}${this.unit}`\n    const zero = `${ZERO}`\n    const height = bound.upper || this.height\n    const offsetSide = Math.abs(signedOffsetSide)\n    let action = OPEN\n    // release the control for another session\n    this.scrollControl = this.scrollControlSet = false // eslint-disable-line no-multi-assign\n\n    const response = {\n      [EVENT_OBJ]: e,\n      position: signedOffsetSide,\n      rect\n    }\n\n    function getResponse(state, trueForOpen) {\n      const opposite = 'oppositeDimension'\n      if (state === THRESHOLD && trueForOpen || state === BELOW_THRESHOLD && !trueForOpen) {\n        return {\n          [DIMENSION]: zero,\n          TIMING,\n          [opposite]: nonZero,\n          ...response\n        }\n      } else if (state === THRESHOLD && !trueForOpen || state === BELOW_THRESHOLD && trueForOpen) {\n        return {\n          [DIMENSION]: nonZero,\n          TIMING,\n          [opposite]: zero,\n          ...response\n        }\n      }\n      return {}\n    }\n\n    // OPEN LOGIC\n    if (rect.displacementY > ZERO && (start <= this.maxArea || start <= height + signedOffsetSide)) {\n      if (offsetSide <= this.height * threshold) {\n        thresholdState.state = [THRESHOLD, CLOSE]\n        thresholdState.stateObj = getResponse(thresholdState.state[0], true)\n      } else {\n        thresholdState.state = [BELOW_THRESHOLD, CLOSE]\n        thresholdState.stateObj = getResponse(thresholdState.state[0], true)\n      }\n      fn.call(this, action)\n      return\n    }\n\n    // CLOSE LOGIC\n    if (rect.displacementY < ZERO && this.resumeY <= this.height) {\n      action = CLOSE\n      if (offsetSide >= this.height * threshold) {\n        thresholdState.state = [THRESHOLD, OPEN]\n        thresholdState.stateObj = getResponse(thresholdState.state[0], false)\n      } else {\n        thresholdState.state = [BELOW_THRESHOLD, OPEN]\n        thresholdState.stateObj = getResponse(thresholdState.state[0], false)\n      }\n      fn.call(this, action)\n    }\n  }\n\n  setContext(ctx) {\n    this._context = ctx\n    return this\n  }\n\n  static _getStyle(elt, pseudoElt) {\n    return pseudoElt ? window.getComputedStyle(elt, pseudoElt) : window.getComputedStyle(elt)\n  }\n\n  static _windowSize() {\n    return window.screen.availHeight\n  }\n}\n","import Bottom from './bottom'\nimport Left from './left'\nimport Right from './right'\nimport Top from './top'\n\nconst BELOW_THRESHOLD = 'belowthreshold'\nconst THRESHOLD = 'threshold'\nconst START = 'start'\nconst MOVE = 'move'\nconst END = 'end'\n\nexport default class SnappedDrawer {\n  /**\n   * @param {{}} options an object of configuration options\n   * @param {Bound} bound a boundary object\n   */\n  constructor(options, bound) {\n    this._options = options\n    /**\n     * @type {HTMLElement}\n     */\n    this._element = options.ELEMENT\n    this._target = options.TARGET\n    this.events = ['touchstart', 'touchmove', 'touchend']\n    this._handlers = null\n    this._direction = options.DIRECTION\n    this._callibration = null\n    /**\n     * @type {{}}\n     */\n    this._callbacks = null\n    this._context = this\n\n    this._setCalibration(this._direction, bound)\n  }\n\n  // enum\n  static UP = 0\n  static LEFT = 1\n  static DOWN = 2\n  static RIGHT = 3\n\n  // public\n  /**\n   * Make sure event handlers are registered using `Drawer.on(...)` before\n   * calling `Drawer.activate()`\n   *\n   * @see {@link Drawer#on | Drawer.on}\n   * @returns {void}\n   */\n  activate() {\n    // get registered callbacks or set default\n    const startfn = this._callbacks ? this._callbacks[START] : def\n    const movefn = this._callbacks ? this._callbacks[MOVE] : def\n    const endfn = this._callbacks ? this._callbacks[END] : def\n\n    const startHandler = (e) => {\n      if (this._direction !== null) {\n        this._callibration.start(e, startfn)\n      } else {\n        this.deactivate()\n      }\n    }\n\n    const moveHandler = (e) => {\n      if (this._direction !== null) {\n        this._callibration.move(e, movefn)\n      } else {\n        this.deactivate()\n      }\n    }\n\n    const endHandler = (e) => {\n      if (this._direction !== null) {\n        const state = {}\n        this._callibration.end(e, endfn, state) // state by Ref\n        this._processThresholdState(state)\n      } else {\n        this.deactivate()\n      }\n    }\n\n    this._register(startHandler, moveHandler, endHandler)\n    for (let i = 0; i < this.events.length; i++) {\n      this._target.addEventListener(this.events[i], this._handlers[i])\n    }\n  }\n\n  /**\n   * A method provided by the `Drawer interface` to deactivate the drawer\n   * @returns {void}\n   */\n  deactivate() {\n    for (let i = 0; i < this.events.length; i++) {\n      this._target.removeEventListener(this.events[i], this._handlers[i])\n    }\n    this._register(null)\n  }\n\n  /**\n   * A function used to register callbacks for the `Drawer class` `touchstart`,\n   * `touchmove` and `touchend` event handlers.\n   *\n   * Always call `Drawer.on(...)` before `Drawer.activate()`.\n   * As in:\n   * ```js\n   * const drawer = new Drawer()\n   * drawer.on(event, () => {\n   *  // TODO\n   * }).activate()\n   * ```\n   *\n   * To prevent modifying the context of `this`, the\n   * `drawer.setContext(...)` method should be invoked with an\n   * argument which is the `this` context of the\n   * `calling class` or alternatively using a wrapper function,\n   * then call the main handler method.\n   * ```js\n   * class UseDrawer {\n   *  // CODE\n   *  method() {\n   *    const drawer = new Drawer()\n   *    drawer.on(...)\n   *      .setContext(this)\n   *      .activate()\n   *  }\n   * }\n   * // OR\n   * drawer.on(event, (stateObj) => {\n   *  this.handler.call(this, stateObj)\n   * }).activate()\n   * ```\n   *\n   * Valid event types taken by this method are:\n   * - `start`\n   * - `move`\n   * - `end`\n   * - `threshold`\n   * - `belowthreshold`\n   * @param {string} event The event type as in the above list\n   * @param {Function} fn A function to call when this event triggers\n   * @returns {this} Returns an instance variable of the `Drawer` class\n   */\n  on(event, fn) {\n    this._registerCallbacks(event, fn)\n    return this\n  }\n\n  setContext(ctx) {\n    this._context = ctx\n    this._callibration.setContext(ctx)\n    return this\n  }\n\n  toString() {\n    return '[object SnappedDrawer]'\n  }\n\n  _processThresholdState(state) {\n    if (Object.keys(state).length < 1) {\n      return\n    }\n    const thState = state.state[0]\n    const vector = state.stateObj.rect\n    delete state.stateObj.rect\n    this._callbacks[thState].call(this._context, state.state, state.stateObj, vector)\n  }\n\n  _setCalibration(point, bound) {\n    switch (point) {\n      case SnappedDrawer.UP:\n        this._callibration = new Top(this._options, bound)\n        break\n      case SnappedDrawer.LEFT:\n        this._callibration = new Left(this._options, bound)\n        break\n      case SnappedDrawer.DOWN:\n        this._callibration = new Bottom(this._options, bound)\n        break\n      case SnappedDrawer.RIGHT:\n        this._callibration = new Right(this._options, bound)\n        break\n      default:\n        throw RangeError('Direction out of range')\n    }\n  }\n\n  _registerCallbacks(event, fn) {\n    this._callbacks = this._callbacks || {\n      [START]: def,\n      [MOVE]: def,\n      [END]: def,\n      [THRESHOLD]: def,\n      [BELOW_THRESHOLD]: def\n    }\n    if (event in this._callbacks) {\n      this._callbacks[event] = fn\n    }\n  }\n\n  // private\n  _register(...handlers) {\n    this._handlers = handlers\n  }\n}\n\nfunction def() {\n  return false\n}\n","import SnappedDrawer from './snapped-drawer'\n\nexport default class Drawer {\n  static SnappedDrawer = SnappedDrawer\n  // enum\n  static UP = SnappedDrawer.UP\n  static LEFT = SnappedDrawer.LEFT\n  static DOWN = SnappedDrawer.DOWN\n  static RIGHT = SnappedDrawer.RIGHT\n}\n","import {\n  css\n} from '../util'\n\nexport class Backdrop {\n  constructor(backdrop) {\n    this.backdrop = backdrop\n  }\n\n  show(time) {\n    css(this.backdrop, {\n      display: 'block',\n      opacity: 1,\n      transition: `opacity linear ${time / 1e3}s`\n    })\n  }\n\n  hide(time) {\n    css(this.backdrop, {\n      opacity: 0,\n      transition: `opacity linear ${time / 1e3}s`\n    })\n    window.setTimeout(() => {\n      css(this.backdrop, {\n        display: 'none'\n      })\n    }, time)\n  }\n\n  setOpacity(val) {\n    css(this.backdrop, {\n      display: 'block',\n      opacity: val,\n      transition: 'none'\n    })\n  }\n}\n","export default {\n  navstate: null\n}\n","import STATE from './state'\nimport {\n  getAttribute\n} from './../util'\n\nclass HashState {\n  constructor(parentService, options) {\n    this.options = options\n    this.parentService = parentService\n    this.button = options.INIT_ELEM\n    this.event = 'hashchange'\n    this.handler = null\n  }\n\n  activate() {\n    const handler = (e) => {\n      this._hashchange(e)\n    }\n    this._register(handler)\n    window.addEventListener(this.event, this.handler)\n    return 0\n  }\n\n  deactivate() {\n    window.removeEventListener(this.event, this.handler)\n    this._register(null)\n    return 0\n  }\n\n  _hashchange(e) {\n    const oldHash = HashState._getHash(e.oldURL)\n    if (oldHash === getAttribute(this.button, 'href') && STATE.navstate && STATE.navstate.alive) {\n      this.parentService._close()\n    }\n  }\n\n  _register(handler) {\n    this.handler = handler\n  }\n\n  static _getHash(uri) {\n    let hash = uri\n    const indexOfHash = hash.lastIndexOf('#')\n    hash = indexOfHash !== -1 ? hash.slice(indexOfHash).replace(/(?:[^\\w\\d-]+)$/) : null\n    return hash\n  }\n}\n\nexport default HashState\n","import {\n  Bound,\n  DIRECTIONS,\n  NAV_BOX_SHADOW,\n  css,\n  getAttribute,\n  getData\n} from './../util'\nimport Drawer from './../drawer/'\nimport STATE from './state'\n\nconst ZERO = 0\nconst KILO = 1e3\nconst MIN_TIME_TO_OVERRIDE_BELOWTHRESHOLD = 0.5\nconst MIN_POSITIVE_DISPLACEMENT = 10\nconst MIN_NEGATIVE_DISPLACEMENT = -MIN_POSITIVE_DISPLACEMENT\nconst TRANSITION_STYLE = 'linear'\nconst EFFECT = 'transition'\nconst OVERFLOW = 'overflow'\nconst TRANS_TIMING = '0.1s'\nconst TRANS_TEMPLATE = `${TRANSITION_STYLE} ${TRANS_TIMING}`\nconst HIDDEN = 'hidden'\nconst SCROLL = 'scroll'\nconst HREF = 'href'\nconst HASH_ATTR = `data-${HREF}`\nconst START = 'start'\nconst MOVE = 'move'\nconst THRESHOLD = 'threshold'\nconst BELOW_THRESHOLD = `below${THRESHOLD}`\nconst MAX_TIME = KILO\nconst MAX_SPEED = 500\n\nclass NavDrawer {\n  /**\n   * Creates a new NavDrawer object. Providing the Left and Right\n   * Drawer functionality.\n   * Support for Top and Bottom may come in the future\n   * @throws RangeError\n   * @param {{}} options An options Object to configure the Drawer with\n   */\n  constructor(options) {\n    this.options = options\n    this.element = this.options.ELEMENT\n    this._body = this.options.BODY\n    this._backdrop = this.options.BACKDROP\n    this.direction = this.options.DIRECTION\n\n    this._checkDirection()\n\n    this.directionString = DIRECTIONS[this.direction]\n    this.bound = this._bound\n\n    const o = {\n      ...options,\n      SIZE: this.elementSize,\n      TARGET: document\n    }\n    this.drawer = new Drawer.SnappedDrawer(o, this.bound)\n    this.transition = `${this.directionString} ${TRANS_TEMPLATE}`\n  }\n\n  activate() {\n    this.drawer.on(START, this._startHandler)\n      .on(MOVE, this._moveHandler)\n      .on(THRESHOLD, this._threshold)\n      .on(BELOW_THRESHOLD, this._belowThreshold)\n      .setContext(this)\n      .activate()\n    return 0\n  }\n\n  deactivate() {\n    this.drawer.deactivate()\n    return 0\n  }\n\n  get elementSize() {\n    const axis = this.direction\n    if (axis === Drawer.UP || axis === Drawer.DOWN) {\n      return this.element.offsetHeight\n    }\n    return this.element.offsetWidth\n  }\n\n  /**\n   * @returns {Bound} a boundary object: Bound\n   */\n  get _bound() {\n    const curPos = css(this.element, this.directionString)\n      .replace(/[^\\d]*$/, '')\n    const upperBound = this.elementSize\n    const lowerBound = upperBound + parseInt(curPos, 10)\n    return new Bound(lowerBound, upperBound)\n  }\n\n  _startHandler(response) {\n    css(this.element, {\n      [this.directionString]: response.dimension,\n      boxShadow: NAV_BOX_SHADOW[this.directionString],\n      [EFFECT]: this.transition\n    })\n    this._body.style.overflow = HIDDEN\n  }\n\n  _moveHandler(response, rectangle) {\n    let curPos = this.direction === Drawer.UP || this.direction === Drawer.DOWN ? rectangle.coordsY.y2 : rectangle.coordsX.x2\n    css(this.element, {\n      [this.directionString]: response.dimension,\n      [EFFECT]: 'none',\n      [OVERFLOW]: HIDDEN\n    })\n    if (this.direction === Drawer.RIGHT) {\n      const WIN_SIZE = window.screen.availWidth\n      curPos = WIN_SIZE - curPos\n      this._backdrop.setOpacity(curPos / this.elementSize)\n      return\n    }\n    this._backdrop.setOpacity(curPos / this.elementSize)\n  }\n\n  _threshold(state, stateObj) {\n    const isOpen = state[1] === 'open'\n    const options = {\n      stateObj,\n      transition: `${this.directionString} ease ${this._calcSpeed(stateObj.TIMING) / KILO}s`\n    }\n    if (isOpen) {\n      this._hide(options)\n    } else {\n      this._show(options)\n    }\n  }\n\n  _belowThreshold(state, stateObj, rect) {\n    const isClosed = state[1] !== 'open'\n    const overallEventTime = stateObj.TIMING\n    const MTTOB = MIN_TIME_TO_OVERRIDE_BELOWTHRESHOLD\n    const MPD = MIN_POSITIVE_DISPLACEMENT\n    const MND = MIN_NEGATIVE_DISPLACEMENT\n    const displacement = this.direction === Drawer.UP || this.direction === Drawer.DOWN\n      ? rect.displacementY : rect.displacementX\n    const options = {\n      stateObj,\n      transition: `${this.directionString} ease ${this._calcSpeed(stateObj.TIMING) / KILO}s`\n    }\n    let LOGIC\n    if (this.direction === Drawer.LEFT && isClosed || this.direction === Drawer.RIGHT && !isClosed) {\n      LOGIC =  displacement > ZERO && displacement >= MPD && rect.greaterWidth\n    } else {\n      LOGIC = displacement < ZERO && displacement <= MND && rect.greaterWidth\n    }\n\n    if (overallEventTime / KILO < MTTOB) {\n      // DIRECTION: Drawer.UP | Drawer.LEFT\n      if (LOGIC) {\n        this._overrideBelowThresh(!isClosed, options)\n      } else {\n        if (isClosed) {\n          // close it back didn't hit thresh. and can't override\n          this._hide(options)\n          return\n        }\n        // open it back didn't hit thresh. and can't override because not enough displacement\n        this._show(options)\n      }\n    } else {\n      if (isClosed) {\n        // close it back didn't hit thresh. and can't override because not enough velocity or displacement\n        this._hide(options)\n        return\n      }\n      // open it back didn't hit thresh. and can't override because not enough velocity or displacement\n      this._show(options)\n    }\n  }\n\n  _show(options) {\n    this._showPrep(options)\n    this.element.style[this.directionString] = options.stateObj.dimension\n  }\n\n  _hide(options) {\n    this._hidePrep(options)\n    this.element.style[this.directionString] = options.stateObj.dimension\n  }\n\n  _overrideBelowThresh(isOpen, options) {\n    if (isOpen) {\n      this._hidePrep(options)\n      this.element.style[this.directionString] = options.stateObj.oppositeDimension\n    } else {\n      this._showPrep(options)\n      this.element.style[this.directionString] = options.stateObj.oppositeDimension\n    }\n  }\n\n  _hidePrep(options) {\n    this._body.style.overflow = SCROLL\n    this._backdrop.hide(this.options.TRANSITION)\n    css(this.element, {\n      [EFFECT]: options.transition,\n      [OVERFLOW]: SCROLL\n    })\n    if (!this.bound.lower) {\n      this.element.style.boxShadow = 'none'\n    }\n    this._setState('open')\n  }\n\n  _showPrep(options) {\n    window.location.hash = getAttribute(this.options.INIT_ELEM, HREF) || getData(this.options.INIT_ELEM, HASH_ATTR)\n    this._body.style.overflow = HIDDEN\n    this._backdrop.show(this.options.TRANSITION)\n    css(this.element, {\n      [EFFECT]: options.transition,\n      [OVERFLOW]: SCROLL\n    })\n    this._setState('open')\n  }\n\n  _calcSpeed(time) {\n    if (time >= MAX_TIME) {\n      return MAX_SPEED\n    }\n    const percent = 100\n    const percentage = time / MAX_TIME * percent\n    return percentage / percent * MAX_SPEED\n  }\n\n  _checkDirection() {\n    if (this.direction !== Drawer.LEFT && this.direction !== Drawer.RIGHT) {\n      throw RangeError('Direction out of range')\n    }\n  }\n\n  _setState(mode) {\n    switch (mode) {\n      case 'open':\n        STATE.navstate = {\n          alive: true,\n          activity: {\n            service: this,\n            action: mode\n          }\n        }\n        break\n      case 'close':\n        STATE.navstate = {\n          alive: false,\n          activity: {\n            service: this,\n            action: mode\n          }\n        }\n        break\n      default:\n        throw new Error('this should never happen')\n    }\n  }\n}\n\nexport default NavDrawer\n","import {\n  NAV_BOX_SHADOW,\n  ZERO,\n  css,\n  getAttribute\n} from './../util'\nimport STATE from './state'\n\nconst TRANSITION_STYLE = 'ease'\nconst EFFECT = 'transition'\nconst TRANS_END = 'transitionend'\n\nclass NavService {\n  constructor(options) {\n    this.options = options\n    this.nav = options.ELEMENT\n    this.button = options.INIT_ELEM\n    this.backdrop = options.BACKDROP\n    this.backdropElement = this.backdrop.backdrop\n    this.event = 'click'\n    this.direction = options.DIRECTION\n    this.width = this.nav.offsetWidth\n    this.transTime = options.TRANSITION / 1e3\n    this.transition = `${this.direction} ${TRANSITION_STYLE} ${this.transTime}s`\n    // state of the nav, whether open or close\n    this.alive = false\n    // diff. btw. event triggered from Drawer class and on here\n    /**\n     * @private\n     */\n    this._closeClicked = false\n    /**\n     * @readonly\n     * @private\n     */\n    this._initialState = NavService.css(this.nav, this.direction)\n    this._handlers = null\n  }\n\n  activate() {\n    const ClickHandler = (e) => {\n      this.handler(e)\n    }\n    const BackdropHandler = () => {\n      this._close()\n    }\n    const TransitionHandler = () => {\n      if (!this.alive && this._closeClicked) {\n        this._cleanShadow()\n        this._closeClicked = false\n      }\n    }\n    this._register({\n      ClickHandler,\n      BackdropHandler,\n      TransitionHandler\n    })\n\n    this.button.addEventListener(this.event, this._handlers.ClickHandler)\n    this.backdropElement.addEventListener(this.event, this._handlers.BackdropHandler)\n    if (this._initialState === `-${this._width('px')}`) {\n      this.nav.addEventListener(TRANS_END, this._handlers.TransitionHandler)\n    }\n    return 0\n  }\n\n  deactivate() {\n    throw new ReferenceError('cannot deactivate API specified as default. This service must be kept running')\n  }\n\n  forceDeactivate() {\n    this.button.removeEventListener(this.event, this._handlers.ClickHandler)\n    this.backdropElement.removeEventListener(this.event, this._handlers.BackdropHandler)\n    if (this._initialState === `-${this._width('px')}`) {\n      this.nav.removeEventListener(TRANS_END, this._handlers.TransitionHandler)\n    }\n    this._register(null)\n  }\n\n  handler(e) {\n    e.preventDefault()\n    window.location.hash = getAttribute(this.button, 'href')\n    const state = NavService._toNum(NavService.css(this.nav, this.direction))\n    if (state < ZERO) {\n      this._open()\n    } else {\n      this._close()\n    }\n  }\n\n  static css(el, property, style) {\n    return css(el, property, style)\n  }\n\n  static _toNum(val) {\n    val = val.replace(/[^\\d]*$/, '')\n    return /\\.(?=\\d)/.test(val) ? Math.round(parseFloat(val)) : parseInt(val, 10)\n  }\n\n  _width(unit) {\n    unit = unit || ''\n    return this.width + unit\n  }\n\n  _register(handler) {\n    this._handlers = handler\n  }\n\n  _open() {\n    const style = {\n      [this.direction]: ZERO,\n      [EFFECT]: this.transition,\n      boxShadow: NAV_BOX_SHADOW[this.direction]\n    }\n    NavService.css(this.nav, style)\n    this.backdrop.show(this.options.TRANSITION)\n    this.alive = true\n    const state = {\n      alive: this.alive,\n      activity: {\n        service: this,\n        action: 'open'\n      }\n    }\n    STATE.navstate = state\n  }\n\n  _close() {\n    const style = {\n      [this.direction]: this._initialState,\n      [EFFECT]: this.transition\n      // don't clean shadow here\n      // it's transitioning\n    }\n    NavService.css(this.nav, style)\n    this.backdrop.hide(this.options.TRANSITION)\n    this.alive = false\n    this._closeClicked = true\n    const state = {\n      alive: this.alive,\n      activity: {\n        service: this,\n        action: 'close'\n      }\n    }\n    STATE.navstate = state\n  }\n\n  _cleanShadow() {\n    NavService.css(this.nav, 'boxShadow', 'none')\n  }\n}\n\nexport default NavService\n","import {\n  $,\n  DIRECTIONS,\n  css,\n  getAttribute,\n  getData,\n  hasAttribute,\n  setAttribute,\n  unique\n} from './../util'\nimport {\n  Backdrop\n} from './backdrop'\nimport HashState from './hashstate'\nimport NavDrawer from './drawer'\nimport NavService from './navservice'\n\nconst BACKDROP = 'backdrop'\nconst DEF_CLASSNAME = 'cardinal-navcard'\nconst MEDIA_HASH = 'data-hash-max-width'\nconst MEDIA_DRAW = 'data-draw-max-width'\nconst _CLASS = 'class'\n\nclass NavCard {\n  constructor() {\n    /**\n     * Covert Backdrop\n     * ----------------\n     * Just incase `options.backdrop = false`\n     * prevents multiple `if` statements\n     * so we don't have to check whether\n     * backdrop is enabled anytime we want to access it.\n     *\n     * Insert into DOM only:\n     * when `options.backdrop = true`\n     * `options.backdropClass` is undefined\n     */\n    this.backdrop = document.createElement('div')\n    this.backdrop.className = BACKDROP\n    css(this.backdrop, {\n      background: 'rgba(0,0,0,.4)',\n      height: '100%',\n      width: '100%',\n      display: 'none',\n      position: 'fixed',\n      top: 0,\n      left: 0\n    })\n\n    this.body = document.body\n    this.Drawer = null\n    this.NavService = null\n    this.HashState = null\n  }\n\n  static defaultConfig = {\n    transition: 500,\n    direction: 'left',\n    backdrop: false,\n    backdropClass: null,\n    accessAttr: 'data-target',\n    maxStartArea: 25,\n    threshold: 1 / 2,\n    unit: 'px'\n  }\n\n  static SERVICES = {\n    Default: 2,\n    Drawer: 4,\n    Hash: 8\n  }\n\n  setup(el, options) {\n    if (!el) {\n      throw new TypeError('expected \\'el\\' to be selector string or HTMLElement')\n    }\n    let {\n      backdrop,\n      HASH_NAV_MAX_WIDTH,\n      NAV_DRAW_MAX_WIDTH,\n      destinationId,\n      destination\n    } = 1\n    const opts = NavCard.defaultConfig\n\n    if (options && typeof options === 'object') {\n      for (const prop of Object.keys(options)) {\n        if (Object.prototype.hasOwnProperty.call(opts, prop)) {\n          opts[prop] = options[prop]\n        } else {\n          continue\n        }\n      }\n    }\n\n    const dataAccess = opts.accessAttr\n\n    /**\n     * Initialization element e.g <button ...</button>\n     */\n    const element = el instanceof HTMLElement ? el : $(el)\n    destinationId = getData(element, dataAccess)\n\n    // check if the data-* attribute value is a valid css selector\n    // if not prepend a '#' to it as id selector is default\n    const isCSSSelector = /^(?:#|\\.|\\u005b[^\\u005c]\\u005c)/.test(destinationId)\n    const isClass = /^\\./.test(destinationId)\n    destinationId = isCSSSelector ? destinationId : `#${destinationId}`\n\n    destination = $(destinationId)\n\n    // we want a class too, so in case we've got an id selector\n    // find the classname or assign a unique class\n    const defaultClass = `${DEF_CLASSNAME}-${unique(2 << 7)}`\n    // eslint-disable-next-line no-nested-ternary\n    let classname = isClass ? destinationId : hasAttribute(destination, _CLASS)\n      ? getAttribute(destination, _CLASS) : (setAttribute(destination, _CLASS, defaultClass), defaultClass)\n    const classlist = classname.split(/\\s+/)\n    // eslint-disable-next-line prefer-template\n    classname = '.' + (classlist.length >= 2 ? classlist[0] + '.' + classlist[1] : classname)\n    destination = isClass ? destination : $(classname)\n\n    if (opts.backdrop) {\n      const backdropclass = opts.backdropClass || false\n      // if `opts.backdrop` and no `backdropclass` given\n      // append our custom backdrop\n      if (!backdropclass) {\n        destination.insertAdjacentElement('beforeBegin', this.backdrop)\n      }\n\n      if (typeof backdropclass === 'string') {\n        // check if backdropclass is normal string or css class selector\n        backdrop =  /^\\./.test(backdropclass) ? backdropclass : `.${backdropclass}`\n        this.backdrop = $(backdrop)\n      }\n    }\n\n    HASH_NAV_MAX_WIDTH = getData(destination, MEDIA_HASH)\n    NAV_DRAW_MAX_WIDTH = getData(destination, MEDIA_DRAW)\n    HASH_NAV_MAX_WIDTH = /px$/.test(HASH_NAV_MAX_WIDTH) ? HASH_NAV_MAX_WIDTH : `${HASH_NAV_MAX_WIDTH}px`\n    NAV_DRAW_MAX_WIDTH = /px$/.test(NAV_DRAW_MAX_WIDTH) ? NAV_DRAW_MAX_WIDTH : `${NAV_DRAW_MAX_WIDTH}px`\n\n    const defaultOptions = {\n      ELEMENT: destination,\n      INIT_ELEM: element,\n      BACKDROP: new Backdrop(this.backdrop),\n      BODY: this.body,\n      TRANSITION: opts.transition,\n      DIRECTION: DIRECTIONS[opts.direction],\n      unit: options.unit\n    }\n    const drawerOptions = {\n      ...defaultOptions,\n      MAX_WIDTH: NAV_DRAW_MAX_WIDTH,\n      DIRECTION: opts.direction,\n      maxStartArea: opts.maxStartArea,\n      threshold: opts.threshold\n    }\n    const hashOptions = {\n      ...defaultOptions,\n      MAX_WIDTH: HASH_NAV_MAX_WIDTH\n    }\n\n    return new NavMountWorker(Object.assign({}, {\n      defaultOptions\n    }, {\n      drawerOptions\n    }, {\n      hashOptions\n    }))\n  }\n\n  toString() {\n    return '[object NavCard]'\n  }\n\n  _drawerAPI(options) {\n    this.Drawer = new NavDrawer(options)\n    return {\n      activate: () => this.Drawer.activate(),\n      deactivate: () => this.Drawer.deactivate()\n    }\n  }\n\n  _hashAPI(options) {\n    this.HashState = new HashState(this.NavService, options)\n    return {\n      activate: () => this.HashState.activate(),\n      deactivate: () => this.HashState.deactivate()\n    }\n  }\n\n  _defaultAPI(options) {\n    this.NavService = new NavService(options)\n    return {\n      activate: () => this.NavService.activate(),\n      deactivate: () => this.NavService.deactivate()\n    }\n  }\n\n  terminate(service) {\n    // this._*API(null).deactivate()\n    switch (service) {\n      case NavCard.SERVICES.Default:\n        if (this.NavService instanceof NavService) {\n          this.NavService.deactivate()\n        }\n        break\n      case NavCard.SERVICES.Drawer:\n        if (this.Drawer instanceof NavDrawer) {\n          this.Drawer.deactivate()\n        }\n        break\n      case NavCard.SERVICES.Hash:\n        if (this.HashState instanceof HashState) {\n          this.HashState.deactivate()\n        }\n        break\n      default:\n        throw new Error('a service id is required')\n    }\n  }\n}\n\nclass NavMountWorker extends NavCard {\n  constructor(options) {\n    super()\n    this.options = options\n  }\n\n  mount() {\n    this._defaultAPI(this.options.defaultOptions).activate()\n    this._drawerAPI(this.options.drawerOptions).activate()\n    this._hashAPI(this.options.hashOptions).activate()\n  }\n\n  unmount() {\n    this.NavService.forceDeactivate()\n    this.Drawer.deactivate()\n    this.HashState.deactivate()\n  }\n}\n\nexport default NavCard\n","import _CircularPath from './circular-path'\nimport _Drawer from './drawer'\nimport _Nav from './nav'\n\nexport default class Cardinal {\n  static CircularPath = _CircularPath\n  static Drawer = _Drawer\n  static Nav = _Nav\n}\n"],"names":["POINT_ANGLE","HALF","PI","Math","RAD","Circle","radius","diameter","areaOfSect","angle","area","lenOfSect","circumference","ZERO","DEG","RIGHT_ANGLE","Quadrant","FIRST","SECOND","THIRD","FOURTH","CircularPath","angles","_angles","map","value","_quad","_degToRad","deg","_radToDeg","rad","_findOppUseSOH","hyp","sin","_firstPath","paths","forEach","push","_getQuadrant","radAngle","_chordLength","angleCofRAT","_getLastTwoEqAngles","angleBofRAT","_resolvePath","val","quadrant","angleA","RangeError","radiusSq","a","cos","sqrt","BLUR_SPREAD_SHADE","NAV_BOX_SHADOW","top","left","bottom","right","DIRECTIONS","Bound","lower","upper","dataCamelCase","data","camelCase","substring","delim","list","Array","split","reduce","acc","cur","charAt","toUpperCase","slice","unique","max","floor","random","$","query","document","querySelectorAll","getAttribute","el","attr","hasAttribute","setAttribute","getData","prop","dataset","validateThreshold","tsh","MAX_THRESHOLD","MIN_ILLEGAL_THRESHOLD","css","length","property","STYLEMAP","window","getComputedStyle","style","Object","keys","ostyle","VectorRectangle","x1","y1","x2","y2","coordsX","coordsY","displacementY","displacementX","Rectangle","abs","width","height","greaterWidth","DIRECTION","DIMENSION","DISPLACEMENT","EVENT_OBJ","THRESHOLD","BELOW_THRESHOLD","OPEN","CLOSE","UNIT","MAX_START_AREA","THRESHOLD_VALUE","FALSE_TOUCH_START_POINT","Bottom","options","bound","element","ELEMENT","_winSize","sizeOfWindow","_windowSize","winSize","SIZE","unit","minArea","maxStartArea","threshold","startX","startY","resumeX","resumeY","endX","endY","scrollControlSet","scrollControl","timing","start","end","_context","e","fn","Date","_updateOrientation","WIN_HEIGHT","changedTouches","pageY","clientY","pageX","clientX","currentPosition","parseFloat","_getStyle","replace","positionOnStart","dimension","displacement","response","call","move","FALSE_HEIGHT","resume","nextAction","virtualStart","vdimension","rect","isBoundY","greaterHeight","open","close","thresholdState","TIMING","getTime","signedOffsetSide","nonZero","slack","zero","offsetSide","action","position","getResponse","state","trueForOpen","opposite","stateObj","setContext","ctx","elt","pseudoElt","screen","availHeight","Left","maxArea","isBoundX","availWidth","Right","WIN_WIDTH","FALSE_WIDTH","Top","START","MOVE","END","SnappedDrawer","_options","_element","_target","TARGET","events","_handlers","_direction","_callibration","_callbacks","_setCalibration","activate","startfn","def","movefn","endfn","startHandler","deactivate","moveHandler","endHandler","_processThresholdState","_register","i","addEventListener","removeEventListener","on","event","_registerCallbacks","toString","thState","vector","point","UP","LEFT","DOWN","RIGHT","handlers","Drawer","Backdrop","backdrop","show","time","display","opacity","transition","hide","setTimeout","setOpacity","navstate","HashState","parentService","button","INIT_ELEM","handler","_hashchange","oldHash","_getHash","oldURL","STATE","alive","_close","uri","hash","indexOfHash","lastIndexOf","KILO","MIN_TIME_TO_OVERRIDE_BELOWTHRESHOLD","MIN_POSITIVE_DISPLACEMENT","MIN_NEGATIVE_DISPLACEMENT","TRANSITION_STYLE","EFFECT","OVERFLOW","TRANS_TIMING","TRANS_TEMPLATE","HIDDEN","SCROLL","HREF","HASH_ATTR","MAX_TIME","MAX_SPEED","NavDrawer","_body","BODY","_backdrop","BACKDROP","direction","_checkDirection","directionString","_bound","o","elementSize","drawer","_startHandler","_moveHandler","_threshold","_belowThreshold","boxShadow","overflow","rectangle","curPos","WIN_SIZE","isOpen","_calcSpeed","_hide","_show","isClosed","overallEventTime","MTTOB","MPD","MND","LOGIC","_overrideBelowThresh","_showPrep","_hidePrep","oppositeDimension","TRANSITION","_setState","location","percent","percentage","mode","activity","service","Error","axis","offsetHeight","offsetWidth","upperBound","lowerBound","parseInt","TRANS_END","NavService","nav","backdropElement","transTime","_closeClicked","_initialState","ClickHandler","BackdropHandler","TransitionHandler","_cleanShadow","_width","ReferenceError","forceDeactivate","preventDefault","_toNum","_open","test","round","DEF_CLASSNAME","MEDIA_HASH","MEDIA_DRAW","_CLASS","NavCard","createElement","className","background","body","setup","TypeError","HASH_NAV_MAX_WIDTH","NAV_DRAW_MAX_WIDTH","destinationId","destination","opts","defaultConfig","prototype","hasOwnProperty","dataAccess","accessAttr","HTMLElement","isCSSSelector","isClass","defaultClass","classname","classlist","backdropclass","backdropClass","insertAdjacentElement","defaultOptions","drawerOptions","MAX_WIDTH","hashOptions","NavMountWorker","assign","_drawerAPI","_hashAPI","_defaultAPI","terminate","SERVICES","Default","Hash","mount","unmount","Cardinal","_CircularPath","_Drawer","_Nav"],"mappings":"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"}