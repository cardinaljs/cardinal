{"version":3,"file":"drawer.js","sources":["../src/util.js","../src/drawer/vector.js","../src/drawer/rectangle.js","../src/drawer/snapped-drawer/bottom.js","../src/drawer/snapped-drawer/left.js","../src/drawer/snapped-drawer/right.js","../src/drawer/snapped-drawer/top.js","../src/drawer/snapped-drawer/index.js","../src/drawer/index.js"],"sourcesContent":["// constants\nconst BLUR_SPREAD_SHADE = '0.7rem 0 rgba(0,0,0,.3)'\nexport const NAV_BOX_SHADOW = {\n  top: `0 0.2rem ${BLUR_SPREAD_SHADE}`,\n  left: `0.2rem 0 ${BLUR_SPREAD_SHADE}`,\n  bottom: `0 -0.2rem ${BLUR_SPREAD_SHADE}`,\n  right: `-0.2rem 0 ${BLUR_SPREAD_SHADE}`\n}\nexport const ZERO = 0\nexport const DIRECTIONS = [\n  'top', 'left',\n  'bottom', 'right'\n]\n\n// classes\nexport class Path {\n  constructor(x, y) {\n    this.x = x\n    this.y = y\n  }\n\n  /**\n   * Get difference between two paths\n   * @param {Path} path1 Path Object\n   * @param {Path} path2 Path Object\n   * @returns {Path} A different Path\n   */\n  static pathDifference(path1, path2) {\n    const x = path1.x - path2.x\n    const y = path1.y - path2.y\n    return new Path(x, y)\n  }\n\n  /**\n   * Join two different paths\n   * @param {Path} path1 Path Object\n   * @param {Path} path2 Path Object\n   * @returns {Path} A joined Path\n   */\n  static join(path1, path2) {\n    const x = path1.x + path2.x\n    const y = path1.y + path2.y\n    return new Path(x, y)\n  }\n}\n\nexport class Bound {\n  constructor(lower, upper) {\n    this.lower = lower\n    this.upper = upper\n  }\n\n  get gap() {\n    return this.upper - this.lower\n  }\n\n  get slack() {\n    return this.lower - this.upper\n  }\n}\n\n// functions\nexport function dataCamelCase(data) {\n  // remove 'data-' prefix and return camelCase string\n  return camelCase(data.substring(5), '-')\n}\n\nexport function camelCase(data, delim = '-') {\n  const list = data instanceof Array ? data : data.split(delim)\n  return list.reduce((acc, cur) => acc + cur.charAt(0)\n    .toUpperCase() + cur.slice(1)\n  )\n}\n\nexport function unique(max) {\n  return Math.floor(Math.random() * max)\n}\n\nexport function $(query) {\n  return document.querySelectorAll(query)[0]\n}\n\nexport function getAttribute(el, attr) {\n  return el.getAttribute(attr)\n}\n\nexport function hasAttribute(el, attr) {\n  return el.hasAttribute(attr)\n}\n\nexport function setAttribute(el, attr, value) {\n  el.setAttribute(attr, value)\n}\n\nexport function getData(el, attr) {\n  const prop = dataCamelCase(attr)\n  // this may return `undefined` in some Safari\n  if (el.dataset && el.dataset[prop]) {\n    return el.dataset[prop]\n  }\n  return getAttribute(el, attr)\n}\n\nexport function validateThreshold(tsh) {\n  const MAX_THRESHOLD = 1\n  const MIN_ILLEGAL_THRESHOLD = 0\n  if (tsh < MAX_THRESHOLD && tsh > MIN_ILLEGAL_THRESHOLD) {\n    tsh = MAX_THRESHOLD - tsh\n    return tsh\n  } else if (tsh < MIN_ILLEGAL_THRESHOLD) {\n    tsh = MAX_THRESHOLD\n    return tsh\n  }\n  return MAX_THRESHOLD\n}\n\n/**\n * @param {HTMLElement} el an HTMLElement whose style should\n * be accessed\n * @param {string | string[] | {}} property A property/properties\n * to set or get\n * @param {string | number} value value to set as\n * @returns {CSSStyleDeclaration | string} A css style property\n * or CSSStyleDeclaration object\n */\nexport function css(...args) {\n  if (args.length < 1) {\n    return null\n  }\n  const el = args[0]\n  const property = args[1]\n  let value = args[2]\n  const STYLEMAP = window.getComputedStyle(el)\n\n  if (typeof property === 'string' && value) {\n    // setting one property\n    el.style[property] = value\n    return null\n  }\n  if (typeof property === 'object' && property instanceof Object) {\n    // `style` MUST = null\n    // setting many properties\n    value = property\n    for (const prop of Object.keys(value)) {\n      el.style[prop] = value[prop]\n    }\n  } else if (property instanceof Array) {\n    // return all values of properties in the array for\n    // the element as object\n    const ostyle = {}\n    for (const prop of STYLEMAP) {\n      ostyle[prop] = STYLEMAP[prop]\n    }\n    return ostyle\n  } else {\n    // get style from property\n    return STYLEMAP[property]\n  }\n  return STYLEMAP\n}\n","export class VectorRectangle {\n  constructor(x1, y1, x2, y2) {\n    this.coordsX = {\n      x1,\n      x2\n    }\n    this.coordsY = {\n      y1,\n      y2\n    }\n  }\n\n  get displacementX() {\n    return this.coordsX.x2 - this.coordsX.x1\n  }\n\n  get displacementY() {\n    return this.coordsY.y2 - this.coordsY.y1\n  }\n\n  get diagonalLength() {\n    if (!this.displacementY) {\n      return this.displacementX\n    } else if (!this.displacementX) {\n      return this.displacementY\n    }\n    return Math.sqrt(\n      this.displacementY ** 2 + this.displacementX ** 2\n    )\n  }\n}\n","import {\n  VectorRectangle\n} from './vector'\n\nexport class Rectangle extends VectorRectangle {\n  // eslint-disable-next-line no-useless-constructor\n  constructor(x1, y1, x2, y2) {\n    super(x1, y1, x2, y2)\n  }\n\n  // getter\n  get width() {\n    return Math.abs(this.displacementX)\n  }\n\n  get height() {\n    return Math.abs(this.displacementY)\n  }\n\n  get greaterWidth() {\n    return this.width > this.height\n  }\n\n  get greaterHeight() {\n    return !this.greaterWidth\n  }\n}\n","import {\n  ZERO,\n  validateThreshold\n} from './../../util'\nimport {\n  Rectangle\n} from './../rectangle'\n\nconst DIRECTION = 'bottom'\nconst DIMENSION = 'dimension'\nconst DISPLACEMENT = 'displacement'\nconst EVENT_OBJ = 'event'\nconst THRESHOLD = 'threshold'\nconst BELOW_THRESHOLD = 'belowthreshold'\nconst OPEN = 'open'\nconst CLOSE = 'close'\nconst UNIT = 'px'\nconst MAX_START_AREA = 25\nconst THRESHOLD_VALUE = 0.667\nconst FALSE_TOUCH_START_POINT = 2\n\nexport default class Bottom {\n  /**\n   * @param {{}} options\n   * an object containing all required properties\n   * @param {Bound} bound a boundary object\n   */\n  constructor(options, bound) {\n    this.options = options\n    this.bound = bound\n    /**\n     * Drawer Element\n     * @type {HTMLElement}\n     */\n    this.element = options.ELEMENT\n    /**\n     * Size of device window\n     * @type {Function}\n     */\n    this._winSize = this.options.sizeOfWindow || Bottom._windowSize\n    /**\n     * @type {number}\n     */\n    this.winSize = this._winSize()\n    /**\n     * @type {number}\n     */\n    this.height = this.options.SIZE\n    this.unit = this.options.unit || UNIT\n    /**\n     * @type {number}\n     * A minimum area where the draw-start is sensitive\n     */\n    this.minArea = this.winSize - (this.bound.lower || this.options.maxStartArea || MAX_START_AREA)\n\n    /**\n     * A threshold which the `touchmove` signal must attain\n     * before being qualified to stay shown\n     * the threshold should be a value between `0` and `1.0`\n     * @type {number}\n     */\n    this.threshold = this.options.threshold || THRESHOLD_VALUE\n    this.threshold = validateThreshold(this.threshold)\n\n    // Touch coordinates (Touch Start)\n    this.startX = -1\n    this.startY = -1\n    // Touch coordinates (Touch Move)\n    this.resumeX = -1\n    this.resumeY = -1\n    // Touch coordinates (Touch End) [these may not be important]\n    this.endX = -1\n    this.endY = -1\n\n    /**\n     * A control for scroll. This control prevents\n     * a clash between coordinates dancing between\n     * the (&delta;`X`) coords and (&delta;`Y`) coords.\n     * Utilising the `Rectangle` class to get bounds\n     * and isolate territories\n     * @type {boolean}\n     */\n    this.scrollControlSet = false\n    this.scrollControl = null\n    this.timing = {\n      /**\n       * @type {Date}\n       */\n      start: null,\n      /**\n       * @type {Date}\n       */\n      end: null\n    }\n\n    this._context = this\n  }\n\n  /**\n   * The `touchstart` event handler for the `Bottom` drawer `class`\n   * @param {TouchEvent} e an event `object`: An event `object`\n   * representing an `object` of all `properties` related\n   * to the `touchstart` event.\n   * @param {Function} fn - a callback function called when the `start`\n   * event is triggered\n   * @returns {void}\n   */\n  start(e, fn) {\n    this.timing.start = new Date()\n    this._updateOrientation()\n    const WIN_HEIGHT = this.winSize\n    const start =  e.changedTouches[0].pageY || e.changedTouches[0].clientY\n    this.startX = e.changedTouches[0].pageX || e.changedTouches[0].clientX\n    this.startY = start\n    /**\n     * The `Drawer`'s `Bottom` class uses the `CSS property`, `bottom`\n     * for updating and defining position of the drawn element\n     */\n    const currentPosition = parseFloat(\n      Bottom._getStyle(this.element)[DIRECTION].replace(\n        /[^\\d]*$/, ''\n      )\n    )\n    const bound = this.bound\n    this.positionOnStart = currentPosition\n    const dimension = bound.lower ? `-${bound.upper - (WIN_HEIGHT - bound.lower)}${this.unit}` : `-${bound.upper - (WIN_HEIGHT - start)}${this.unit}`\n    const displacement = `-${bound.upper - (WIN_HEIGHT - FALSE_TOUCH_START_POINT)}${this.unit}`\n\n    if (start <= WIN_HEIGHT && start >= this.minArea && currentPosition !== ZERO) {\n      const response = {\n        [EVENT_OBJ]: e,\n        [DIMENSION]: dimension,\n        [DISPLACEMENT]: displacement\n      }\n      fn.call(this._context, response, new Rectangle(this.startX, this.startY, -1, -1))\n    }\n  }\n\n  /**\n   * The `touchmove` event handler for the `Bottom` drawer `class`\n   * @param {TouchEvent} e an event `object`: An event `object`\n   * representing an `object` of all `properties` related\n   * to the `touchmove` event.\n   * @param {Function} fn - a callback function called when the `move`\n   * event is triggered\n   * @returns {void}\n   */\n  move(e, fn) {\n    /* eslint complexity: [\"error\", 25] */\n    const WIN_HEIGHT = this.winSize\n    const FALSE_HEIGHT = WIN_HEIGHT - this.bound.upper\n    const resume = e.changedTouches[0].pageY || e.changedTouches[0].clientY\n    this.resumeX = e.changedTouches[0].pageX || e.changedTouches[0].clientX\n    this.resumeY = resume\n\n    const currentPosition = parseFloat(\n      Bottom._getStyle(this.element)[DIRECTION].replace(\n        /[^\\d]*$/, ''\n      )\n    )\n    const bound = this.bound\n    const nextAction = this.positionOnStart === ZERO ? CLOSE : OPEN\n\n    const start = this.startY\n    const height = bound.upper || this.height\n    /**\n     * When the touch doesn't start from the max-height\n     * of the element ignore `start` and use `height`\n     * as starting point.\n     */\n    const virtualStart = start < FALSE_HEIGHT ? FALSE_HEIGHT : start\n\n    /**\n     * Dimension for opening. When the drawer is being opened,\n     * the `height` is the max dimension, and the `start` can\n     * only be less than the `height` (from a range of `0` to `this.maxArea` e.g `0` - `25`), so the current\n     * reading from `resume` is subtracted from the `height` to\n     * get the accurate position to update the drawer with.\n     *\n     *\n     * **WHY IT IS LIKE THIS `height - (WIN_HEIGHT - resume)`**\n     *\n     * `WIN_HEIGHT - resume` converts it from a vector to a scalar.\n     * Keeping it as a vector makes the dimension inaccurate\n     * as the `bottom` property of the `HTMLElement.style` is the one being updated and not the `top`,\n     * so the css `bottom` property is an enough respect for its direction.\n     *\n     * *__If it should be respected then:__*,\n     * 1. The `Bottom Drawer class` would be updating `top css property` and not `bottom`, i.e, initialy an element that uses the `Bottom Drawer` must have a `css file` that defines a `css top property` for the element and not a `bottom` property; As in\n     * ```scss\n     * .menu {\n     *   top: // (window size + height of the element)px\n     * }\n     * ```\n     * 2. Cardinal's `Bottom Drawer class` can always update\n     * as `HTMLElement.style.top = ${height - resume}px`, and\n     * not as it is now.\n     * This way there is no `bottom` property respecting the direction\n     * So the vector attribute of the dimension is preserved.\n     */\n    const dimension = `-${height - (WIN_HEIGHT - resume)}${this.unit}`\n\n    /**\n     * Dimension for closing. When the drawer is being closed,\n     * the `height` is the max dimension and the `start` could\n     * possibly be more than the `height`\n     * or less than the `height`.\n     * To assure an accurate dimension the `virtualStart`\n     * determines whether to use the `height` as starting point\n     * or the actual `start`. If the actual start is more than\n     * `height`, the height becomes the start point else the `start`\n     */\n    const vdimension = `-${resume - virtualStart}${this.unit}`\n    const rect = new Rectangle(\n      this.startX,\n      this.startY,\n      this.resumeX,\n      this.resumeY\n    )\n    const isBoundY = rect.greaterHeight\n\n    if (!this.scrollControlSet) {\n      this.scrollControl = isBoundY\n      this.scrollControlSet = !this.scrollControlSet\n    }\n\n    // OPEN LOGIC\n    if (start <= WIN_HEIGHT && (start >= this.minArea || start >= FALSE_HEIGHT + currentPosition) && currentPosition !== ZERO && isBoundY && nextAction === OPEN && this.scrollControl && rect.displacementY < ZERO) {\n      const response = {\n        [EVENT_OBJ]: e,\n        [DIMENSION]: dimension,\n        open: true,\n        close: false\n      }\n      fn.call(this._context, response, rect)\n    }\n\n    // CLOSE LOGIC\n    if (resume >= FALSE_HEIGHT && Math.abs(currentPosition) < height - bound.lower && isBoundY && nextAction === CLOSE && this.scrollControl && rect.displacementY > ZERO) {\n      const response = {\n        [EVENT_OBJ]: e,\n        [DIMENSION]: vdimension,\n        close: true,\n        open: false\n      }\n      fn.call(this._context, response, rect)\n    }\n  }\n\n  /**\n   * The `touchend` event handler for the `Bottom` drawer `class`\n   * @param {TouchEvent} e an event `object`: An event `object`\n   * representing an `object` of all `properties` related\n   * to the `touchend` event.\n   * @param {Function} fn - a callback function called when the `end`\n   * event is triggered\n   * @param {{}} thresholdState - a state object which should be passed\n   * by reference for updating by this method\n   * @returns {void}\n   */\n  end(e, fn, thresholdState) {\n    this.timing.end = new Date()\n    const WIN_HEIGHT = this.winSize\n    const FALSE_HEIGHT = WIN_HEIGHT - this.bound.upper\n    const end = e.changedTouches[0].pageY || e.changedTouches[0].clientY\n    this.endX = e.changedTouches[0].pageX || e.changedTouches[0].clientX\n    this.endY = end\n\n    const rect = new Rectangle(this.startX, this.startY, this.endX, this.endY)\n\n    const start = this.startY\n    const TIMING = this.timing.end.getTime() - this.timing.start.getTime()\n    const threshold = this.threshold\n    const signedOffsetSide = parseFloat(\n      Bottom._getStyle(this.element)[DIRECTION].replace(\n        /[^\\d]*$/, ''\n      )\n    )\n    const bound = this.bound\n    const nonZero = `${bound.slack}${this.unit}`\n    const zero = `${ZERO}`\n    const offsetSide = Math.abs(signedOffsetSide)\n    let action = OPEN\n    // release the control for another session\n    this.scrollControl = this.scrollControlSet = false // eslint-disable-line no-multi-assign\n\n    const response = {\n      [EVENT_OBJ]: e,\n      position: signedOffsetSide,\n      rect\n    }\n\n    function getResponse(state, trueForOpen) {\n      const opposite = 'oppositeDimension'\n      if (state === THRESHOLD && trueForOpen || state === BELOW_THRESHOLD && !trueForOpen) {\n        return {\n          [DIMENSION]: zero,\n          TIMING,\n          [opposite]: nonZero,\n          ...response\n        }\n      } else if (state === THRESHOLD && !trueForOpen || state === BELOW_THRESHOLD && trueForOpen) {\n        return {\n          [DIMENSION]: nonZero,\n          TIMING,\n          [opposite]: zero,\n          ...response\n        }\n      }\n      return {}\n    }\n\n    // OPEN LOGIC\n    if (rect.displacementY < ZERO && (start >= this.minArea || start >= FALSE_HEIGHT + signedOffsetSide)) {\n      if (offsetSide <= this.height * threshold) {\n        thresholdState.state = [THRESHOLD, CLOSE]\n        thresholdState.stateObj = getResponse(thresholdState.state[0], true)\n      } else {\n        thresholdState.state = [BELOW_THRESHOLD, CLOSE]\n        thresholdState.stateObj = getResponse(thresholdState.state[0], true)\n      }\n      fn.call(this, action)\n      return\n    }\n\n    // CLOSE LOGIC\n    if (rect.displacementY > ZERO && this.resumeY >= FALSE_HEIGHT) {\n      action = CLOSE\n      if (offsetSide >= this.height * threshold) {\n        thresholdState.state = [THRESHOLD, OPEN]\n        thresholdState.stateObj = getResponse(thresholdState.state[0], false)\n      } else {\n        thresholdState.state = [BELOW_THRESHOLD, OPEN]\n        thresholdState.stateObj = getResponse(thresholdState.state[0], false)\n      }\n      fn.call(this, action)\n    }\n  }\n\n  setContext(ctx) {\n    this._context = ctx\n    return this\n  }\n\n  static _getStyle(elt, pseudoElt) {\n    return pseudoElt ? window.getComputedStyle(elt, pseudoElt) : window.getComputedStyle(elt)\n  }\n\n  static _windowSize() {\n    return window.screen.availHeight\n  }\n\n  // no need for `window.onorientationchange`\n  _updateOrientation() {\n    this.winSize = typeof this._winSize === 'function' ? this._winSize() : Bottom._windowSize()\n    this.minArea = this.winSize - (this.bound.lower || this.options.maxStartArea || MAX_START_AREA)\n  }\n}\n","import {\n  ZERO,\n  validateThreshold\n} from './../../util'\nimport {\n  Rectangle\n} from './../rectangle'\n\nconst DIRECTION = 'left'\nconst DIMENSION = 'dimension'\nconst DISPLACEMENT = 'displacement'\nconst EVENT_OBJ = 'event'\nconst THRESHOLD = 'threshold'\nconst BELOW_THRESHOLD = 'belowthreshold'\nconst OPEN = 'open'\nconst CLOSE = 'close'\nconst UNIT = 'px'\nconst MAX_START_AREA = 25\nconst THRESHOLD_VALUE = 0.667\nconst FALSE_TOUCH_START_POINT = 2\n\nexport default class Left {\n  /**\n   * @param {{}} options\n   * an object containing all required properties\n   * @param {Bound} bound a boundary object\n   */\n  constructor(options, bound) {\n    this.options = options\n    this.bound = bound\n    /**\n     * Drawer Element\n     * @type {HTMLElement}\n     */\n    this.element = options.ELEMENT\n    /**\n     * Size of device window\n     *\n     * unused: required in `Right` and `Bottom`\n     * @type {Function}\n     */\n    this._winSize = this.options.sizeOfWindow || Left._windowSize\n    this.winSize = this._winSize()\n    /**\n     * @type {number}\n     */\n    this.width = this.options.SIZE\n    this.unit = this.options.unit || UNIT\n    /**\n     * @type {number}\n     * A maximum area where the draw-start is sensitive\n     * Use set boundary (`bound`) if there's an initial\n     * offset\n     */\n    this.maxArea = this.bound.lower || this.options.maxStartArea || MAX_START_AREA\n\n    /**\n     * A threshold which the `touchmove` signal must attain\n     * before being qualified to stay shown\n     * the threshold should be a value between `0` and `1.0`\n     * @type {number}\n     */\n    this.threshold = this.options.threshold || THRESHOLD_VALUE\n    this.threshold = validateThreshold(this.threshold)\n\n    // Touch coordinates (Touch Start)\n    this.startX = -1\n    this.startY = -1\n    // Touch coordinates (Touch Move)\n    this.resumeX = -1\n    this.resumeY = -1\n    // Touch coordinates (Touch End) [these may not be important]\n    this.endX = -1\n    this.endY = -1\n\n    /**\n     * A control for scroll. This control prevents\n     * a clash between coordinates dancing between\n     * the (&delta;`X`) coords and (&delta;`Y`) coords.\n     * Utilising the `Rectangle` class to get bounds\n     * and isolate territories\n     * @type {boolean}\n     */\n    this.scrollControlSet = false\n    this.scrollControl = null\n    this.timing = {\n      /**\n       * @type {Date}\n       */\n      start: null,\n      /**\n       * @type {Date}\n       */\n      end: null\n    }\n\n    this._context = this\n  }\n\n  /**\n   * The `touchstart` event handler for the `Left` drawer `class`\n   * @param {TouchEvent} e an event `object`: An event `object`\n   * representing an `object` of all `properties` related\n   * to the `touchstart` event.\n   * @param {Function} fn - a callback function called when the `start`\n   * event is triggered\n   * @returns {void}\n   */\n  start(e, fn) {\n    this.timing.start = new Date()\n    const start = e.changedTouches[0].pageX || e.changedTouches[0].clientX\n    this.startX = start\n    this.startY =  e.changedTouches[0].pageY || e.changedTouches[0].clientY\n    /**\n     * The `Drawer`'s `Left` class uses the `CSS property`, `left`\n     * for updating and defining position of the drawn element\n     */\n    const currentPosition = parseFloat(\n      Left._getStyle(this.element)[DIRECTION].replace(\n        /[^\\d]*$/, ''\n      )\n    )\n    const bound = this.bound\n    this.positionOnStart = currentPosition\n    const dimension = bound.lower ? `-${bound.upper - bound.lower}${this.unit}` : `-${bound.upper - start}${this.unit}`\n    const displacement = `-${bound.upper - FALSE_TOUCH_START_POINT}${this.unit}`\n\n    if (start >= ZERO && start <= this.maxArea && currentPosition !== ZERO) {\n      const response = {\n        [EVENT_OBJ]: e,\n        [DIMENSION]: dimension,\n        [DISPLACEMENT]: displacement\n      }\n      fn.call(this._context, response, new Rectangle(this.startX, this.startY, -1, -1))\n    }\n  }\n\n  /**\n   * The `touchmove` event handler for the `Left` drawer `class`\n   * @param {TouchEvent} e an event `object`: An event `object`\n   * representing an `object` of all `properties` related\n   * to the `touchmove` event.\n   * @param {Function} fn - a callback function called when the `move`\n   * event is triggered\n   * @returns {void}\n   */\n  move(e, fn) {\n    /* eslint complexity: [\"error\", 25] */\n    const resume = e.changedTouches[0].pageX || e.changedTouches[0].clientX\n    this.resumeX = resume\n    this.resumeY = e.changedTouches[0].pageY || e.changedTouches[0].clientY\n\n    const currentPosition = parseFloat(\n      Left._getStyle(this.element)[DIRECTION].replace(\n        /[^\\d]*$/, ''\n      )\n    )\n    const bound = this.bound\n    const nextAction = this.positionOnStart === ZERO ? CLOSE : OPEN\n    const start = this.startX\n    const width = bound.upper || this.width\n    /**\n     * When the touch doesn't start from the max-width\n     * of the element ignore `start` and use `width`\n     * as starting point.\n     */\n    const virtualStart = start > width ? width : start\n    /**\n     * Dimension for opening. When the drawer is being opened,\n     * the `width` is the max dimension, and the `start` can\n     * only be less than the `width` (from a range of `0` to\n     * `this.maxArea` e.g `0` - `25`), so the current\n     * reading from `resume` is subtracted from the `width` to\n     * get the accurate position to update the drawer with.\n     */\n    const dimension = `-${width - resume}${this.unit}`\n    /**\n     * Dimension for closing. When the drawer is being closed,\n     * the `width` is the max dimension and the `start` could\n     * possibly be more than the `width`\n     * or less than the `width`.\n     * To assure an accurate dimension the `virtualStart`\n     * determines whether to use the `width` as starting point\n     * or the actual `start`. If the actual start is more than\n     * `width`, the width becomes the start point else the `start`\n     */\n    const vdimension = `-${virtualStart - resume}${this.unit}`\n    const rect = new Rectangle(\n      this.startX,\n      this.startY,\n      this.resumeX,\n      this.resumeY\n    )\n    const isBoundX = rect.greaterWidth\n\n    if (!this.scrollControlSet) {\n      this.scrollControl = isBoundX\n      this.scrollControlSet = !this.scrollControlSet\n    }\n\n    // OPEN LOGIC\n    if (start >= ZERO && (start <= this.maxArea || start <= width + currentPosition) && currentPosition !== ZERO && isBoundX && nextAction === OPEN && this.scrollControl && rect.displacementX > ZERO) {\n      const response = {\n        [EVENT_OBJ]: e,\n        [DIMENSION]: dimension,\n        open: true,\n        close: false\n      }\n      fn.call(this._context, response, rect)\n    }\n\n    // CLOSE LOGIC\n    if (resume <= width && Math.abs(currentPosition) < width - bound.lower && isBoundX && nextAction === CLOSE && this.scrollControl && rect.displacementX < ZERO) {\n      const response = {\n        [EVENT_OBJ]: e,\n        [DIMENSION]: vdimension,\n        close: true,\n        open: false\n      }\n      fn.call(this._context, response, rect)\n    }\n  }\n\n  /**\n   * The `touchend` event handler for the `Left` drawer `class`\n   * @param {TouchEvent} e an event `object`: An event `object`\n   * representing an `object` of all `properties` related\n   * to the `touchend` event.\n   * @param {Function} fn - a callback function called when the `end`\n   * event is triggered\n   * @param {{}} thresholdState - a state object which should be passed\n   * by reference for updating by this method\n   * @returns {void}\n   */\n  end(e, fn, thresholdState) {\n    this.timing.end = new Date()\n\n    const end = e.changedTouches[0].pageX || e.changedTouches[0].clientX\n    this.endX = end\n    this.endY = e.changedTouches[0].pageY || e.changedTouches[0].clientY\n\n    const rect = new Rectangle(this.startX, this.startY, this.endX, this.endY)\n\n    const start = this.startX\n    const TIMING = this.timing.end.getTime() - this.timing.start.getTime()\n    const threshold = this.threshold\n    const signedOffsetSide = parseFloat(\n      Left._getStyle(this.element)[DIRECTION].replace(\n        /[^\\d]*$/, ''\n      )\n    )\n    const bound = this.bound\n    const nonZero = `${bound.slack}${this.unit}`\n    const zero = `${ZERO}`\n    const width = bound.upper || this.width\n    const offsetSide = Math.abs(signedOffsetSide)\n    let action = OPEN\n    // release the control for another session\n    this.scrollControl = this.scrollControlSet = false // eslint-disable-line no-multi-assign\n\n    const response = {\n      [EVENT_OBJ]: e,\n      position: signedOffsetSide,\n      rect\n    }\n\n    function getResponse(state, trueForOpen) {\n      const opposite = 'oppositeDimension'\n      if (state === THRESHOLD && trueForOpen || state === BELOW_THRESHOLD && !trueForOpen) {\n        return {\n          [DIMENSION]: zero,\n          TIMING,\n          [opposite]: nonZero,\n          ...response\n        }\n      } else if (state === THRESHOLD && !trueForOpen || state === BELOW_THRESHOLD && trueForOpen) {\n        return {\n          [DIMENSION]: nonZero,\n          TIMING,\n          [opposite]: zero,\n          ...response\n        }\n      }\n      return {}\n    }\n\n    // OPEN LOGIC\n    if (rect.displacementX > ZERO && (start <= this.maxArea || start <= width + signedOffsetSide)) {\n      if (offsetSide <= this.width * threshold) {\n        thresholdState.state = [THRESHOLD, CLOSE]\n        thresholdState.stateObj = getResponse(thresholdState.state[0], true)\n      } else {\n        thresholdState.state = [BELOW_THRESHOLD, CLOSE]\n        thresholdState.stateObj = getResponse(thresholdState.state[0], true)\n      }\n      fn.call(this, action)\n      return\n    }\n\n    // CLOSE LOGIC\n    if (rect.displacementX < ZERO && this.resumeX <= this.width) {\n      action = CLOSE\n      if (offsetSide >= this.width * threshold) {\n        thresholdState.state = [THRESHOLD, OPEN]\n        thresholdState.stateObj = getResponse(thresholdState.state[0], false)\n      } else {\n        thresholdState.state = [BELOW_THRESHOLD, OPEN]\n        thresholdState.stateObj = getResponse(thresholdState.state[0], false)\n      }\n      fn.call(this, action)\n    }\n    this.startX = -1\n    this.startY = -1\n    this.resumeX = -1\n    this.resumeY = -1\n    this.endX = -1\n    this.endY = -1\n  }\n\n  setContext(ctx) {\n    this._context = ctx\n    return this\n  }\n\n  static _getStyle(elt, pseudoElt) {\n    return pseudoElt ? window.getComputedStyle(elt, pseudoElt) : window.getComputedStyle(elt)\n  }\n\n  static _windowSize() {\n    return window.screen.availWidth\n  }\n}\n","import {\n  ZERO,\n  validateThreshold\n} from './../../util'\nimport {\n  Rectangle\n} from './../rectangle'\n\nconst DIRECTION = 'right'\nconst DIMENSION = 'dimension'\nconst DISPLACEMENT = 'displacement'\nconst EVENT_OBJ = 'event'\nconst THRESHOLD = 'threshold'\nconst BELOW_THRESHOLD = 'belowthreshold'\nconst OPEN = 'open'\nconst CLOSE = 'close'\nconst UNIT = 'px'\nconst MAX_START_AREA = 25\nconst THRESHOLD_VALUE = 0.667\nconst FALSE_TOUCH_START_POINT = 2\n\nexport default class Right {\n  /**\n   * @param {{}} options\n   * an object containing all required properties\n   * @param {Bound} bound a boundary object\n   */\n  constructor(options, bound) {\n    this.options = options\n    this.bound = bound\n    /**\n     * Drawer Element\n     * @type {HTMLElement}\n     */\n    this.element = options.ELEMENT\n    /**\n     * Size of device window\n     * @type {Function}\n     */\n    this._winSize = this.options.sizeOfWindow || Right._windowSize\n    /**\n     * @type {number}\n     */\n    this.winSize = this._winSize()\n    /**\n     * @type {number}\n     */\n    this.width = this.options.SIZE\n    this.unit = this.options.unit || UNIT\n    /**\n     * @type {number}\n     * A minimum area where the draw-start is sensitive\n     */\n    this.minArea = this.winSize - (this.bound.lower || this.options.maxStartArea || MAX_START_AREA)\n\n    /**\n     * A threshold which the `touchmove` signal must attain\n     * before being qualified to stay shown\n     * the threshold should be a value between `0` and `1.0`\n     * @type {number}\n     */\n    this.threshold = this.options.threshold || THRESHOLD_VALUE\n    this.threshold = validateThreshold(this.threshold)\n\n    // Touch coordinates (Touch Start)\n    this.startX = -1\n    this.startY = -1\n    // Touch coordinates (Touch Move)\n    this.resumeX = -1\n    this.resumeY = -1\n    // Touch coordinates (Touch End) [these may not be important]\n    this.endX = -1\n    this.endY = -1\n\n    /**\n     * A control for scroll. This control prevents\n     * a clash between coordinates dancing between\n     * the (&delta;`X`) coords and (&delta;`Y`) coords.\n     * Utilising the `Rectangle` class to get bounds\n     * and isolate territories\n     * @type {boolean}\n     */\n    this.scrollControlSet = false\n    this.scrollControl = null\n    this.timing = {\n      /**\n       * @type {Date}\n       */\n      start: null,\n      /**\n       * @type {Date}\n       */\n      end: null\n    }\n\n    this._context = this\n  }\n\n  /**\n   * The `touchstart` event handler for the `Left` drawer `class`\n   * @param {TouchEvent} e an event `object`: An event `object`\n   * representing an `object` of all `properties` related\n   * to the `touchstart` event.\n   * @param {Function} fn - a callback function called when the `start`\n   * event is triggered\n   * @returns {void}\n   */\n  start(e, fn) {\n    this.timing.start = new Date()\n    this._updateOrientation()\n    const WIN_WIDTH = this.winSize\n    const start = e.changedTouches[0].pageX || e.changedTouches[0].clientX\n    this.startX = start\n    this.startY =  e.changedTouches[0].pageY || e.changedTouches[0].clientY\n    /**\n     * The `Drawer`'s `Right` class uses the `CSS property`, `right`\n     * for updating and defining position of the drawn element\n     */\n    const currentPosition = parseFloat(\n      Right._getStyle(this.element)[DIRECTION].replace(\n        /[^\\d]*$/, ''\n      )\n    )\n    const bound = this.bound\n    this.positionOnStart = currentPosition\n    const dimension = bound.lower ? `-${bound.upper - (WIN_WIDTH - bound.lower)}${this.unit}` : `-${bound.upper - (WIN_WIDTH - start)}${this.unit}`\n    const displacement = `-${bound.upper - (WIN_WIDTH - FALSE_TOUCH_START_POINT)}${this.unit}`\n\n    if (start <= WIN_WIDTH && start >= this.minArea && currentPosition !== ZERO) {\n      const response = {\n        [EVENT_OBJ]: e,\n        [DIMENSION]: dimension,\n        [DISPLACEMENT]: displacement\n      }\n      fn.call(this._context, response, new Rectangle(this.startX, this.startY, -1, -1))\n    }\n  }\n\n  /**\n   * The `touchmove` event handler for the `Right` drawer `class`\n   * @param {TouchEvent} e an event `object`: An event `object`\n   * representing an `object` of all `properties` related\n   * to the `touchmove` event.\n   * @param {Function} fn - a callback function called when the `move`\n   * event is triggered\n   * @returns {void}\n   */\n  move(e, fn) {\n    /* eslint complexity: [\"error\", 25] */\n    const WIN_WIDTH = this.winSize\n    const FALSE_WIDTH = WIN_WIDTH - this.bound.upper\n    const resume = e.changedTouches[0].pageX || e.changedTouches[0].clientX\n    this.resumeX = resume\n    this.resumeY = e.changedTouches[0].pageY || e.changedTouches[0].clientY\n\n    const currentPosition = parseFloat(\n      Right._getStyle(this.element)[DIRECTION].replace(\n        /[^\\d]*$/, ''\n      )\n    )\n    const bound = this.bound\n    const nextAction = this.positionOnStart === ZERO ? CLOSE : OPEN\n\n    const start = this.startX\n    const width = bound.upper || this.width\n    /**\n     * When the touch doesn't start from the max-width\n     * of the element ignore `start` and use `width`\n     * as starting point.\n     */\n    const virtualStart = start < FALSE_WIDTH ? FALSE_WIDTH : start\n\n    /**\n     * Dimension for opening. When the drawer is being opened,\n     * the `width` is the max dimension, and the `start` can\n     * only be less than the `width` (from a range of `0` to `this.maxArea` e.g `0` - `25`), so the current\n     * reading from `resume` is subtracted from the `width` to\n     * get the accurate position to update the drawer with.\n     *\n     *\n     * **WHY IT IS LIKE THIS `width - (WIN_WIDTH - resume)`**\n     *\n     * `WIN_WIDTH - resume` converts it from a vector to a scalar.\n     * Keeping it as a vector makes the dimension inaccurate\n     * as the `right` property of the `HTMLElement.style` is the one being updated and not the `left`,\n     * so the css `right` property is an enough respect for its direction.\n     *\n     * *__If it should be respected then:__*,\n     * 1. The `Right Drawer class` would be updating `left css property` and not `right`, i.e, initialy an element that uses the `Right Drawer` must have a `css file` that defines a `css left property` for the element and not a `right` property; As in\n     * ```scss\n     * .menu {\n     *   left: // (window size + width of the element)px\n     * }\n     * ```\n     * 2. Cardinal's `Right Drawer class` can always update\n     * as `HTMLElement.style.left = ${width - resume}px`, and\n     * not as it is now.\n     * This way there is no `right` property respecting the direction\n     * So the vector attribute of the dimension is preserved.\n     */\n    const dimension = `-${width - (WIN_WIDTH - resume)}${this.unit}`\n\n    /**\n     * Dimension for closing. When the drawer is being closed,\n     * the `width` is the max dimension and the `start` could\n     * possibly be more than the `width`\n     * or less than the `width`.\n     * To assure an accurate dimension the `virtualStart`\n     * determines whether to use the `width` as starting point\n     * or the actual `start`. If the actual start is more than\n     * `width`, the width becomes the start point else the `start`\n     */\n    const vdimension = `-${resume - virtualStart}${this.unit}`\n    const rect = new Rectangle(\n      this.startX,\n      this.startY,\n      this.resumeX,\n      this.resumeY\n    )\n    const isBoundX = rect.greaterWidth\n\n    if (!this.scrollControlSet) {\n      this.scrollControl = isBoundX\n      this.scrollControlSet = !this.scrollControlSet\n    }\n\n    // OPEN LOGIC\n    if (start <= WIN_WIDTH && (start >= this.minArea || start >= FALSE_WIDTH + currentPosition) && currentPosition !== ZERO && isBoundX && nextAction === OPEN && this.scrollControl && rect.displacementX < ZERO) {\n      const response = {\n        [EVENT_OBJ]: e,\n        [DIMENSION]: dimension,\n        open: true,\n        close: false\n      }\n      fn.call(this._context, response, rect)\n    }\n\n    // CLOSE LOGIC\n    if (resume >= FALSE_WIDTH && Math.abs(currentPosition) < width - bound.lower && isBoundX && nextAction === CLOSE && this.scrollControl && rect.displacementX > ZERO) {\n      const response = {\n        [EVENT_OBJ]: e,\n        [DIMENSION]: vdimension,\n        close: true,\n        open: false\n      }\n      fn.call(this._context, response, rect)\n    }\n  }\n\n  /**\n   * The `touchend` event handler for the `Right` drawer `class`\n   * @param {TouchEvent} e an event `object`: An event `object`\n   * representing an `object` of all `properties` related\n   * to the `touchend` event.\n   * @param {Function} fn - a callback function called when the `end`\n   * event is triggered\n   * @param {{}} thresholdState - a state object which should be passed\n   * by reference for updating by this method\n   * @returns {void}\n   */\n  end(e, fn, thresholdState) {\n    this.timing.end = new Date()\n    const WIN_WIDTH = this.winSize\n    const FALSE_WIDTH = WIN_WIDTH - this.bound.upper\n    const end = e.changedTouches[0].pageX || e.changedTouches[0].clientX\n    this.endX = end\n    this.endY = e.changedTouches[0].pageY || e.changedTouches[0].clientY\n\n    const rect = new Rectangle(this.startX, this.startY, this.endX, this.endY)\n\n    const start = this.startX\n    const TIMING = this.timing.end.getTime() - this.timing.start.getTime()\n    const threshold = this.threshold\n    const signedOffsetSide = parseFloat(\n      Right._getStyle(this.element)[DIRECTION].replace(\n        /[^\\d]*$/, ''\n      )\n    )\n    const bound = this.bound\n    const nonZero = `${bound.slack}${this.unit}`\n    const zero = `${ZERO}`\n    const offsetSide = Math.abs(signedOffsetSide)\n    let action = OPEN\n    // release the control for another session\n    this.scrollControl = this.scrollControlSet = false // eslint-disable-line no-multi-assign\n\n    const response = {\n      [EVENT_OBJ]: e,\n      position: signedOffsetSide,\n      rect\n    }\n\n    function getResponse(state, trueForOpen) {\n      const opposite = 'oppositeDimension'\n      if (state === THRESHOLD && trueForOpen || state === BELOW_THRESHOLD && !trueForOpen) {\n        return {\n          [DIMENSION]: zero,\n          TIMING,\n          [opposite]: nonZero,\n          ...response\n        }\n      } else if (state === THRESHOLD && !trueForOpen || state === BELOW_THRESHOLD && trueForOpen) {\n        return {\n          [DIMENSION]: nonZero,\n          TIMING,\n          [opposite]: zero,\n          ...response\n        }\n      }\n      return {}\n    }\n\n    // OPEN LOGIC\n    if (rect.displacementX < ZERO && (start >= this.minArea || start >= FALSE_WIDTH + signedOffsetSide)) {\n      if (offsetSide <= this.width * threshold) {\n        thresholdState.state = [THRESHOLD, CLOSE]\n        thresholdState.stateObj = getResponse(thresholdState.state[0], true)\n      } else {\n        thresholdState.state = [BELOW_THRESHOLD, CLOSE]\n        thresholdState.stateObj = getResponse(thresholdState.state[0], true)\n      }\n      fn.call(this, action)\n      return\n    }\n\n    // CLOSE LOGIC\n    if (rect.displacementX > ZERO && this.resumeX >= FALSE_WIDTH) {\n      action = CLOSE\n      if (offsetSide >= this.width * threshold) {\n        thresholdState.state = [THRESHOLD, OPEN]\n        thresholdState.stateObj = getResponse(thresholdState.state[0], false)\n      } else {\n        thresholdState.state = [BELOW_THRESHOLD, OPEN]\n        thresholdState.stateObj = getResponse(thresholdState.state[0], false)\n      }\n      fn.call(this, action)\n    }\n  }\n\n  setContext(ctx) {\n    this._context = ctx\n    return this\n  }\n\n  static _getStyle(elt, pseudoElt) {\n    return pseudoElt ? window.getComputedStyle(elt, pseudoElt) : window.getComputedStyle(elt)\n  }\n\n  static _windowSize() {\n    return window.screen.availWidth\n  }\n\n  // no need for `window.onorientationchange`\n  _updateOrientation() {\n    this.winSize = typeof this._winSize === 'function' ? this._winSize() : Right._windowSize()\n    this.minArea = this.winSize - (this.bound.lower || this.options.maxStartArea || MAX_START_AREA)\n  }\n}\n","import {\n  ZERO,\n  validateThreshold\n} from './../../util'\nimport {\n  Rectangle\n} from './../rectangle'\n\nconst DIRECTION = 'top'\nconst DIMENSION = 'dimension'\nconst DISPLACEMENT = 'displacement'\nconst EVENT_OBJ = 'event'\nconst THRESHOLD = 'threshold'\nconst BELOW_THRESHOLD = 'belowthreshold'\nconst OPEN = 'open'\nconst CLOSE = 'close'\nconst UNIT = 'px'\nconst MAX_START_AREA = 25\nconst THRESHOLD_VALUE = 0.667\nconst FALSE_TOUCH_START_POINT = 2\n\nexport default class Top {\n  /**\n   * @param {{}} options\n   * an object containing all required properties\n   * @param {Bound} bound a boundary object\n   */\n  constructor(options, bound) {\n    this.options = options\n    this.bound = bound\n    /**\n     * Drawer Element\n     * @type {HTMLElement}\n     */\n    this.element = options.ELEMENT\n    /**\n     * Size of device window\n     *\n     * unused: required in `Right` and `Bottom`\n     * @type {Function}\n     */\n    this._winSize = this.options.sizeOfWindow || Top._windowSize\n    this.winSize = this._winSize()\n    /**\n     * @type {number}\n     */\n    this.height = this.options.SIZE\n    this.unit = this.options.unit || UNIT\n    /**\n     * @type {number}\n     * A maximum area where the draw-start is sensitive\n     * Use set boundary (`bound`) if there's an initial\n     * offset\n     */\n    this.maxArea = this.bound.lower || this.options.maxStartArea || MAX_START_AREA\n\n    /**\n     * A threshold which the `touchmove` signal must attain\n     * before being qualified to stay shown\n     * the threshold should be a value between `0` and `1.0`\n     * @type {number}\n     */\n    this.threshold = this.options.threshold || THRESHOLD_VALUE\n    this.threshold = validateThreshold(this.threshold)\n\n    // Touch coordinates (Touch Start)\n    this.startX = -1\n    this.startY = -1\n    // Touch coordinates (Touch Move)\n    this.resumeX = -1\n    this.resumeY = -1\n    // Touch coordinates (Touch End) [these may not be important]\n    this.endX = -1\n    this.endY = -1\n\n    /**\n     * A control for scroll. This control prevents\n     * a clash between coordinates dancing between\n     * the (&delta;`X`) coords and (&delta;`Y`) coords.\n     * Utilising the `Rectangle` class to get bounds\n     * and isolate territories\n     * @type {boolean}\n     */\n    this.scrollControlSet = false\n    this.scrollControl = null\n    this.timing = {\n      /**\n       * @type {Date}\n       */\n      start: null,\n      /**\n       * @type {Date}\n       */\n      end: null\n    }\n\n    this._context = this\n  }\n\n  /**\n   * The `touchstart` event handler for the `Top` drawer `class`\n   * @param {TouchEvent} e an event `object`: An event `object`\n   * representing an `object` of all `properties` related\n   * to the `touchstart` event.\n   * @param {Function} fn - a callback function called when the `start`\n   * event is triggered\n   * @returns {void}\n   */\n  start(e, fn) {\n    this.timing.start = new Date()\n    const start =  e.changedTouches[0].pageY || e.changedTouches[0].clientY\n    this.startX = e.changedTouches[0].pageX || e.changedTouches[0].clientX\n    this.startY = start\n    /**\n     * The `Drawer`'s `Top` class uses the `CSS property`, `top`\n     * for updating and defining position of the drawn element\n     */\n    const currentPosition = parseFloat(\n      Top._getStyle(this.element)[DIRECTION].replace(\n        /[^\\d]*$/, ''\n      )\n    )\n    const bound = this.bound\n    this.positionOnStart = currentPosition\n    const dimension = bound.lower ? `-${bound.upper - bound.lower}${this.unit}` : `-${bound.upper - start}${this.unit}`\n    const displacement = `-${bound.upper - FALSE_TOUCH_START_POINT}${this.unit}`\n\n    if (start >= ZERO && start <= this.maxArea && currentPosition !== ZERO) {\n      const response = {\n        [EVENT_OBJ]: e,\n        [DIMENSION]: dimension,\n        [DISPLACEMENT]: displacement\n      }\n      fn.call(this._context, response, new Rectangle(this.startX, this.startY, -1, -1))\n    }\n  }\n\n  /**\n   * The `touchmove` event handler for the `Top` drawer `class`\n   * @param {TouchEvent} e an event `object`: An event `object`\n   * representing an `object` of all `properties` related\n   * to the `touchmove` event.\n   * @param {Function} fn - a callback function called when the `move`\n   * event is triggered\n   * @returns {void}\n   */\n  move(e, fn) {\n    /* eslint complexity: [\"error\", 25] */\n    const resume = e.changedTouches[0].pageY || e.changedTouches[0].clientY\n    this.resumeX = e.changedTouches[0].pageX || e.changedTouches[0].clientX\n    this.resumeY = resume\n\n    const currentPosition = parseFloat(\n      Top._getStyle(this.element)[DIRECTION].replace(\n        /[^\\d]*$/, ''\n      )\n    )\n    const bound = this.bound\n    const nextAction = this.positionOnStart === ZERO ? CLOSE : OPEN\n\n    const start = this.startX\n    const height = bound.upper || this.height\n    /**\n     * When the touch doesn't start from the max-height\n     * of the element ignore `start` and use `height`\n     * as starting point.\n     */\n    const virtualStart = start > height ? height : start\n    /**\n     * Dimension for opening. When the drawer is being opened,\n     * the `height` is the max dimension, and the `start` can\n     * only be less than the `height` (from a range of `0` to\n     * `this.maxArea` e.g `0` - `25`), so the current\n     * reading from `resume` is subtracted from the `height` to\n     * get the accurate position to update the drawer with.\n     */\n    const dimension = `-${height - resume}${this.unit}`\n    /**\n     * Dimension for closing. When the drawer is being closed,\n     * the `height` is the max dimension and the `start` could\n     * possibly be more than the `height`\n     * or less than the `height`.\n     * To assure an accurate dimension the `virtualStart`\n     * determines whether to use the `height` as starting point\n     * or the actual `start`. If the actual start is more than\n     * `height`, the height becomes the start point else the `start`\n     */\n    const vdimension = `-${virtualStart - resume}${this.unit}`\n    const rect = new Rectangle(\n      this.startX,\n      this.startY,\n      this.resumeX,\n      this.resumeY\n    )\n    const isBoundY = rect.greaterHeight\n\n    if (!this.scrollControlSet) {\n      this.scrollControl = isBoundY\n      this.scrollControlSet = !this.scrollControlSet\n    }\n\n    // OPEN LOGIC\n    if (start >= ZERO && (start <= this.maxArea || start <= height + currentPosition) && currentPosition !== ZERO && isBoundY && nextAction === OPEN && this.scrollControl && rect.displacementY > ZERO) {\n      const response = {\n        [EVENT_OBJ]: e,\n        [DIMENSION]: dimension,\n        open: true,\n        close: false\n      }\n      fn.call(this._context, response, rect)\n    }\n\n    // CLOSE LOGIC\n    if (resume <= this.height && Math.abs(currentPosition) < height - bound.lower && isBoundY && nextAction === CLOSE && this.scrollControl && rect.displacementY < ZERO) {\n      const response = {\n        [EVENT_OBJ]: e,\n        [DIMENSION]: vdimension,\n        close: true,\n        open: false\n      }\n      fn.call(this._context, response, rect)\n    }\n  }\n\n  /**\n   * The `touchend` event handler for the `Top` drawer `class`\n   * @param {TouchEvent} e an event `object`: An event `object`\n   * representing an `object` of all `properties` related\n   * to the `touchend` event.\n   * @param {Function} fn - a callback function called when the `end`\n   * event is triggered\n   * @param {{}} thresholdState - a state object which should be passed\n   * by reference for updating by this method\n   * @returns {void}\n   */\n  end(e, fn, thresholdState) {\n    this.timing.end = new Date()\n\n    const end = e.changedTouches[0].pageY || e.changedTouches[0].clientY\n    this.endX = e.changedTouches[0].pageX || e.changedTouches[0].clientX\n    this.endY = end\n\n    const rect = new Rectangle(this.startX, this.startY, this.endX, this.endY)\n\n    const start = this.startY\n    const TIMING = this.timing.end.getTime() - this.timing.start.getTime()\n    const threshold = this.threshold\n    const signedOffsetSide = parseFloat(\n      Top._getStyle(this.element)[DIRECTION].replace(\n        /[^\\d]*$/, ''\n      )\n    )\n    const bound = this.bound\n    const nonZero = `${bound.slack}${this.unit}`\n    const zero = `${ZERO}`\n    const height = bound.upper || this.height\n    const offsetSide = Math.abs(signedOffsetSide)\n    let action = OPEN\n    // release the control for another session\n    this.scrollControl = this.scrollControlSet = false // eslint-disable-line no-multi-assign\n\n    const response = {\n      [EVENT_OBJ]: e,\n      position: signedOffsetSide,\n      rect\n    }\n\n    function getResponse(state, trueForOpen) {\n      const opposite = 'oppositeDimension'\n      if (state === THRESHOLD && trueForOpen || state === BELOW_THRESHOLD && !trueForOpen) {\n        return {\n          [DIMENSION]: zero,\n          TIMING,\n          [opposite]: nonZero,\n          ...response\n        }\n      } else if (state === THRESHOLD && !trueForOpen || state === BELOW_THRESHOLD && trueForOpen) {\n        return {\n          [DIMENSION]: nonZero,\n          TIMING,\n          [opposite]: zero,\n          ...response\n        }\n      }\n      return {}\n    }\n\n    // OPEN LOGIC\n    if (rect.displacementY > ZERO && (start <= this.maxArea || start <= height + signedOffsetSide)) {\n      if (offsetSide <= this.height * threshold) {\n        thresholdState.state = [THRESHOLD, CLOSE]\n        thresholdState.stateObj = getResponse(thresholdState.state[0], true)\n      } else {\n        thresholdState.state = [BELOW_THRESHOLD, CLOSE]\n        thresholdState.stateObj = getResponse(thresholdState.state[0], true)\n      }\n      fn.call(this, action)\n      return\n    }\n\n    // CLOSE LOGIC\n    if (rect.displacementY < ZERO && this.resumeY <= this.height) {\n      action = CLOSE\n      if (offsetSide >= this.height * threshold) {\n        thresholdState.state = [THRESHOLD, OPEN]\n        thresholdState.stateObj = getResponse(thresholdState.state[0], false)\n      } else {\n        thresholdState.state = [BELOW_THRESHOLD, OPEN]\n        thresholdState.stateObj = getResponse(thresholdState.state[0], false)\n      }\n      fn.call(this, action)\n    }\n  }\n\n  setContext(ctx) {\n    this._context = ctx\n    return this\n  }\n\n  static _getStyle(elt, pseudoElt) {\n    return pseudoElt ? window.getComputedStyle(elt, pseudoElt) : window.getComputedStyle(elt)\n  }\n\n  static _windowSize() {\n    return window.screen.availHeight\n  }\n}\n","import Bottom from './bottom'\nimport Left from './left'\nimport Right from './right'\nimport Top from './top'\n\nconst BELOW_THRESHOLD = 'belowthreshold'\nconst THRESHOLD = 'threshold'\nconst START = 'start'\nconst MOVE = 'move'\nconst END = 'end'\n\nexport default class SnappedDrawer {\n  /**\n   * @param {{}} options an object of configuration options\n   * @param {Bound} bound a boundary object\n   */\n  constructor(options, bound) {\n    this._options = options\n    /**\n     * @type {HTMLElement}\n     */\n    this._element = options.ELEMENT\n    this._target = options.TARGET\n    this.events = ['touchstart', 'touchmove', 'touchend']\n    this._handlers = null\n    this._direction = options.DIRECTION\n    this._callibration = null\n    /**\n     * @type {{}}\n     */\n    this._callbacks = null\n    this._context = this\n\n    this._setCalibration(this._direction, bound)\n  }\n\n  // enum\n  static UP = 0\n  static LEFT = 1\n  static DOWN = 2\n  static RIGHT = 3\n\n  // public\n  /**\n   * Make sure event handlers are registered using `Drawer.on(...)` before\n   * calling `Drawer.activate()`\n   *\n   * @see {@link Drawer#on | Drawer.on}\n   * @returns {void}\n   */\n  activate() {\n    // get registered callbacks or set default\n    const startfn = this._callbacks ? this._callbacks[START] : def\n    const movefn = this._callbacks ? this._callbacks[MOVE] : def\n    const endfn = this._callbacks ? this._callbacks[END] : def\n\n    const startHandler = (e) => {\n      if (this._direction !== null) {\n        this._callibration.start(e, startfn)\n      } else {\n        this.deactivate()\n      }\n    }\n\n    const moveHandler = (e) => {\n      if (this._direction !== null) {\n        this._callibration.move(e, movefn)\n      } else {\n        this.deactivate()\n      }\n    }\n\n    const endHandler = (e) => {\n      if (this._direction !== null) {\n        const state = {}\n        this._callibration.end(e, endfn, state) // state by Ref\n        this._processThresholdState(state)\n      } else {\n        this.deactivate()\n      }\n    }\n\n    this._register(startHandler, moveHandler, endHandler)\n    for (let i = 0; i < this.events.length; i++) {\n      this._target.addEventListener(this.events[i], this._handlers[i])\n    }\n  }\n\n  /**\n   * A method provided by the `Drawer interface` to deactivate the drawer\n   * @returns {void}\n   */\n  deactivate() {\n    for (let i = 0; i < this.events.length; i++) {\n      this._target.removeEventListener(this.events[i], this._handlers[i])\n    }\n    this._register(null)\n  }\n\n  /**\n   * A function used to register callbacks for the `Drawer class` `touchstart`,\n   * `touchmove` and `touchend` event handlers.\n   *\n   * Always call `Drawer.on(...)` before `Drawer.activate()`.\n   * As in:\n   * ```js\n   * const drawer = new Drawer()\n   * drawer.on(event, () => {\n   *  // TODO\n   * }).activate()\n   * ```\n   *\n   * To prevent modifying the context of `this`, the\n   * `drawer.setContext(...)` method should be invoked with an\n   * argument which is the `this` context of the\n   * `calling class` or alternatively using a wrapper function,\n   * then call the main handler method.\n   * ```js\n   * class UseDrawer {\n   *  // CODE\n   *  method() {\n   *    const drawer = new Drawer()\n   *    drawer.on(...)\n   *      .setContext(this)\n   *      .activate()\n   *  }\n   * }\n   * // OR\n   * drawer.on(event, (stateObj) => {\n   *  this.handler.call(this, stateObj)\n   * }).activate()\n   * ```\n   *\n   * Valid event types taken by this method are:\n   * - `start`\n   * - `move`\n   * - `end`\n   * - `threshold`\n   * - `belowthreshold`\n   * @param {string} event The event type as in the above list\n   * @param {Function} fn A function to call when this event triggers\n   * @returns {this} Returns an instance variable of the `Drawer` class\n   */\n  on(event, fn) {\n    this._registerCallbacks(event, fn)\n    return this\n  }\n\n  setContext(ctx) {\n    this._context = ctx\n    this._callibration.setContext(ctx)\n    return this\n  }\n\n  toString() {\n    return '[object SnappedDrawer]'\n  }\n\n  _processThresholdState(state) {\n    if (Object.keys(state).length < 1) {\n      return\n    }\n    const thState = state.state[0]\n    const vector = state.stateObj.rect\n    delete state.stateObj.rect\n    this._callbacks[thState].call(this._context, state.state, state.stateObj, vector)\n  }\n\n  _setCalibration(point, bound) {\n    switch (point) {\n      case SnappedDrawer.UP:\n        this._callibration = new Top(this._options, bound)\n        break\n      case SnappedDrawer.LEFT:\n        this._callibration = new Left(this._options, bound)\n        break\n      case SnappedDrawer.DOWN:\n        this._callibration = new Bottom(this._options, bound)\n        break\n      case SnappedDrawer.RIGHT:\n        this._callibration = new Right(this._options, bound)\n        break\n      default:\n        throw RangeError('Direction out of range')\n    }\n  }\n\n  _registerCallbacks(event, fn) {\n    this._callbacks = this._callbacks || {\n      [START]: def,\n      [MOVE]: def,\n      [END]: def,\n      [THRESHOLD]: def,\n      [BELOW_THRESHOLD]: def\n    }\n    if (event in this._callbacks) {\n      this._callbacks[event] = fn\n    }\n  }\n\n  // private\n  _register(...handlers) {\n    this._handlers = handlers\n  }\n}\n\nfunction def() {\n  return false\n}\n","import SnappedDrawer from './snapped-drawer'\n\nexport default class Drawer {\n  static SnappedDrawer = SnappedDrawer\n  // enum\n  static UP = SnappedDrawer.UP\n  static LEFT = SnappedDrawer.LEFT\n  static DOWN = SnappedDrawer.DOWN\n  static RIGHT = SnappedDrawer.RIGHT\n}\n"],"names":["ZERO","validateThreshold","tsh","MAX_THRESHOLD","MIN_ILLEGAL_THRESHOLD","VectorRectangle","x1","y1","x2","y2","coordsX","coordsY","displacementY","displacementX","Math","sqrt","Rectangle","abs","width","height","greaterWidth","DIRECTION","DIMENSION","DISPLACEMENT","EVENT_OBJ","THRESHOLD","BELOW_THRESHOLD","OPEN","CLOSE","UNIT","MAX_START_AREA","THRESHOLD_VALUE","FALSE_TOUCH_START_POINT","Bottom","options","bound","element","ELEMENT","_winSize","sizeOfWindow","_windowSize","winSize","SIZE","unit","minArea","lower","maxStartArea","threshold","startX","startY","resumeX","resumeY","endX","endY","scrollControlSet","scrollControl","timing","start","end","_context","e","fn","Date","_updateOrientation","WIN_HEIGHT","changedTouches","pageY","clientY","pageX","clientX","currentPosition","parseFloat","_getStyle","replace","positionOnStart","dimension","upper","displacement","response","call","move","FALSE_HEIGHT","resume","nextAction","virtualStart","vdimension","rect","isBoundY","greaterHeight","open","close","thresholdState","TIMING","getTime","signedOffsetSide","nonZero","slack","zero","offsetSide","action","position","getResponse","state","trueForOpen","opposite","stateObj","setContext","ctx","elt","pseudoElt","window","getComputedStyle","screen","availHeight","Left","maxArea","isBoundX","availWidth","Right","WIN_WIDTH","FALSE_WIDTH","Top","START","MOVE","END","SnappedDrawer","_options","_element","_target","TARGET","events","_handlers","_direction","_callibration","_callbacks","_setCalibration","activate","startfn","def","movefn","endfn","startHandler","deactivate","moveHandler","endHandler","_processThresholdState","_register","i","length","addEventListener","removeEventListener","on","event","_registerCallbacks","toString","Object","keys","thState","vector","point","UP","LEFT","DOWN","RIGHT","RangeError","handlers","Drawer"],"mappings":"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"}