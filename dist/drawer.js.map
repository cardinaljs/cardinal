{"version":3,"file":"drawer.js","sources":["../src/util.js","../src/drawer/snapped-drawer/bottom.js","../src/drawer/vector.js","../src/drawer/rectangle.js","../src/drawer/snapped-drawer/left.js","../src/drawer/snapped-drawer/right.js","../src/drawer/snapped-drawer/top.js","../src/drawer/snapped-drawer/index.js","../src/drawer/index.js"],"sourcesContent":["const MAX_THRESHOLD = 1\nconst MIN_ILLEGAL_THRESHOLD = 0\n\nexport const NAV_BOX_SHADOW = '0.2rem 0 0.2rem 0 rgba(0,0,0,.4)'\nexport const ZERO = 0\n\nexport function dataCamelCase(data) {\n  // remove 'data-' prefix and return camelCase string\n  return camelCase(data.substring(5), '-')\n}\n\nexport function camelCase(data, delim = '-') {\n  const list = data instanceof Array ? data : data.split(delim)\n  return list.reduce((acc, cur) => acc + cur.charAt(0)\n    .toUpperCase() + cur.slice(1)\n  )\n}\n\nexport function unique(max) {\n  Math.floor(Math.random() * max)\n}\n\nexport function $(query) {\n  return document.querySelectorAll(query)[0]\n}\n\nexport function getAttribute(el, attr) {\n  return el.getAttribute(attr)\n}\n\nexport function hasAttribute(el, attr) {\n  return el.hasAttribute(attr)\n}\n\nexport function setAttribute(el, attr, value) {\n  el.setAttribute(attr, value)\n}\n\nexport function getData(el, attr) {\n  const prop = dataCamelCase(attr)\n  // this may return `undefined` in some Safari\n  if (el.dataset && el.dataset[prop]) {\n    return el.dataset[prop]\n  }\n  return getAttribute(el, attr)\n}\n\nexport function validateThreshold(tsh) {\n  if (tsh < MAX_THRESHOLD && tsh > MIN_ILLEGAL_THRESHOLD) {\n    tsh = MAX_THRESHOLD - tsh\n    return tsh\n  } else if (tsh < MIN_ILLEGAL_THRESHOLD) {\n    tsh = MAX_THRESHOLD\n    return tsh\n  }\n  return MAX_THRESHOLD\n}\n\n/**\n * @param {HTMLElement} el an HTMLElement whose style should\n * be accessed\n * @param {string | string[] | {}} property A property/properties\n * to set or get\n * @param {string | number} style value to set as\n * @returns {CSSStyleDeclaration | string} A css style property\n * or CSSStyleDeclaration object\n */\nexport function css(el, property, style = null) {\n  const STYLEMAP = window.getComputedStyle(el)\n\n  style = style || null\n  property = property || null\n\n  if (typeof property === 'string' && style !== null) {\n    // setting one property\n    el.style[property] = style\n    return null\n  }\n  if (typeof property === 'object' && property instanceof Object) {\n    // `style` MUST = null\n    // setting many properties\n    style = property\n    for (const prop of Object.keys(style)) {\n      el.style[prop] = style[prop]\n    }\n  } else if (property instanceof Array) {\n    // return all values of properties in the array for\n    // the element as object\n    const ostyle = {}\n    style = STYLEMAP\n    for (const prop of style) {\n      ostyle[prop] = style[prop]\n    }\n    return ostyle\n  } else {\n    // get style from property\n    return STYLEMAP[property]\n  }\n  return STYLEMAP\n}\n","import { ZERO } from './../../util'\n\nexport default class Bottom {\n  /**\n   *\n   * @param {*} options\n   * an object containing all required properties\n   */\n  constructor(options) {\n    this.options = options\n    this.element = options.ELEMENT\n    /**\n     * Size of device window\n     */\n    this.winSize = this.options.sizeOfWindow || window.screen.availHeight\n    this.height = this.element.offsetHeight\n    this.unit = this.options.unit\n    /**\n     * @type number\n     * A maximum area where the draw-start is sensitive\n     */\n    this.maxArea = this.winSize - this.options.maxStartArea\n\n    this.context = null\n  }\n\n  start(e) {\n    const start = e.changedTouches[0].pageY || e.changedTouches[0].clientY\n    const startX =  e.changedTouches[0].pageX || e.changedTouches[0].clientX\n    /**\n     * The `Drawer`'s `Top` class uses the `CSS property` `top`\n     * for updating and defining position of the drawn element\n     */\n    const currentPosition = parseFloat(\n      this.element.style.bottom.replace(\n        /[^\\d]*$/, ''\n      )\n    )\n    const dimension = `-${this.height - start}${this.unit}`\n    const displacement = `-${this.height - Final.START}${this.unit}`\n\n    if (start >= ZERO && start <= this.maxArea && currentPosition !== Final.ZERO) {\n      this.element.style.bottom = displacement || dimension\n    }\n  }\n\n  move() {\n\n  }\n\n  end() {\n\n  }\n\n  setContext(ctx) {\n    this.context = ctx\n    return this\n  }\n\n  static _getStyle(elt, pseudoElt) {\n    return pseudoElt ? window.getComputedStyle(elt, pseudoElt) : window.getComputedStyle(elt)\n  }\n\n  // no need for `window.onorientationchange`\n  _loopWinSizeChangeEvent() {\n    window.setInterval(() => {\n      this.winSize = window.screen.availWidth\n    }, 1e3)\n  }\n}\n","export class Vector {\n  constructor(x1, y1, x2, y2) {\n    this.coordsX = {\n      x1,\n      x2\n    }\n    this.coordsY = {\n      y1,\n      y2\n    }\n  }\n\n  get displacementX() {\n    return this.coordsX.x2 - this.coordsX.x1\n  }\n\n  get displacementY() {\n    return this.coordsY.y2 - this.coordsY.y1\n  }\n}\n","import { Vector } from './vector'\n\nexport class Rectangle extends Vector {\n  constructor(x1, y1, x2, y2) {\n    super(x1, y1, x2, y2)\n  }\n\n  // getter\n  get width() {\n    return Math.abs(this.displacementX)\n  }\n\n  get height() {\n    return Math.abs(this.displacementY)\n  }\n\n  get greaterWidth() {\n    return this.width > this.height\n  }\n\n  get greaterHeight() {\n    return !this.greaterWidth\n  }\n}\n","import {\n  ZERO,\n  validateThreshold\n} from './../../util'\nimport {\n  Rectangle\n} from './../rectangle'\n\nconst DIRECTION = 'left'\nconst DIMENSION = 'dimension'\nconst DISPLACEMENT = 'displacement'\nconst EVENT_OBJ = 'event'\nconst THRESHOLD = 'threshold'\nconst BELOW_THRESHOLD = 'belowthreshold'\nconst OPEN = 'open'\nconst CLOSE = 'close'\nconst UNIT = 'px'\nconst MAX_START_AREA = 25\nconst THRESHOLD_VALUE = 0.666\nconst FALSE_TOUCH_START_POINT = 2\n\nexport default class Left {\n  /**\n   *\n   * @param {{}} options\n   * an object containing all required properties\n   */\n  constructor(options) {\n    this.options = options\n    /**\n     * @type {HTMLElement}\n     */\n    this.element = options.ELEMENT\n    /**\n     * Size of device window\n     * @type {number}\n     */\n    this.winSize = this.options.sizeOfWindow || window.screen.availWidth\n    /**\n     * @type {number}\n     */\n    this.width = this.options.SIZE\n    this.unit = this.options.unit || UNIT\n    /**\n     * @type {number}\n     * A maximum area where the draw-start is sensitive\n     */\n    this.maxArea = this.options.maxStartArea || MAX_START_AREA\n\n    /**\n     * A threshold which the `touchmove` signal must attain\n     * before being qualified to stay shown\n     * the threshold should be a value between `0` and `1.0`\n     * @type {number}\n     */\n    this.threshold = this.options.threshold || THRESHOLD_VALUE\n    this.threshold = validateThreshold(this.threshold)\n\n    // Touch coordinates (Touch Start)\n    this.startX = -1\n    this.startY = -1\n    // Touch coordinates (Touch Move)\n    this.resumeX = -1\n    this.resumeY = -1\n    // Touch coordinates (Touch End) [these may not be important]\n    this.endX = -1\n    this.endY = -1\n\n    /**\n     * A control for scroll. This control prevents\n     * a clash between coordinates dancing between\n     * the (&delta;`X`) coords and (&delta;`Y`) coords.\n     * Utilising the `Rectangle` class to get bounds\n     * and isolate territories\n     * @type {boolean}\n     */\n    this.scrollControlSet = false\n    this.scrollControl = null\n    this.timing = {\n      /**\n       * @type {Date}\n       */\n      start: null,\n      /**\n       * @type {Date}\n       */\n      end: null\n    }\n\n    this.context = null\n  }\n\n  /**\n   * The `touchstart` event handler for the `Left` drawer `class`\n   * @param {TouchEvent} e an event `object`: An event `object`\n   * representing an `object` of all `properties` related\n   * to the `touchstart` event.\n   * @param {Function} fn - a callback function called when the `start`\n   * event is triggered\n   * @returns {void}\n   */\n  start(e, fn) {\n    this.timing.start = new Date()\n    const start = e.changedTouches[0].pageX || e.changedTouches[0].clientX\n    this.startX = start\n    this.startY =  e.changedTouches[0].pageY || e.changedTouches[0].clientY\n    /**\n     * The `Drawer`'s `Left` class uses the `CSS property`, `left`\n     * for updating and defining position of the drawn element\n     */\n    const currentPosition = parseFloat(\n      Left._getStyle(this.element)[DIRECTION].replace(\n        /[^\\d]*$/, ''\n      )\n    )\n    this.positionOnStart = currentPosition\n    const dimension = `-${this.width - start}${this.unit}`\n    const displacement = `-${this.width - FALSE_TOUCH_START_POINT}${this.unit}`\n\n    if (start >= ZERO && start <= this.maxArea && currentPosition !== ZERO) {\n      const response = {\n        [EVENT_OBJ]: e,\n        [DIMENSION]: dimension,\n        [DISPLACEMENT]: displacement\n      }\n      fn.call(this.context || this, response, new Rectangle(this.startX, this.startY, -1, -1))\n    }\n  }\n\n  /**\n   * The `touchmove` event handler for the `Left` drawer `class`\n   * @param {TouchEvent} e an event `object`: An event `object`\n   * representing an `object` of all `properties` related\n   * to the `touchmove` event.\n   * @param {Function} fn - a callback function called when the `move`\n   * event is triggered\n   * @returns {void}\n   */\n  move(e, fn) {\n    const resume = e.changedTouches[0].pageX || e.changedTouches[0].clientX\n    this.resumeX = resume\n    this.resumeY = e.changedTouches[0].pageY || e.changedTouches[0].clientY\n\n    const currentPosition = parseFloat(\n      Left._getStyle(this.element)[DIRECTION].replace(\n        /[^\\d]*$/, ''\n      )\n    )\n    const nextAction = this.positionOnStart === ZERO ? CLOSE : OPEN\n\n    const start = this.startX\n    const width = this.width\n    /**\n     * When the touch doesn't start from the max-width\n     * of the element ignore `start` and use `width`\n     * as starting point.\n     */\n    const virtualStart = start > width ? width : start\n    /**\n     * Dimension for opening. When the drawer is being opened,\n     * the `width` is the max dimension, and the `start` can\n     * only be less than the `width` (from a range of `0` to `this.maxArea` e.g `0` - `25`), so the current\n     * reading from `resume` is subtracted from the `width` to\n     * get the accurate position to update the drawer with.\n     */\n    const dimension = `-${width - resume}${this.unit}`\n    /**\n     * Dimension for closing. When the drawer is being closed,\n     * the `width` is the max dimension and the `start` could\n     * possibly be more than the `width`\n     * or less than the `width`.\n     * To assure an accurate dimension the `virtualStart`\n     * determines whether to use the `width` as starting point\n     * or the actual `start`. If the actual start is more than\n     * `width`, the width becomes the start point else the `start`\n     */\n    const vdimension = `-${virtualStart - resume}${this.unit}`\n    const rect = new Rectangle(\n      this.startX,\n      this.startY,\n      this.resumeX,\n      this.resumeY\n    )\n    const isBoundX = rect.greaterWidth\n\n    if (!this.scrollControlSet) {\n      this.scrollControl = isBoundX\n      this.scrollControlset = !this.scrollControlSet\n    }\n\n    // OPEN LOGIC\n    if (start >= ZERO && start <= this.maxArea && currentPosition !== ZERO && isBoundX && nextAction === OPEN && this.scrollControl && rect.displacementX > ZERO) {\n      const response = {\n        [EVENT_OBJ]: e,\n        [DIMENSION]: dimension,\n        open: true,\n        close: false\n      }\n      fn.call(this.context || this, response, rect)\n    }\n\n    // CLOSE LOGIC\n    if (resume <= this.width && currentPosition <= this.width && isBoundX && nextAction === CLOSE && this.scrollControl && rect.displacementX < ZERO) {\n      const response = {\n        [EVENT_OBJ]: e,\n        [DIMENSION]: vdimension,\n        close: true,\n        open: false\n      }\n      fn.call(this.context || this, response, rect)\n    }\n  }\n\n  /**\n   * The `touchend` event handler for the `Left` drawer `class`\n   * @param {TouchEvent} e an event `object`: An event `object`\n   * representing an `object` of all `properties` related\n   * to the `touchend` event.\n   * @param {Function} fn - a callback function called when the `end`\n   * event is triggered\n   * @param {{}} thresholdState - a state object which should be passed\n   * by reference for updating by this method\n   * @returns {void}\n   */\n  end(e, fn, thresholdState) {\n    this.timing.end = new Date()\n\n    const end = e.changedTouches[0].pageX || e.changedTouches[0].clientX\n    this.endX = end\n    this.endY = e.changedTouches[0].pageY || e.changedTouches[0].clientY\n\n    const rect = new Rectangle(this.startX, this.startY, this.endX, this.endY)\n\n    const start = this.startX\n    const TIMING = this.timing.end.getTime() - this.timing.start.getTime()\n    const threshold = this.threshold\n    const signedOffsetSide = parseFloat(\n      Left._getStyle(this.element)[DIRECTION].replace(\n        /[^\\d]*$/, ''\n      )\n    )\n    const nonZero = `-${this.width}px`\n    const zero = `${ZERO}`\n    const offsetSide = Math.abs(signedOffsetSide)\n    let action = OPEN\n    // release the control for another session\n    this.scrollControl = this.scrollControlSet = false // eslint-disable-line no-multi-assign\n\n    const nextAction = this.positionOnStart === ZERO ? CLOSE : OPEN\n    const response = {\n      [EVENT_OBJ]: e,\n      position: signedOffsetSide,\n      rect\n    }\n\n    function getResponse(state, trueForOpen) {\n      const opposite = 'oppositeDimension'\n      if (state === THRESHOLD && trueForOpen || state === BELOW_THRESHOLD && !trueForOpen) {\n        return {\n          [DIMENSION]: zero,\n          TIMING,\n          [opposite]: nonZero,\n          ...response\n        }\n      } else if (state === THRESHOLD && !trueForOpen || state === BELOW_THRESHOLD && trueForOpen) {\n        return {\n          [DIMENSION]: nonZero,\n          TIMING,\n          [opposite]: zero,\n          ...response\n        }\n      }\n      return {}\n    }\n\n    // OPEN LOGIC\n    if (nextAction === OPEN && start <= this.maxArea) {\n      if (offsetSide <= this.width * threshold) {\n        thresholdState.state = [THRESHOLD, CLOSE]\n        thresholdState.stateObj = getResponse(thresholdState.state[0], true)\n      } else {\n        thresholdState.state = [BELOW_THRESHOLD, CLOSE]\n        thresholdState.stateObj = getResponse(thresholdState.state[0], true)\n      }\n      fn.call(this, action)\n      return\n    }\n\n\n    // CLOSE LOGIC\n    if (nextAction === CLOSE && rect.displacementX < ZERO && this.resumeX <= this.width) {\n      action = CLOSE\n      if (offsetSide > this.width * threshold) {\n        thresholdState.state = [THRESHOLD, OPEN]\n        thresholdState.stateObj = getResponse(thresholdState.state[0], false)\n      } else {\n        thresholdState.state = [BELOW_THRESHOLD, OPEN]\n        thresholdState.stateObj = getResponse(thresholdState.state[0], false)\n      }\n      fn.call(this, action)\n    }\n  }\n\n  setContext(ctx) {\n    this.context = ctx\n    return this\n  }\n\n  static _getStyle(elt, pseudoElt) {\n    return pseudoElt ? window.getComputedStyle(elt, pseudoElt) : window.getComputedStyle(elt)\n  }\n\n  // no need for `window.onorientationchange`\n  _loopWinSizeChangeEvent() {\n    window.setInterval(() => {\n      this.winSize = window.screen.availWidth\n    }, 1e3) // eslint-disable-line no-magic-numbers\n  }\n}\n","import { ZERO } from './../../util'\n\nconst DIRECTION = 'right'\nconst DIMENSION = 'dimension'\nconst DISPLACEMENT = 'displacement'\nconst EVENT_OBJ = 'event'\nconst THRESHOLD = 'threshold'\nconst BELOW_THRESHOLD = 'belowthreshold'\n\nexport default class Right {\n  /**\n   *\n   * @param {*} options\n   * an object containing all required properties\n   */\n  constructor(options) {\n    this.options = options\n    // the target element, not listening to,\n    // but reacting to event\n    this.element = options.ELEMENT\n    /**\n     * @type number\n     * Size of device window in pixels\n     */\n    this.winSize = this.options.sizeOfWindow || window.screen.availWidth\n    /**\n     * @type number\n     * A numerical representation of the\n     * target element's width\n     */\n    this.width = this.element.offsetWidth\n    this.unit = this.options.UNIT\n    /**\n     * @type number\n     * A maximum area where the draw-start is sensitive\n     */\n    this.maxArea = this.winSize - this.options.maxStartArea\n\n    /**\n     * A threshold which the `touchmove` signal must attain\n     * before being qualified to stay shown\n     * the threshold should be a value between `1.0` and `0`\n     * @type number\n     */\n    this.threshold = this.options.threshold\n\n    // Touch coordinates (Touch Start)\n    this.startX = -1\n    this.startY = -1\n    // Touch coordinates (Touch Move)\n    this.resumeX = -1\n    this.resumeY = -1\n\n    /**\n     * A control for scroll. This control prevents\n     * a clash between coordinates dancing between\n     * the (&delta;`X`) coords and (&delta;`Y`) coords.\n     * Utilising the `Rectangle` class to get bounds\n     * and isolate territories\n     * @type boolean\n     */\n    this.scrollControlSet = false\n    this.scrollControl = null\n\n    this.context = null\n  }\n\n  start() {\n    const start = e.changedTouches[0].pageX || e.changedTouches[0].clientX\n    this.startX = start\n    this.startY =  e.changedTouches[0].pageY || e.changedTouches[0].clientY\n    /**\n     * The `Drawer`'s `Right` class uses the `CSS property` `Right`\n     * for updating and defining position of the drawn element\n     */\n    const currentPosition = parseFloat(\n      this.element.style.right.replace(\n        /[^\\d]*$/, ''\n      )\n    )\n    const dimension = `-${this.width - (this.winSize - start)}${this.unit}`\n    const displacement = `-${this.width - START}${this.unit}`\n\n    if (start >= ZERO && start <= this.maxArea && currentPosition !== ZERO) {\n      this.element.style.right = displacement || dimension\n    }\n  }\n\n  /**\n   * The `touchmove` event handler for the `Right` drawer `class`\n   * @param {*} e an event `object`: An event `object`\n   * representing an `object` of all `properties` related\n   * to the `touchstart` event.\n   */\n  move() {\n    const resume = e.changedTouches[0].pageX || e.changedTouches[0].clientX\n    this.resumeX = resume\n    this.resumeY = e.changedTouches[0].pageY || e.changedTouches[0].clientY\n\n    const currentPosition = parseFloat(\n      this.element.style[DIRECTION].replace(\n        /[^\\d]*$/, ''\n      )\n    )\n\n    const start = this.startX\n    const width = this.width\n    /**\n     * When the touch doesn't start from the max-width\n     * of the element ignore `start` and use `width`\n     * as starting point.\n     */\n    const virtualStart = start < (this.winSize - width) ? this.winSize - width : start\n    /**\n     * Dimension for opening. When the drawer is being opened,\n     * the `width` is the max dimension, and the `start` can\n     * only be less than the `width` (from a range of `0` to `this.maxArea` e.g `0` - `25`), so the current\n     * reading from `resume` is subtracted from the `width` to\n     * get the accurate position to update the drawer with.\n     *\n     *\n     * **WHY IT IS LIKE THIS `width - (this.winSize - resume)`**\n     *\n     * `this.winSize - resume` converts it from a vector to a scalar.\n     * Keeping it as a vector makes the dimension inaccurate\n     * as the `right` property of the `HTMLElement.style` is the one being updated and not the left,\n     * so the css `right` property is an enough respect for its direction.\n     *\n     * *__If it should be respected then__*,\n     * 1. The `Right Drawer class` would be updating `left css property` and not `right`, i.e, initialy an element that uses the `Right Drawer` must have a `css file` that defines a `css left property` for the element and not a `right` property; As in\n     * ```scss\n     * .menu {\n     *   left: // (window size + width of the element)px\n     * }\n     * ```\n     * 2. Cardinal's `Right Drawer class` can always update\n     * as `HTMLElement.style.left = ${width - resume}px`, and\n     * not as it is now.\n     * This way there is no `right` property respecting the direction\n     * So the vector attribute of the dimension is preserved.\n     */\n    const dimension = `-${width - (this.winSize - resume)}${this.unit}`\n    /**\n     * Dimension for closing. When the drawer is being closed,\n     * the `width` is the max dimension and the `start` could\n     * possibly be more than the `width`\n     * or less than the `width`.\n     * To assure an accurate dimension the `virtualStart`\n     * determines whether to use the `width` as starting point\n     * or the actual `start`. If the actual start is more than\n     * `width`, the width becomes the start point else the `start`\n     */\n    const vdimension = `-${resume - virtualStart}${this.unit}`\n    const rect = new Rectangle(\n      this.startX,\n      this.startY,\n      this.resumeX,\n      this.resumeY\n    )\n    const isBoundX = rect.wGTh()\n    // eslint-disable-next-line no-unused-expression, no-sequence, no-extra-parens\n    !this.scrollControlSet &&\n    (this.scrollControl = isBoundX), (this.scrollControlset = !this.scrollControlSet)\n  }\n\n  end() {\n\n  }\n\n  setContext(ctx) {\n    this.context = ctx\n    return this\n  }\n\n  static _getStyle(elt, pseudoElt) {\n    return pseudoElt ? window.getComputedStyle(elt, pseudoElt) : window.getComputedStyle(elt)\n  }\n\n  // no need for `window.onorientationchange`\n  _loopWinSizeChangeEvent() {\n    window.setInterval(() => {\n      this.winSize = window.screen.availWidth\n    }, 1e3)\n  }\n}\n","import { ZERO } from './../../util'\n\nexport default class Top {\n  /**\n   *\n   * @param {*} options\n   * an object containing all required properties\n   */\n  constructor(options) {\n    this.options = options\n    this.element = options.ELEMENT\n    /**\n     * Size of device window\n     */\n    this.winSize = this.options.sizeOfWindow || window.screen.availHeight\n    this.height = this.element.offsetHeight\n    this.unit = this.options.unit\n    /**\n     * @type number\n     * A maximum area where the draw-start is sensitive\n     */\n    this.maxArea = this.options.maxStartArea\n    this.context = null\n  }\n\n  start(e) {\n    let start = e.changedTouches[0].pageY || e.changedTouches[0].clientY\n    let startX =  e.changedTouches[0].pageX || e.changedTouches[0].clientX\n    /**\n     * The `Drawer`'s `Top` class uses the `CSS property` `top`\n     * for updating and defining position of the drawn element\n     */\n    let currentPosition = parseFloat(\n      this.element.style.top.replace(\n        /[^\\d]*$/, ''\n      )\n    )\n    let dimension = `-${this.height - start}${this.unit}`\n    let displacement = `-${this.height - START}${this.unit}`\n\n    if (start >= ZERO && start <= this.maxArea && currentPosition != ZERO) {\n      this.element.style.top = displacement || dimension\n    }\n  }\n\n  move() {\n\n  }\n\n  end() {\n\n  }\n\n  setContext(ctx) {\n    this.context = ctx\n    return this\n  }\n\n  static _getStyle(elt, pseudoElt) {\n    return pseudoElt ? window.getComputedStyle(elt, pseudoElt) : window.getComputedStyle(elt)\n  }\n\n  // no need for `window.onorientationchange`\n  _loopWinSizeChangeEvent() {\n    window.setInterval(() => {\n      this.winSize = window.screen.availWidth\n    }, 1e3)\n  }\n}\n","import Bottom from './bottom'\nimport Left from './left'\nimport Right from './right'\nimport Top from './top'\n\nconst BELOW_THRESHOLD = 'belowthreshold'\nconst THRESHOLD = 'threshold'\nconst START = 'start'\nconst MOVE = 'move'\nconst END = 'end'\n\nexport default class SnappedDrawer {\n  /**\n   *\n   * @param {{}} options an object of configuration options\n   */\n  constructor(options) {\n    this._options = options\n    /**\n     * @type {HTMLElement}\n     */\n    this._element = options.ELEMENT\n    this._target = options.TARGET\n    this.events = ['touchstart', 'touchmove', 'touchend']\n    this._handlers = null\n    this._direction = options.DIRECTION\n    this._callibration = null\n    /**\n     * @type {{}}\n     */\n    this._callbacks = null\n    this._context = null\n\n    this._setCalibration(this._direction)\n  }\n\n  // enum\n  static UP = 0\n  static LEFT = 1\n  static DOWN = 2\n  static RIGHT = 3\n\n  // public\n  /**\n   * Make sure event handlers are registered using `Drawer.on(...)` before\n   * calling `Drawer.activate()`\n   *\n   * @see {@link Drawer#on | Drawer.on}\n   * @returns {void}\n   */\n  activate() {\n    // get registered callbacks or set default\n    const startfn = this._callbacks ? this._callbacks[START] : def\n    const movefn = this._callbacks ? this._callbacks[MOVE] : def\n    const endfn = this._callbacks ? this._callbacks[END] : def\n\n    const startHandler = (e) => {\n      if (this._direction !== null) {\n        this._callibration.start(e, startfn)\n      } else {\n        this.deactivate()\n      }\n    }\n\n    const moveHandler = (e) => {\n      if (this._direction !== null) {\n        this._callibration.move(e, movefn)\n      } else {\n        this.deactivate()\n      }\n    }\n\n    const endHandler = (e) => {\n      if (this._direction !== null) {\n        const state = {}\n        this._callibration.end(e, endfn, state) // state by Ref\n        this._processThresholdState(state)\n      } else {\n        this.deactivate()\n      }\n    }\n\n    this._register(startHandler, moveHandler, endHandler)\n    for (let i = 0; i < this.events.length; i++) {\n      this._target.addEventListener(this.events[i], this._handlers[i])\n    }\n  }\n\n  /**\n   * A method provided by the `Drawer interface` to deactivate the drawer\n   * @returns {void}\n   */\n  deactivate() {\n    for (let i = 0; i < this.events; i++) {\n      this._target.removeEventListener(this.events[i], this._handlers[i])\n    }\n    this._register()\n  }\n\n  /**\n   * A function used to register callbacks for the `Drawer class` `touchstart`,\n   * `touchmove` and `touchend` event handlers.\n   *\n   * Always call `Drawer.on(...)` before `Drawer.activate()`.\n   * As in:\n   * ```js\n   * const drawer = new Drawer()\n   * drawer.on(event, () => {\n   *  // TODO\n   * }).activate()\n   * ```\n   *\n   * To prevent modifying the context of `this`, the\n   * `drawer.setContext(...)` method should be invoked with an\n   * argument which is the `this` context of the\n   * `calling class` or alternatively using a wrapper function,\n   * then call the main handler method.\n   * ```js\n   * class UseDrawer {\n   *  // CODE\n   *  method() {\n   *    const drawer = new Drawer()\n   *    drawer.on(...)\n   *      .setContext(this)\n   *      .activate()\n   *  }\n   * }\n   * // OR\n   * drawer.on(event, (stateObj) => {\n   *  this.handler.call(this, stateObj)\n   * }).activate()\n   * ```\n   *\n   * Valid event types taken by this method are:\n   * - `start`\n   * - `move`\n   * - `end`\n   * - `threshold`\n   * - `belowthreshold`\n   * @param {string} event The event type as in the above list\n   * @param {Function} fn A function to call when this event triggers\n   * @returns {this} Returns an instance variable of the `Drawer` class\n   */\n  on(event, fn) {\n    this._registerCallbacks(event, fn)\n    return this\n  }\n\n  setContext(ctx) {\n    this._context = ctx\n    this._callibration.setContext(ctx)\n    return this\n  }\n\n  _processThresholdState(state) {\n    if (Object.keys(state).length < 1) {\n      return\n    }\n    const thState = state.state[0]\n    const vector = state.stateObj.rect\n    delete state.stateObj.rect\n    this._callbacks[thState].call(this._context || this, state.state, state.stateObj, vector)\n  }\n\n  _setCalibration(point) {\n    switch (point) {\n      case SnappedDrawer.UP:\n        this._callibration = new Top(this._options)\n        break\n      case SnappedDrawer.LEFT:\n        this._callibration = new Left(this._options)\n        break\n      case SnappedDrawer.DOWN:\n        this._callibration = new Bottom(this._options)\n        break\n      case SnappedDrawer.RIGHT:\n        this._callibration = new Right(this._options)\n        break\n      default:\n        throw RangeError('Direction out of range')\n    }\n  }\n\n  _registerCallbacks(event, fn) {\n    this._callbacks = this._callbacks || {\n      [START]: def,\n      [MOVE]: def,\n      [END]: def,\n      [THRESHOLD]: def,\n      [BELOW_THRESHOLD]: def\n    }\n    if (event in this._callbacks) {\n      this._callbacks[event] = fn\n    }\n  }\n\n  // private\n  _register(...handlers) {\n    this._handlers = [...handlers]\n  }\n}\n\nfunction def() {\n  return false\n}\n","import SnappedDrawer from './snapped-drawer'\n\nexport default class Drawer {\n  static SnappedDrawer = SnappedDrawer\n  // enum\n  static UP = SnappedDrawer.UP\n  static LEFT = SnappedDrawer.LEFT\n  static DOWN = SnappedDrawer.DOWN\n  static RIGHT = SnappedDrawer.RIGHT\n}\n"],"names":["MAX_THRESHOLD","MIN_ILLEGAL_THRESHOLD","ZERO","validateThreshold","tsh","Bottom","options","element","ELEMENT","winSize","sizeOfWindow","window","screen","availHeight","height","offsetHeight","unit","maxArea","maxStartArea","context","start","e","changedTouches","pageY","clientY","startX","pageX","clientX","currentPosition","parseFloat","style","bottom","replace","dimension","displacement","Final","START","move","end","setContext","ctx","_getStyle","elt","pseudoElt","getComputedStyle","_loopWinSizeChangeEvent","setInterval","availWidth","Vector","x1","y1","x2","y2","coordsX","coordsY","Rectangle","Math","abs","displacementX","displacementY","width","greaterWidth","DIRECTION","DIMENSION","DISPLACEMENT","EVENT_OBJ","THRESHOLD","BELOW_THRESHOLD","OPEN","CLOSE","UNIT","MAX_START_AREA","THRESHOLD_VALUE","FALSE_TOUCH_START_POINT","Left","SIZE","threshold","startY","resumeX","resumeY","endX","endY","scrollControlSet","scrollControl","timing","fn","Date","positionOnStart","response","call","resume","nextAction","virtualStart","vdimension","rect","isBoundX","scrollControlset","open","close","thresholdState","TIMING","getTime","signedOffsetSide","nonZero","zero","offsetSide","action","position","getResponse","state","trueForOpen","opposite","stateObj","Right","offsetWidth","right","wGTh","Top","top","MOVE","END","SnappedDrawer","_options","_element","_target","TARGET","events","_handlers","_direction","_callibration","_callbacks","_context","_setCalibration","activate","startfn","def","movefn","endfn","startHandler","deactivate","moveHandler","endHandler","_processThresholdState","_register","i","length","addEventListener","removeEventListener","on","event","_registerCallbacks","Object","keys","thState","vector","point","UP","LEFT","DOWN","RIGHT","RangeError","handlers","Drawer"],"mappings":"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"}