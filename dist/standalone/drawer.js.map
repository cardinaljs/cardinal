{"version":3,"file":"drawer.js","sources":["../../src/drawer/rectangle.js","../../src/drawer/vector.js","../../src/drawer/snapped-drawer/bottom.js","../../src/drawer/snapped-drawer/left.js","../../src/drawer/snapped-drawer/right.js","../../src/drawer/snapped-drawer/top.js","../../src/drawer/snapped-drawer/index.js","../../src/drawer/index.js"],"sourcesContent":["export class Rectangle {\n  constructor(...paths) {\n    if (paths.length === 4) {\n      const [x1, y1, x2, y2] = paths\n      this.coordsX = {\n        x1,\n        x2\n      }\n      this.coordsY = {\n        y1,\n        y2\n      }\n    } else if (paths.length === 2) {\n      const {\n        x1, y1\n      } = paths[0]\n      const {\n        x2, y2\n      } = paths[1]\n      this.coordsX = {\n        x1,\n        x2\n      }\n      this.coordsY = {\n        y1,\n        y2\n      }\n    }\n  }\n\n  // getter\n  get width() {\n    return Math.abs(this.displacementX)\n  }\n\n  get height() {\n    return Math.abs(this.displacementY)\n  }\n\n  get greaterWidth() {\n    return this.width > this.height\n  }\n\n  get greaterHeight() {\n    return !this.greaterWidth\n  }\n}\n","import {\n  Rectangle\n} from './rectangle'\n\nexport class VectorRectangle extends Rectangle {\n  // eslint-disable-next-line no-useless-constructor\n  constructor(...paths) {\n    super(...paths)\n  }\n\n  get displacementX() {\n    return this.coordsX.x2 - this.coordsX.x1\n  }\n\n  get displacementY() {\n    return this.coordsY.y2 - this.coordsY.y1\n  }\n\n  get diagonalLength() {\n    if (!this.displacementY) {\n      return this.displacementX\n    } else if (!this.displacementX) {\n      return this.displacementY\n    }\n    return Math.sqrt(\n      this.displacementY ** 2 + this.displacementX ** 2\n    )\n  }\n}\n","import {\n  Path,\n  ZERO,\n  validateThreshold\n} from './../../util'\nimport {\n  VectorRectangle\n} from './../vector'\n\nconst DIRECTION = 'bottom'\nconst DIMENSION = 'dimension'\nconst DISPLACEMENT = 'displacement'\nconst EVENT_OBJ = 'event'\nconst THRESHOLD = 'threshold'\nconst BELOW_THRESHOLD = 'belowthreshold'\nconst OPEN = 'open'\nconst CLOSE = 'close'\nconst UNIT = 'px'\nconst MAX_START_AREA = 25\nconst THRESHOLD_VALUE = 0.667\nconst FALSE_TOUCH_START_POINT = 2\n\nexport default class Bottom {\n  /**\n   * @param {{}} options\n   * an object containing all required properties\n   * @param {Bound} bound a boundary object\n   */\n  constructor(options, bound) {\n    this.options = options\n    this.bound = bound\n    /**\n     * Drawer Element\n     * @type {HTMLElement}\n     */\n    this.element = options.ELEMENT\n    /**\n     * Size of device window\n     * @type {Function}\n     */\n    this._winSize = this.options.sizeOfWindow || Bottom._windowSize\n    /**\n     * @type {number}\n     */\n    this.winSize = this._winSize()\n    /**\n     * @type {number}\n     */\n    this.height = this.options.SIZE\n    this.unit = this.options.unit || UNIT\n    /**\n     * @type {number}\n     * A minimum area where the draw-start is sensitive\n     */\n    this.minArea = this.winSize - (this.bound.lower || this.options.maxStartArea || MAX_START_AREA)\n\n    /**\n     * A threshold which the `touchmove` signal must attain\n     * before being qualified to stay shown\n     * the threshold should be a value between `0` and `1.0`\n     * @type {number}\n     */\n    this.threshold = this.options.threshold || THRESHOLD_VALUE\n    this.threshold = validateThreshold(this.threshold)\n\n    // Touch coordinates (Touch Start)\n    this.startX = -1\n    this.startY = -1\n    // Touch coordinates (Touch Move)\n    this.resumeX = -1\n    this.resumeY = -1\n    // Touch coordinates (Touch End) [these may not be important]\n    this.endX = -1\n    this.endY = -1\n\n    /**\n     * A control for scroll. This control prevents\n     * a clash between coordinates dancing between\n     * the (&delta;`X`) coords and (&delta;`Y`) coords.\n     * Utilising the `Rectangle` class to get bounds\n     * and isolate territories\n     * @type {boolean}\n     */\n    this.scrollControlSet = false\n    this.scrollControl = null\n    this.timing = {\n      /**\n       * @type {Date}\n       */\n      start: null,\n      /**\n       * @type {Date}\n       */\n      end: null\n    }\n\n    this._context = this\n  }\n\n  /**\n   * The `touchstart` event handler for the `Bottom` drawer `class`\n   * @param {TouchEvent} e an event `object`: An event `object`\n   * representing an `object` of all `properties` related\n   * to the `touchstart` event.\n   * @param {Function} fn - a callback function called when the `start`\n   * event is triggered\n   * @returns {void}\n   */\n  start(e, fn) {\n    this.timing.start = new Date()\n    this._updateOrientation()\n    const WIN_HEIGHT = this.winSize\n    const start =  e.changedTouches[0].pageY || e.changedTouches[0].clientY\n    this.startX = e.changedTouches[0].pageX || e.changedTouches[0].clientX\n    this.startY = start\n    /**\n     * The `Drawer`'s `Bottom` class uses the `CSS property`, `bottom`\n     * for updating and defining position of the drawn element\n     */\n    const currentPosition = parseFloat(\n      Bottom._getStyle(this.element)[DIRECTION].replace(\n        /[^\\d]*$/, ''\n      )\n    )\n    const bound = this.bound\n    this.positionOnStart = currentPosition\n    const dimension = bound.lower ? `-${bound.upper - (WIN_HEIGHT - bound.lower)}${this.unit}` : `-${bound.upper - (WIN_HEIGHT - start)}${this.unit}`\n    const displacement = `-${bound.upper - (WIN_HEIGHT - FALSE_TOUCH_START_POINT)}${this.unit}`\n\n    if (start <= WIN_HEIGHT && start >= this.minArea && currentPosition !== ZERO) {\n      const response = {\n        [EVENT_OBJ]: e,\n        [DIMENSION]: dimension,\n        [DISPLACEMENT]: displacement\n      }\n      fn.call(this._context, response, new Path(this.startX, this.startY))\n    }\n  }\n\n  /**\n   * The `touchmove` event handler for the `Bottom` drawer `class`\n   * @param {TouchEvent} e an event `object`: An event `object`\n   * representing an `object` of all `properties` related\n   * to the `touchmove` event.\n   * @param {Function} fn - a callback function called when the `move`\n   * event is triggered\n   * @returns {void}\n   */\n  move(e, fn) {\n    /* eslint complexity: [\"error\", 25] */\n    const WIN_HEIGHT = this.winSize\n    const FALSE_HEIGHT = WIN_HEIGHT - this.bound.upper\n    const resume = e.changedTouches[0].pageY || e.changedTouches[0].clientY\n    this.resumeX = e.changedTouches[0].pageX || e.changedTouches[0].clientX\n    this.resumeY = resume\n\n    const currentPosition = parseFloat(\n      Bottom._getStyle(this.element)[DIRECTION].replace(\n        /[^\\d]*$/, ''\n      )\n    )\n    const bound = this.bound\n    const nextAction = this.positionOnStart === ZERO ? CLOSE : OPEN\n\n    const start = this.startY\n    const height = bound.upper || this.height\n    /**\n     * When the touch doesn't start from the max-height\n     * of the element ignore `start` and use `height`\n     * as starting point.\n     */\n    const virtualStart = start < FALSE_HEIGHT ? FALSE_HEIGHT : start\n\n    /**\n     * Dimension for opening. When the drawer is being opened,\n     * the `height` is the max dimension, and the `start` can\n     * only be less than the `height` (from a range of `0` to `this.maxArea` e.g `0` - `25`), so the current\n     * reading from `resume` is subtracted from the `height` to\n     * get the accurate position to update the drawer with.\n     *\n     *\n     * **WHY IT IS LIKE THIS `height - (WIN_HEIGHT - resume)`**\n     *\n     * `WIN_HEIGHT - resume` converts it from a vector to a scalar.\n     * Keeping it as a vector makes the dimension inaccurate\n     * as the `bottom` property of the `HTMLElement.style` is the one being updated and not the `top`,\n     * so the css `bottom` property is an enough respect for its direction.\n     *\n     * *__If it should be respected then:__*,\n     * 1. The `Bottom Drawer class` would be updating `top css property` and not `bottom`, i.e, initialy an element that uses the `Bottom Drawer` must have a `css file` that defines a `css top property` for the element and not a `bottom` property; As in\n     * ```scss\n     * .menu {\n     *   top: // (window size + height of the element)px\n     * }\n     * ```\n     * 2. Cardinal's `Bottom Drawer class` can always update\n     * as `HTMLElement.style.top = ${height - resume}px`, and\n     * not as it is now.\n     * This way there is no `bottom` property respecting the direction\n     * So the vector attribute of the dimension is preserved.\n     */\n    const dimension = `-${height - (WIN_HEIGHT - resume)}${this.unit}`\n\n    /**\n     * Dimension for closing. When the drawer is being closed,\n     * the `height` is the max dimension and the `start` could\n     * possibly be more than the `height`\n     * or less than the `height`.\n     * To assure an accurate dimension the `virtualStart`\n     * determines whether to use the `height` as starting point\n     * or the actual `start`. If the actual start is more than\n     * `height`, the height becomes the start point else the `start`\n     */\n    const vdimension = `-${resume - virtualStart}${this.unit}`\n    const rect = new VectorRectangle(\n      this.startX,\n      this.startY,\n      this.resumeX,\n      this.resumeY\n    )\n    const isBoundY = rect.greaterHeight\n\n    if (!this.scrollControlSet) {\n      this.scrollControl = isBoundY\n      this.scrollControlSet = !this.scrollControlSet\n    }\n\n    // OPEN LOGIC\n    if (start <= WIN_HEIGHT && (start >= this.minArea || start >= FALSE_HEIGHT + currentPosition) &&\n    currentPosition !== ZERO && isBoundY && nextAction === OPEN &&\n    this.scrollControl && rect.displacementY < ZERO) {\n      const response = {\n        [EVENT_OBJ]: e,\n        [DIMENSION]: dimension,\n        open: true,\n        close: false\n      }\n      fn.call(this._context, response, rect)\n    }\n\n    // CLOSE LOGIC\n    if (resume >= FALSE_HEIGHT && Math.abs(currentPosition) < height - bound.lower &&\n    isBoundY && nextAction === CLOSE && this.scrollControl && rect.displacementY > ZERO) {\n      const response = {\n        [EVENT_OBJ]: e,\n        [DIMENSION]: vdimension,\n        close: true,\n        open: false\n      }\n      fn.call(this._context, response, rect)\n    }\n  }\n\n  /**\n   * The `touchend` event handler for the `Bottom` drawer `class`\n   * @param {TouchEvent} e an event `object`: An event `object`\n   * representing an `object` of all `properties` related\n   * to the `touchend` event.\n   * @param {Function} fn - a callback function called when the `end`\n   * event is triggered\n   * @param {{}} thresholdState - a state object which should be passed\n   * by reference for updating by this method\n   * @returns {void}\n   */\n  end(e, fn, thresholdState) {\n    this.timing.end = new Date()\n    const WIN_HEIGHT = this.winSize\n    const FALSE_HEIGHT = WIN_HEIGHT - this.bound.upper\n    const end = e.changedTouches[0].pageY || e.changedTouches[0].clientY\n    this.endX = e.changedTouches[0].pageX || e.changedTouches[0].clientX\n    this.endY = end\n\n    const rect = new VectorRectangle(this.startX, this.startY, this.endX, this.endY)\n\n    const start = this.startY\n    const TIMING = this.timing.end.getTime() - this.timing.start.getTime()\n    const threshold = this.threshold\n    const signedOffsetSide = parseFloat(\n      Bottom._getStyle(this.element)[DIRECTION].replace(\n        /[^\\d]*$/, ''\n      )\n    )\n    const bound = this.bound\n    const nonZero = `${bound.slack}${this.unit}`\n    const zero = `${ZERO}`\n    const offsetSide = Math.abs(signedOffsetSide)\n    let action = OPEN\n    // release the control for another session\n    this.scrollControl = this.scrollControlSet = false // eslint-disable-line no-multi-assign\n\n    const response = {\n      [EVENT_OBJ]: e,\n      position: signedOffsetSide,\n      rect\n    }\n\n    function getResponse(state, trueForOpen) {\n      const opposite = 'oppositeDimension'\n      if (state === THRESHOLD && trueForOpen || state === BELOW_THRESHOLD && !trueForOpen) {\n        return {\n          [DIMENSION]: zero,\n          TIMING,\n          [opposite]: nonZero,\n          ...response\n        }\n      } else if (state === THRESHOLD && !trueForOpen || state === BELOW_THRESHOLD && trueForOpen) {\n        return {\n          [DIMENSION]: nonZero,\n          TIMING,\n          [opposite]: zero,\n          ...response\n        }\n      }\n      return {}\n    }\n    this.startX = -1\n    this.startY = -1\n    this.resumeX = -1\n    this.resumeY = -1\n    this.endX = -1\n    this.endY = -1\n\n    // OPEN LOGIC\n    if (rect.displacementY < ZERO && (start >= this.minArea || start >= FALSE_HEIGHT + signedOffsetSide)) {\n      if (offsetSide <= this.height * threshold) {\n        thresholdState.state = [THRESHOLD, CLOSE]\n        thresholdState.stateObj = getResponse(thresholdState.state[0], true)\n      } else {\n        thresholdState.state = [BELOW_THRESHOLD, CLOSE]\n        thresholdState.stateObj = getResponse(thresholdState.state[0], true)\n      }\n      fn.call(this, action)\n      return\n    }\n\n    // CLOSE LOGIC\n    if (rect.displacementY > ZERO && this.resumeY >= FALSE_HEIGHT) {\n      action = CLOSE\n      if (offsetSide >= this.height * threshold) {\n        thresholdState.state = [THRESHOLD, OPEN]\n        thresholdState.stateObj = getResponse(thresholdState.state[0], false)\n      } else {\n        thresholdState.state = [BELOW_THRESHOLD, OPEN]\n        thresholdState.stateObj = getResponse(thresholdState.state[0], false)\n      }\n      fn.call(this, action)\n    }\n  }\n\n  setContext(ctx) {\n    this._context = ctx\n    return this\n  }\n\n  static _getStyle(elt, pseudoElt) {\n    return pseudoElt ? window.getComputedStyle(elt, pseudoElt) : window.getComputedStyle(elt)\n  }\n\n  static _windowSize() {\n    return window.screen.availHeight\n  }\n\n  // no need for `window.onorientationchange`\n  _updateOrientation() {\n    this.winSize = typeof this._winSize === 'function' ? this._winSize() : Bottom._windowSize()\n    this.minArea = this.winSize - (this.bound.lower || this.options.maxStartArea || MAX_START_AREA)\n  }\n}\n","import {\n  Path,\n  ZERO,\n  validateThreshold\n} from './../../util'\nimport {\n  VectorRectangle\n} from './../vector'\n\nconst DIRECTION = 'left'\nconst DIMENSION = 'dimension'\nconst DISPLACEMENT = 'displacement'\nconst EVENT_OBJ = 'event'\nconst THRESHOLD = 'threshold'\nconst BELOW_THRESHOLD = 'belowthreshold'\nconst OPEN = 'open'\nconst CLOSE = 'close'\nconst UNIT = 'px'\nconst MAX_START_AREA = 25\nconst THRESHOLD_VALUE = 0.667\nconst FALSE_TOUCH_START_POINT = 2\n\nexport default class Left {\n  /**\n   * @param {{}} options\n   * an object containing all required properties\n   * @param {Bound} bound a boundary object\n   */\n  constructor(options, bound) {\n    this.options = options\n    this.bound = bound\n    /**\n     * Drawer Element\n     * @type {HTMLElement}\n     */\n    this.element = options.ELEMENT\n    /**\n     * Size of device window\n     *\n     * unused: required in `Right` and `Bottom`\n     * @type {Function}\n     */\n    this._winSize = this.options.sizeOfWindow || Left._windowSize\n    this.winSize = this._winSize()\n    /**\n     * @type {number}\n     */\n    this.width = this.options.SIZE\n    this.unit = this.options.unit || UNIT\n    /**\n     * @type {number}\n     * A maximum area where the draw-start is sensitive\n     * Use set boundary (`bound`) if there's an initial\n     * offset\n     */\n    this.maxArea = this.bound.lower || this.options.maxStartArea || MAX_START_AREA\n\n    /**\n     * A threshold which the `touchmove` signal must attain\n     * before being qualified to stay shown\n     * the threshold should be a value between `0` and `1.0`\n     * @type {number}\n     */\n    this.threshold = this.options.threshold || THRESHOLD_VALUE\n    this.threshold = validateThreshold(this.threshold)\n\n    // Touch coordinates (Touch Start)\n    this.startX = -1\n    this.startY = -1\n    // Touch coordinates (Touch Move)\n    this.resumeX = -1\n    this.resumeY = -1\n    // Touch coordinates (Touch End) [these may not be important]\n    this.endX = -1\n    this.endY = -1\n\n    /**\n     * A control for scroll. This control prevents\n     * a clash between coordinates dancing between\n     * the (&delta;`X`) coords and (&delta;`Y`) coords.\n     * Utilising the `Rectangle` class to get bounds\n     * and isolate territories\n     * @type {boolean}\n     */\n    this.scrollControlSet = false\n    this.scrollControl = null\n    this.timing = {\n      /**\n       * @type {Date}\n       */\n      start: null,\n      /**\n       * @type {Date}\n       */\n      end: null\n    }\n\n    this._context = this\n  }\n\n  /**\n   * The `touchstart` event handler for the `Left` drawer `class`\n   * @param {TouchEvent} e an event `object`: An event `object`\n   * representing an `object` of all `properties` related\n   * to the `touchstart` event.\n   * @param {Function} fn - a callback function called when the `start`\n   * event is triggered\n   * @returns {void}\n   */\n  start(e, fn) {\n    this.timing.start = new Date()\n    const start = e.changedTouches[0].pageX || e.changedTouches[0].clientX\n    this.startX = start\n    this.startY =  e.changedTouches[0].pageY || e.changedTouches[0].clientY\n    /**\n     * The `Drawer`'s `Left` class uses the `CSS property`, `left`\n     * for updating and defining position of the drawn element\n     */\n    const currentPosition = parseFloat(\n      Left._getStyle(this.element)[DIRECTION].replace(\n        /[^\\d]*$/, ''\n      )\n    )\n    const bound = this.bound\n    this.positionOnStart = currentPosition\n    const dimension = bound.lower ? `-${bound.upper - bound.lower}${this.unit}` : `-${bound.upper - start}${this.unit}`\n    const displacement = `-${bound.upper - FALSE_TOUCH_START_POINT}${this.unit}`\n\n    if (start >= ZERO && start <= this.maxArea && currentPosition !== ZERO) {\n      const response = {\n        [EVENT_OBJ]: e,\n        [DIMENSION]: dimension,\n        [DISPLACEMENT]: displacement\n      }\n      fn.call(this._context, response, new Path(this.startX, this.startY))\n    }\n  }\n\n  /**\n   * The `touchmove` event handler for the `Left` drawer `class`\n   * @param {TouchEvent} e an event `object`: An event `object`\n   * representing an `object` of all `properties` related\n   * to the `touchmove` event.\n   * @param {Function} fn - a callback function called when the `move`\n   * event is triggered\n   * @returns {void}\n   */\n  move(e, fn) {\n    /* eslint complexity: [\"error\", 25] */\n    const resume = e.changedTouches[0].pageX || e.changedTouches[0].clientX\n    this.resumeX = resume\n    this.resumeY = e.changedTouches[0].pageY || e.changedTouches[0].clientY\n\n    const currentPosition = parseFloat(\n      Left._getStyle(this.element)[DIRECTION].replace(\n        /[^\\d]*$/, ''\n      )\n    )\n    const bound = this.bound\n    const nextAction = this.positionOnStart === ZERO ? CLOSE : OPEN\n    const start = this.startX\n    const width = bound.upper || this.width\n    /**\n     * When the touch doesn't start from the max-width\n     * of the element ignore `start` and use `width`\n     * as starting point.\n     */\n    const virtualStart = start > width ? width : start\n    /**\n     * Dimension for opening. When the drawer is being opened,\n     * the `width` is the max dimension, and the `start` can\n     * only be less than the `width` (from a range of `0` to\n     * `this.maxArea` e.g `0` - `25`), so the current\n     * reading from `resume` is subtracted from the `width` to\n     * get the accurate position to update the drawer with.\n     */\n    const dimension = `-${width - resume}${this.unit}`\n    /**\n     * Dimension for closing. When the drawer is being closed,\n     * the `width` is the max dimension and the `start` could\n     * possibly be more than the `width`\n     * or less than the `width`.\n     * To assure an accurate dimension the `virtualStart`\n     * determines whether to use the `width` as starting point\n     * or the actual `start`. If the actual start is more than\n     * `width`, the width becomes the start point else the `start`\n     */\n    const vdimension = `-${virtualStart - resume}${this.unit}`\n    const rect = new VectorRectangle(\n      this.startX,\n      this.startY,\n      this.resumeX,\n      this.resumeY\n    )\n    const isBoundX = rect.greaterWidth\n\n    if (!this.scrollControlSet) {\n      this.scrollControl = isBoundX\n      this.scrollControlSet = !this.scrollControlSet\n    }\n\n    // OPEN LOGIC\n    if (start >= ZERO && (start <= this.maxArea || start <= width + currentPosition) &&\n    currentPosition !== ZERO && isBoundX && nextAction === OPEN &&\n    this.scrollControl && rect.displacementX > ZERO) {\n      const response = {\n        [EVENT_OBJ]: e,\n        [DIMENSION]: dimension,\n        open: true,\n        close: false\n      }\n      fn.call(this._context, response, rect)\n    }\n\n    // CLOSE LOGIC\n    if (resume <= width && Math.abs(currentPosition) < width - bound.lower &&\n    isBoundX && nextAction === CLOSE && this.scrollControl && rect.displacementX < ZERO) {\n      const response = {\n        [EVENT_OBJ]: e,\n        [DIMENSION]: vdimension,\n        close: true,\n        open: false\n      }\n      fn.call(this._context, response, rect)\n    }\n  }\n\n  /**\n   * The `touchend` event handler for the `Left` drawer `class`\n   * @param {TouchEvent} e an event `object`: An event `object`\n   * representing an `object` of all `properties` related\n   * to the `touchend` event.\n   * @param {Function} fn - a callback function called when the `end`\n   * event is triggered\n   * @param {{}} thresholdState - a state object which should be passed\n   * by reference for updating by this method\n   * @returns {void}\n   */\n  end(e, fn, thresholdState) {\n    this.timing.end = new Date()\n\n    const end = e.changedTouches[0].pageX || e.changedTouches[0].clientX\n    this.endX = end\n    this.endY = e.changedTouches[0].pageY || e.changedTouches[0].clientY\n\n    const rect = new VectorRectangle(this.startX, this.startY, this.endX, this.endY)\n\n    const start = this.startX\n    const TIMING = this.timing.end.getTime() - this.timing.start.getTime()\n    const threshold = this.threshold\n    const signedOffsetSide = parseFloat(\n      Left._getStyle(this.element)[DIRECTION].replace(\n        /[^\\d]*$/, ''\n      )\n    )\n    const bound = this.bound\n    const nonZero = `${bound.slack}${this.unit}`\n    const zero = `${ZERO}`\n    const width = bound.upper || this.width\n    const offsetSide = Math.abs(signedOffsetSide)\n    let action = OPEN\n    // release the control for another session\n    this.scrollControl = this.scrollControlSet = false // eslint-disable-line no-multi-assign\n\n    const response = {\n      [EVENT_OBJ]: e,\n      position: signedOffsetSide,\n      rect\n    }\n\n    function getResponse(state, trueForOpen) {\n      const opposite = 'oppositeDimension'\n      if (state === THRESHOLD && trueForOpen || state === BELOW_THRESHOLD && !trueForOpen) {\n        return {\n          [DIMENSION]: zero,\n          TIMING,\n          [opposite]: nonZero,\n          ...response\n        }\n      } else if (state === THRESHOLD && !trueForOpen || state === BELOW_THRESHOLD && trueForOpen) {\n        return {\n          [DIMENSION]: nonZero,\n          TIMING,\n          [opposite]: zero,\n          ...response\n        }\n      }\n      return {}\n    }\n    this.startX = -1\n    this.startY = -1\n    this.resumeX = -1\n    this.resumeY = -1\n    this.endX = -1\n    this.endY = -1\n\n    // OPEN LOGIC\n    if (rect.displacementX > ZERO && (start <= this.maxArea || start <= width + signedOffsetSide)) {\n      if (offsetSide <= this.width * threshold) {\n        thresholdState.state = [THRESHOLD, CLOSE]\n        thresholdState.stateObj = getResponse(thresholdState.state[0], true)\n      } else {\n        thresholdState.state = [BELOW_THRESHOLD, CLOSE]\n        thresholdState.stateObj = getResponse(thresholdState.state[0], true)\n      }\n      fn.call(this, action)\n      return\n    }\n\n    // CLOSE LOGIC\n    if (rect.displacementX < ZERO && this.resumeX <= this.width) {\n      action = CLOSE\n      if (offsetSide >= this.width * threshold) {\n        thresholdState.state = [THRESHOLD, OPEN]\n        thresholdState.stateObj = getResponse(thresholdState.state[0], false)\n      } else {\n        thresholdState.state = [BELOW_THRESHOLD, OPEN]\n        thresholdState.stateObj = getResponse(thresholdState.state[0], false)\n      }\n      fn.call(this, action)\n    }\n  }\n\n  setContext(ctx) {\n    this._context = ctx\n    return this\n  }\n\n  static _getStyle(elt, pseudoElt) {\n    return pseudoElt ? window.getComputedStyle(elt, pseudoElt) : window.getComputedStyle(elt)\n  }\n\n  static _windowSize() {\n    return window.screen.availWidth\n  }\n}\n","import {\n  Path,\n  ZERO,\n  validateThreshold\n} from './../../util'\nimport {\n  VectorRectangle\n} from './../vector'\n\nconst DIRECTION = 'right'\nconst DIMENSION = 'dimension'\nconst DISPLACEMENT = 'displacement'\nconst EVENT_OBJ = 'event'\nconst THRESHOLD = 'threshold'\nconst BELOW_THRESHOLD = 'belowthreshold'\nconst OPEN = 'open'\nconst CLOSE = 'close'\nconst UNIT = 'px'\nconst MAX_START_AREA = 25\nconst THRESHOLD_VALUE = 0.667\nconst FALSE_TOUCH_START_POINT = 2\n\nexport default class Right {\n  /**\n   * @param {{}} options\n   * an object containing all required properties\n   * @param {Bound} bound a boundary object\n   */\n  constructor(options, bound) {\n    this.options = options\n    this.bound = bound\n    /**\n     * Drawer Element\n     * @type {HTMLElement}\n     */\n    this.element = options.ELEMENT\n    /**\n     * Size of device window\n     * @type {Function}\n     */\n    this._winSize = this.options.sizeOfWindow || Right._windowSize\n    /**\n     * @type {number}\n     */\n    this.winSize = this._winSize()\n    /**\n     * @type {number}\n     */\n    this.width = this.options.SIZE\n    this.unit = this.options.unit || UNIT\n    /**\n     * @type {number}\n     * A minimum area where the draw-start is sensitive\n     */\n    this.minArea = this.winSize - (this.bound.lower || this.options.maxStartArea || MAX_START_AREA)\n\n    /**\n     * A threshold which the `touchmove` signal must attain\n     * before being qualified to stay shown\n     * the threshold should be a value between `0` and `1.0`\n     * @type {number}\n     */\n    this.threshold = this.options.threshold || THRESHOLD_VALUE\n    this.threshold = validateThreshold(this.threshold)\n\n    // Touch coordinates (Touch Start)\n    this.startX = -1\n    this.startY = -1\n    // Touch coordinates (Touch Move)\n    this.resumeX = -1\n    this.resumeY = -1\n    // Touch coordinates (Touch End) [these may not be important]\n    this.endX = -1\n    this.endY = -1\n\n    /**\n     * A control for scroll. This control prevents\n     * a clash between coordinates dancing between\n     * the (&delta;`X`) coords and (&delta;`Y`) coords.\n     * Utilising the `Rectangle` class to get bounds\n     * and isolate territories\n     * @type {boolean}\n     */\n    this.scrollControlSet = false\n    this.scrollControl = null\n    this.timing = {\n      /**\n       * @type {Date}\n       */\n      start: null,\n      /**\n       * @type {Date}\n       */\n      end: null\n    }\n\n    this._context = this\n  }\n\n  /**\n   * The `touchstart` event handler for the `Left` drawer `class`\n   * @param {TouchEvent} e an event `object`: An event `object`\n   * representing an `object` of all `properties` related\n   * to the `touchstart` event.\n   * @param {Function} fn - a callback function called when the `start`\n   * event is triggered\n   * @returns {void}\n   */\n  start(e, fn) {\n    this.timing.start = new Date()\n    this._updateOrientation()\n    const WIN_WIDTH = this.winSize\n    const start = e.changedTouches[0].pageX || e.changedTouches[0].clientX\n    this.startX = start\n    this.startY =  e.changedTouches[0].pageY || e.changedTouches[0].clientY\n    /**\n     * The `Drawer`'s `Right` class uses the `CSS property`, `right`\n     * for updating and defining position of the drawn element\n     */\n    const currentPosition = parseFloat(\n      Right._getStyle(this.element)[DIRECTION].replace(\n        /[^\\d]*$/, ''\n      )\n    )\n    const bound = this.bound\n    this.positionOnStart = currentPosition\n    const dimension = bound.lower ? `-${bound.upper - (WIN_WIDTH - bound.lower)}${this.unit}` : `-${bound.upper - (WIN_WIDTH - start)}${this.unit}`\n    const displacement = `-${bound.upper - (WIN_WIDTH - FALSE_TOUCH_START_POINT)}${this.unit}`\n\n    if (start <= WIN_WIDTH && start >= this.minArea && currentPosition !== ZERO) {\n      const response = {\n        [EVENT_OBJ]: e,\n        [DIMENSION]: dimension,\n        [DISPLACEMENT]: displacement\n      }\n      fn.call(this._context, response, new Path(this.startX, this.startY))\n    }\n  }\n\n  /**\n   * The `touchmove` event handler for the `Right` drawer `class`\n   * @param {TouchEvent} e an event `object`: An event `object`\n   * representing an `object` of all `properties` related\n   * to the `touchmove` event.\n   * @param {Function} fn - a callback function called when the `move`\n   * event is triggered\n   * @returns {void}\n   */\n  move(e, fn) {\n    /* eslint complexity: [\"error\", 25] */\n    const WIN_WIDTH = this.winSize\n    const FALSE_WIDTH = WIN_WIDTH - this.bound.upper\n    const resume = e.changedTouches[0].pageX || e.changedTouches[0].clientX\n    this.resumeX = resume\n    this.resumeY = e.changedTouches[0].pageY || e.changedTouches[0].clientY\n\n    const currentPosition = parseFloat(\n      Right._getStyle(this.element)[DIRECTION].replace(\n        /[^\\d]*$/, ''\n      )\n    )\n    const bound = this.bound\n    const nextAction = this.positionOnStart === ZERO ? CLOSE : OPEN\n\n    const start = this.startX\n    const width = bound.upper || this.width\n    /**\n     * When the touch doesn't start from the max-width\n     * of the element ignore `start` and use `width`\n     * as starting point.\n     */\n    const virtualStart = start < FALSE_WIDTH ? FALSE_WIDTH : start\n\n    /**\n     * Dimension for opening. When the drawer is being opened,\n     * the `width` is the max dimension, and the `start` can\n     * only be less than the `width` (from a range of `0` to `this.maxArea` e.g `0` - `25`), so the current\n     * reading from `resume` is subtracted from the `width` to\n     * get the accurate position to update the drawer with.\n     *\n     *\n     * **WHY IT IS LIKE THIS `width - (WIN_WIDTH - resume)`**\n     *\n     * `WIN_WIDTH - resume` converts it from a vector to a scalar.\n     * Keeping it as a vector makes the dimension inaccurate\n     * as the `right` property of the `HTMLElement.style` is the one being updated and not the `left`,\n     * so the css `right` property is an enough respect for its direction.\n     *\n     * *__If it should be respected then:__*,\n     * 1. The `Right Drawer class` would be updating `left css property` and not `right`, i.e, initialy an element that uses the `Right Drawer` must have a `css file` that defines a `css left property` for the element and not a `right` property; As in\n     * ```scss\n     * .menu {\n     *   left: // (window size + width of the element)px\n     * }\n     * ```\n     * 2. Cardinal's `Right Drawer class` can always update\n     * as `HTMLElement.style.left = ${width - resume}px`, and\n     * not as it is now.\n     * This way there is no `right` property respecting the direction\n     * So the vector attribute of the dimension is preserved.\n     */\n    const dimension = `-${width - (WIN_WIDTH - resume)}${this.unit}`\n\n    /**\n     * Dimension for closing. When the drawer is being closed,\n     * the `width` is the max dimension and the `start` could\n     * possibly be more than the `width`\n     * or less than the `width`.\n     * To assure an accurate dimension the `virtualStart`\n     * determines whether to use the `width` as starting point\n     * or the actual `start`. If the actual start is more than\n     * `width`, the width becomes the start point else the `start`\n     */\n    const vdimension = `-${resume - virtualStart}${this.unit}`\n    const rect = new VectorRectangle(\n      this.startX,\n      this.startY,\n      this.resumeX,\n      this.resumeY\n    )\n    const isBoundX = rect.greaterWidth\n\n    if (!this.scrollControlSet) {\n      this.scrollControl = isBoundX\n      this.scrollControlSet = !this.scrollControlSet\n    }\n\n    // OPEN LOGIC\n    if (start <= WIN_WIDTH && (start >= this.minArea || start >= FALSE_WIDTH + currentPosition) &&\n    currentPosition !== ZERO && isBoundX && nextAction === OPEN &&\n    this.scrollControl && rect.displacementX < ZERO) {\n      const response = {\n        [EVENT_OBJ]: e,\n        [DIMENSION]: dimension,\n        open: true,\n        close: false\n      }\n      fn.call(this._context, response, rect)\n    }\n\n    // CLOSE LOGIC\n    if (resume >= FALSE_WIDTH && Math.abs(currentPosition) < width - bound.lower &&\n    isBoundX && nextAction === CLOSE && this.scrollControl && rect.displacementX > ZERO) {\n      const response = {\n        [EVENT_OBJ]: e,\n        [DIMENSION]: vdimension,\n        close: true,\n        open: false\n      }\n      fn.call(this._context, response, rect)\n    }\n  }\n\n  /**\n   * The `touchend` event handler for the `Right` drawer `class`\n   * @param {TouchEvent} e an event `object`: An event `object`\n   * representing an `object` of all `properties` related\n   * to the `touchend` event.\n   * @param {Function} fn - a callback function called when the `end`\n   * event is triggered\n   * @param {{}} thresholdState - a state object which should be passed\n   * by reference for updating by this method\n   * @returns {void}\n   */\n  end(e, fn, thresholdState) {\n    this.timing.end = new Date()\n    const WIN_WIDTH = this.winSize\n    const FALSE_WIDTH = WIN_WIDTH - this.bound.upper\n    const end = e.changedTouches[0].pageX || e.changedTouches[0].clientX\n    this.endX = end\n    this.endY = e.changedTouches[0].pageY || e.changedTouches[0].clientY\n\n    const rect = new VectorRectangle(this.startX, this.startY, this.endX, this.endY)\n\n    const start = this.startX\n    const TIMING = this.timing.end.getTime() - this.timing.start.getTime()\n    const threshold = this.threshold\n    const signedOffsetSide = parseFloat(\n      Right._getStyle(this.element)[DIRECTION].replace(\n        /[^\\d]*$/, ''\n      )\n    )\n    const bound = this.bound\n    const nonZero = `${bound.slack}${this.unit}`\n    const zero = `${ZERO}`\n    const offsetSide = Math.abs(signedOffsetSide)\n    let action = OPEN\n    // release the control for another session\n    this.scrollControl = this.scrollControlSet = false // eslint-disable-line no-multi-assign\n\n    const response = {\n      [EVENT_OBJ]: e,\n      position: signedOffsetSide,\n      rect\n    }\n\n    function getResponse(state, trueForOpen) {\n      const opposite = 'oppositeDimension'\n      if (state === THRESHOLD && trueForOpen || state === BELOW_THRESHOLD && !trueForOpen) {\n        return {\n          [DIMENSION]: zero,\n          TIMING,\n          [opposite]: nonZero,\n          ...response\n        }\n      } else if (state === THRESHOLD && !trueForOpen || state === BELOW_THRESHOLD && trueForOpen) {\n        return {\n          [DIMENSION]: nonZero,\n          TIMING,\n          [opposite]: zero,\n          ...response\n        }\n      }\n      return {}\n    }\n    this.startX = -1\n    this.startY = -1\n    this.resumeX = -1\n    this.resumeY = -1\n    this.endX = -1\n    this.endY = -1\n\n    // OPEN LOGIC\n    if (rect.displacementX < ZERO && (start >= this.minArea || start >= FALSE_WIDTH + signedOffsetSide)) {\n      if (offsetSide <= this.width * threshold) {\n        thresholdState.state = [THRESHOLD, CLOSE]\n        thresholdState.stateObj = getResponse(thresholdState.state[0], true)\n      } else {\n        thresholdState.state = [BELOW_THRESHOLD, CLOSE]\n        thresholdState.stateObj = getResponse(thresholdState.state[0], true)\n      }\n      fn.call(this, action)\n      return\n    }\n\n    // CLOSE LOGIC\n    if (rect.displacementX > ZERO && this.resumeX >= FALSE_WIDTH) {\n      action = CLOSE\n      if (offsetSide >= this.width * threshold) {\n        thresholdState.state = [THRESHOLD, OPEN]\n        thresholdState.stateObj = getResponse(thresholdState.state[0], false)\n      } else {\n        thresholdState.state = [BELOW_THRESHOLD, OPEN]\n        thresholdState.stateObj = getResponse(thresholdState.state[0], false)\n      }\n      fn.call(this, action)\n    }\n  }\n\n  setContext(ctx) {\n    this._context = ctx\n    return this\n  }\n\n  static _getStyle(elt, pseudoElt) {\n    return pseudoElt ? window.getComputedStyle(elt, pseudoElt) : window.getComputedStyle(elt)\n  }\n\n  static _windowSize() {\n    return window.screen.availWidth\n  }\n\n  // no need for `window.onorientationchange`\n  _updateOrientation() {\n    this.winSize = typeof this._winSize === 'function' ? this._winSize() : Right._windowSize()\n    this.minArea = this.winSize - (this.bound.lower || this.options.maxStartArea || MAX_START_AREA)\n  }\n}\n","import {\n  Path,\n  ZERO,\n  validateThreshold\n} from './../../util'\nimport {\n  VectorRectangle\n} from './../vector'\n\nconst DIRECTION = 'top'\nconst DIMENSION = 'dimension'\nconst DISPLACEMENT = 'displacement'\nconst EVENT_OBJ = 'event'\nconst THRESHOLD = 'threshold'\nconst BELOW_THRESHOLD = 'belowthreshold'\nconst OPEN = 'open'\nconst CLOSE = 'close'\nconst UNIT = 'px'\nconst MAX_START_AREA = 25\nconst THRESHOLD_VALUE = 0.667\nconst FALSE_TOUCH_START_POINT = 2\n\nexport default class Top {\n  /**\n   * @param {{}} options\n   * an object containing all required properties\n   * @param {Bound} bound a boundary object\n   */\n  constructor(options, bound) {\n    this.options = options\n    this.bound = bound\n    /**\n     * Drawer Element\n     * @type {HTMLElement}\n     */\n    this.element = options.ELEMENT\n    /**\n     * Size of device window\n     *\n     * unused: required in `Right` and `Bottom`\n     * @type {Function}\n     */\n    this._winSize = this.options.sizeOfWindow || Top._windowSize\n    this.winSize = this._winSize()\n    /**\n     * @type {number}\n     */\n    this.height = this.options.SIZE\n    this.unit = this.options.unit || UNIT\n    /**\n     * @type {number}\n     * A maximum area where the draw-start is sensitive\n     * Use set boundary (`bound`) if there's an initial\n     * offset\n     */\n    this.maxArea = this.bound.lower || this.options.maxStartArea || MAX_START_AREA\n\n    /**\n     * A threshold which the `touchmove` signal must attain\n     * before being qualified to stay shown\n     * the threshold should be a value between `0` and `1.0`\n     * @type {number}\n     */\n    this.threshold = this.options.threshold || THRESHOLD_VALUE\n    this.threshold = validateThreshold(this.threshold)\n\n    // Touch coordinates (Touch Start)\n    this.startX = -1\n    this.startY = -1\n    // Touch coordinates (Touch Move)\n    this.resumeX = -1\n    this.resumeY = -1\n    // Touch coordinates (Touch End) [these may not be important]\n    this.endX = -1\n    this.endY = -1\n\n    /**\n     * A control for scroll. This control prevents\n     * a clash between coordinates dancing between\n     * the (&delta;`X`) coords and (&delta;`Y`) coords.\n     * Utilising the `Rectangle` class to get bounds\n     * and isolate territories\n     * @type {boolean}\n     */\n    this.scrollControlSet = false\n    this.scrollControl = null\n    this.timing = {\n      /**\n       * @type {Date}\n       */\n      start: null,\n      /**\n       * @type {Date}\n       */\n      end: null\n    }\n\n    this._context = this\n  }\n\n  /**\n   * The `touchstart` event handler for the `Top` drawer `class`\n   * @param {TouchEvent} e an event `object`: An event `object`\n   * representing an `object` of all `properties` related\n   * to the `touchstart` event.\n   * @param {Function} fn - a callback function called when the `start`\n   * event is triggered\n   * @returns {void}\n   */\n  start(e, fn) {\n    this.timing.start = new Date()\n    const start =  e.changedTouches[0].pageY || e.changedTouches[0].clientY\n    this.startX = e.changedTouches[0].pageX || e.changedTouches[0].clientX\n    this.startY = start\n    /**\n     * The `Drawer`'s `Top` class uses the `CSS property`, `top`\n     * for updating and defining position of the drawn element\n     */\n    const currentPosition = parseFloat(\n      Top._getStyle(this.element)[DIRECTION].replace(\n        /[^\\d]*$/, ''\n      )\n    )\n    const bound = this.bound\n    this.positionOnStart = currentPosition\n    const dimension = bound.lower ? `-${bound.upper - bound.lower}${this.unit}` : `-${bound.upper - start}${this.unit}`\n    const displacement = `-${bound.upper - FALSE_TOUCH_START_POINT}${this.unit}`\n\n    if (start >= ZERO && start <= this.maxArea && currentPosition !== ZERO) {\n      const response = {\n        [EVENT_OBJ]: e,\n        [DIMENSION]: dimension,\n        [DISPLACEMENT]: displacement\n      }\n      fn.call(this._context, response, new Path(this.startX, this.startY))\n    }\n  }\n\n  /**\n   * The `touchmove` event handler for the `Top` drawer `class`\n   * @param {TouchEvent} e an event `object`: An event `object`\n   * representing an `object` of all `properties` related\n   * to the `touchmove` event.\n   * @param {Function} fn - a callback function called when the `move`\n   * event is triggered\n   * @returns {void}\n   */\n  move(e, fn) {\n    /* eslint complexity: [\"error\", 25] */\n    const resume = e.changedTouches[0].pageY || e.changedTouches[0].clientY\n    this.resumeX = e.changedTouches[0].pageX || e.changedTouches[0].clientX\n    this.resumeY = resume\n\n    const currentPosition = parseFloat(\n      Top._getStyle(this.element)[DIRECTION].replace(\n        /[^\\d]*$/, ''\n      )\n    )\n    const bound = this.bound\n    const nextAction = this.positionOnStart === ZERO ? CLOSE : OPEN\n\n    const start = this.startX\n    const height = bound.upper || this.height\n    /**\n     * When the touch doesn't start from the max-height\n     * of the element ignore `start` and use `height`\n     * as starting point.\n     */\n    const virtualStart = start > height ? height : start\n    /**\n     * Dimension for opening. When the drawer is being opened,\n     * the `height` is the max dimension, and the `start` can\n     * only be less than the `height` (from a range of `0` to\n     * `this.maxArea` e.g `0` - `25`), so the current\n     * reading from `resume` is subtracted from the `height` to\n     * get the accurate position to update the drawer with.\n     */\n    const dimension = `-${height - resume}${this.unit}`\n    /**\n     * Dimension for closing. When the drawer is being closed,\n     * the `height` is the max dimension and the `start` could\n     * possibly be more than the `height`\n     * or less than the `height`.\n     * To assure an accurate dimension the `virtualStart`\n     * determines whether to use the `height` as starting point\n     * or the actual `start`. If the actual start is more than\n     * `height`, the height becomes the start point else the `start`\n     */\n    const vdimension = `-${virtualStart - resume}${this.unit}`\n    const rect = new VectorRectangle(\n      this.startX,\n      this.startY,\n      this.resumeX,\n      this.resumeY\n    )\n    const isBoundY = rect.greaterHeight\n\n    if (!this.scrollControlSet) {\n      this.scrollControl = isBoundY\n      this.scrollControlSet = !this.scrollControlSet\n    }\n\n    // OPEN LOGIC\n    if (start >= ZERO && (start <= this.maxArea || start <= height + currentPosition) &&\n    currentPosition !== ZERO && isBoundY && nextAction === OPEN &&\n    this.scrollControl && rect.displacementY > ZERO) {\n      const response = {\n        [EVENT_OBJ]: e,\n        [DIMENSION]: dimension,\n        open: true,\n        close: false\n      }\n      fn.call(this._context, response, rect)\n    }\n\n    // CLOSE LOGIC\n    if (resume <= this.height && Math.abs(currentPosition) < height - bound.lower &&\n    isBoundY && nextAction === CLOSE && this.scrollControl && rect.displacementY < ZERO) {\n      const response = {\n        [EVENT_OBJ]: e,\n        [DIMENSION]: vdimension,\n        close: true,\n        open: false\n      }\n      fn.call(this._context, response, rect)\n    }\n  }\n\n  /**\n   * The `touchend` event handler for the `Top` drawer `class`\n   * @param {TouchEvent} e an event `object`: An event `object`\n   * representing an `object` of all `properties` related\n   * to the `touchend` event.\n   * @param {Function} fn - a callback function called when the `end`\n   * event is triggered\n   * @param {{}} thresholdState - a state object which should be passed\n   * by reference for updating by this method\n   * @returns {void}\n   */\n  end(e, fn, thresholdState) {\n    this.timing.end = new Date()\n\n    const end = e.changedTouches[0].pageY || e.changedTouches[0].clientY\n    this.endX = e.changedTouches[0].pageX || e.changedTouches[0].clientX\n    this.endY = end\n\n    const rect = new VectorRectangle(this.startX, this.startY, this.endX, this.endY)\n\n    const start = this.startY\n    const TIMING = this.timing.end.getTime() - this.timing.start.getTime()\n    const threshold = this.threshold\n    const signedOffsetSide = parseFloat(\n      Top._getStyle(this.element)[DIRECTION].replace(\n        /[^\\d]*$/, ''\n      )\n    )\n    const bound = this.bound\n    const nonZero = `${bound.slack}${this.unit}`\n    const zero = `${ZERO}`\n    const height = bound.upper || this.height\n    const offsetSide = Math.abs(signedOffsetSide)\n    let action = OPEN\n    // release the control for another session\n    this.scrollControl = this.scrollControlSet = false // eslint-disable-line no-multi-assign\n\n    const response = {\n      [EVENT_OBJ]: e,\n      position: signedOffsetSide,\n      rect\n    }\n\n    function getResponse(state, trueForOpen) {\n      const opposite = 'oppositeDimension'\n      if (state === THRESHOLD && trueForOpen || state === BELOW_THRESHOLD && !trueForOpen) {\n        return {\n          [DIMENSION]: zero,\n          TIMING,\n          [opposite]: nonZero,\n          ...response\n        }\n      } else if (state === THRESHOLD && !trueForOpen || state === BELOW_THRESHOLD && trueForOpen) {\n        return {\n          [DIMENSION]: nonZero,\n          TIMING,\n          [opposite]: zero,\n          ...response\n        }\n      }\n      return {}\n    }\n    this.startX = -1\n    this.startY = -1\n    this.resumeX = -1\n    this.resumeY = -1\n    this.endX = -1\n    this.endY = -1\n\n    // OPEN LOGIC\n    if (rect.displacementY > ZERO && (start <= this.maxArea || start <= height + signedOffsetSide)) {\n      if (offsetSide <= this.height * threshold) {\n        thresholdState.state = [THRESHOLD, CLOSE]\n        thresholdState.stateObj = getResponse(thresholdState.state[0], true)\n      } else {\n        thresholdState.state = [BELOW_THRESHOLD, CLOSE]\n        thresholdState.stateObj = getResponse(thresholdState.state[0], true)\n      }\n      fn.call(this, action)\n      return\n    }\n\n    // CLOSE LOGIC\n    if (rect.displacementY < ZERO && this.resumeY <= this.height) {\n      action = CLOSE\n      if (offsetSide >= this.height * threshold) {\n        thresholdState.state = [THRESHOLD, OPEN]\n        thresholdState.stateObj = getResponse(thresholdState.state[0], false)\n      } else {\n        thresholdState.state = [BELOW_THRESHOLD, OPEN]\n        thresholdState.stateObj = getResponse(thresholdState.state[0], false)\n      }\n      fn.call(this, action)\n    }\n  }\n\n  setContext(ctx) {\n    this._context = ctx\n    return this\n  }\n\n  static _getStyle(elt, pseudoElt) {\n    return pseudoElt ? window.getComputedStyle(elt, pseudoElt) : window.getComputedStyle(elt)\n  }\n\n  static _windowSize() {\n    return window.screen.availHeight\n  }\n}\n","import Bottom from './bottom'\nimport Left from './left'\nimport Right from './right'\nimport Top from './top'\n\nconst BELOW_THRESHOLD = 'belowthreshold'\nconst THRESHOLD = 'threshold'\nconst START = 'start'\nconst MOVE = 'move'\nconst END = 'end'\nconst CLASS_TYPE = '[object SnappedDrawer]'\n\nexport default class SnappedDrawer {\n  /**\n   * @param {{}} options an object of configuration options\n   * @param {Bound} bound a boundary object\n   */\n  constructor(options, bound) {\n    this._options = options\n    /**\n     * @type {HTMLElement}\n     */\n    this._element = options.ELEMENT\n    this._target = options.TARGET\n    this.events = ['touchstart', 'touchmove', 'touchend']\n    this._handlers = null\n    this._direction = options.DIRECTION\n    this._callibration = null\n    /**\n     * @type {{}}\n     */\n    this._callbacks = null\n    this._context = this\n\n    this._setCalibration(this._direction, bound)\n  }\n\n  // enum\n  static UP = 0\n  static LEFT = 1\n  static DOWN = 2\n  static RIGHT = 3\n\n  // public\n  /**\n   * Make sure event handlers are registered using `Drawer.on(...)` before\n   * calling `Drawer.activate()`\n   *\n   * @see {@link Drawer#on | Drawer.on}\n   * @returns {void}\n   */\n  activate() {\n    // get registered callbacks or set default\n    const startfn = this._callbacks ? this._callbacks[START] : def\n    const movefn = this._callbacks ? this._callbacks[MOVE] : def\n    const endfn = this._callbacks ? this._callbacks[END] : def\n\n    const startHandler = (e) => {\n      if (this._direction !== null) {\n        this._callibration.start(e, startfn)\n      } else {\n        this.deactivate()\n      }\n    }\n\n    const moveHandler = (e) => {\n      if (this._direction !== null) {\n        this._callibration.move(e, movefn)\n      } else {\n        this.deactivate()\n      }\n    }\n\n    const endHandler = (e) => {\n      if (this._direction !== null) {\n        const state = {}\n        this._callibration.end(e, endfn, state) // state by Ref\n        this._processThresholdState(state)\n      } else {\n        this.deactivate()\n      }\n    }\n\n    this._register(startHandler, moveHandler, endHandler)\n    for (let i = 0; i < this.events.length; i++) {\n      this._target.addEventListener(this.events[i], this._handlers[i])\n    }\n  }\n\n  /**\n   * A method provided by the `Drawer interface` to deactivate the drawer\n   * @returns {void}\n   */\n  deactivate() {\n    for (let i = 0; i < this.events.length; i++) {\n      this._target.removeEventListener(this.events[i], this._handlers[i])\n    }\n    this._register(null)\n  }\n\n  /**\n   * A function used to register callbacks for the `Drawer class` `touchstart`,\n   * `touchmove` and `touchend` event handlers.\n   *\n   * Always call `Drawer.on(...)` before `Drawer.activate()`.\n   * As in:\n   * ```js\n   * const drawer = new Drawer()\n   * drawer.on(event, () => {\n   *  // TODO\n   * }).activate()\n   * ```\n   *\n   * To prevent modifying the context of `this`, the\n   * `drawer.setContext(...)` method should be invoked with an\n   * argument which is the `this` context of the\n   * `calling class` or alternatively using a wrapper function,\n   * then call the main handler method.\n   * ```js\n   * class UseDrawer {\n   *  // CODE\n   *  method() {\n   *    const drawer = new Drawer()\n   *    drawer.on(...)\n   *      .setContext(this)\n   *      .activate()\n   *  }\n   * }\n   * // OR\n   * drawer.on(event, (stateObj) => {\n   *  this.handler.call(this, stateObj)\n   * }).activate()\n   * ```\n   *\n   * Valid event types taken by this method are:\n   * - `start`\n   * - `move`\n   * - `end`\n   * - `threshold`\n   * - `belowthreshold`\n   * @param {string} event The event type as in the above list\n   * @param {Function} fn A function to call when this event triggers\n   * @returns {this} Returns an instance variable of the `Drawer` class\n   */\n  on(event, fn) {\n    this._registerCallbacks(event, fn)\n    return this\n  }\n\n  setContext(ctx) {\n    this._context = ctx\n    this._callibration.setContext(ctx)\n    return this\n  }\n\n  toString() {\n    return CLASS_TYPE\n  }\n\n  _processThresholdState(state) {\n    if (Object.keys(state).length < 1) {\n      return\n    }\n    const thState = state.state[0]\n    const vector = state.stateObj.rect\n    delete state.stateObj.rect\n    this._callbacks[thState].call(this._context, state.state, state.stateObj, vector)\n  }\n\n  _setCalibration(point, bound) {\n    switch (point) {\n      case SnappedDrawer.UP:\n        this._callibration = new Top(this._options, bound)\n        break\n      case SnappedDrawer.LEFT:\n        this._callibration = new Left(this._options, bound)\n        break\n      case SnappedDrawer.DOWN:\n        this._callibration = new Bottom(this._options, bound)\n        break\n      case SnappedDrawer.RIGHT:\n        this._callibration = new Right(this._options, bound)\n        break\n      default:\n        throw RangeError('Direction out of range')\n    }\n  }\n\n  _registerCallbacks(event, fn) {\n    this._callbacks = this._callbacks || {\n      [START]: def,\n      [MOVE]: def,\n      [END]: def,\n      [THRESHOLD]: def,\n      [BELOW_THRESHOLD]: def\n    }\n    if (event in this._callbacks) {\n      this._callbacks[event] = fn\n    }\n  }\n\n  // private\n  _register(...handlers) {\n    this._handlers = handlers\n  }\n}\n\nfunction def() {\n  return false\n}\n","import SnappedDrawer from './snapped-drawer'\n\nexport default class Drawer {\n  static SnappedDrawer = SnappedDrawer\n  // enum\n  static UP = SnappedDrawer.UP\n  static LEFT = SnappedDrawer.LEFT\n  static DOWN = SnappedDrawer.DOWN\n  static RIGHT = SnappedDrawer.RIGHT\n}\n"],"names":["Rectangle","paths","length","x1","y1","x2","y2","coordsX","coordsY","Math","abs","displacementX","displacementY","width","height","greaterWidth","VectorRectangle","sqrt","DIRECTION","DIMENSION","DISPLACEMENT","EVENT_OBJ","THRESHOLD","BELOW_THRESHOLD","OPEN","CLOSE","UNIT","MAX_START_AREA","THRESHOLD_VALUE","FALSE_TOUCH_START_POINT","Bottom","options","bound","element","ELEMENT","_winSize","sizeOfWindow","_windowSize","winSize","SIZE","unit","minArea","lower","maxStartArea","threshold","validateThreshold","startX","startY","resumeX","resumeY","endX","endY","scrollControlSet","scrollControl","timing","start","end","_context","e","fn","Date","_updateOrientation","WIN_HEIGHT","changedTouches","pageY","clientY","pageX","clientX","currentPosition","parseFloat","_getStyle","replace","positionOnStart","dimension","upper","displacement","ZERO","response","call","Path","move","FALSE_HEIGHT","resume","nextAction","virtualStart","vdimension","rect","isBoundY","greaterHeight","open","close","thresholdState","TIMING","getTime","signedOffsetSide","nonZero","slack","zero","offsetSide","action","position","getResponse","state","trueForOpen","opposite","stateObj","setContext","ctx","elt","pseudoElt","window","getComputedStyle","screen","availHeight","Left","maxArea","isBoundX","availWidth","Right","WIN_WIDTH","FALSE_WIDTH","Top","START","MOVE","END","CLASS_TYPE","SnappedDrawer","_options","_element","_target","TARGET","events","_handlers","_direction","_callibration","_callbacks","_setCalibration","activate","startfn","def","movefn","endfn","startHandler","deactivate","moveHandler","endHandler","_processThresholdState","_register","i","addEventListener","removeEventListener","on","event","_registerCallbacks","toString","Object","keys","thState","vector","point","UP","LEFT","DOWN","RIGHT","RangeError","handlers","Drawer"],"mappings":"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"}