{"version":3,"file":"drawer.js","sources":["../../src_modules/js/drawer/util.js","../../src_modules/js/drawer/bottom.js","../../src_modules/js/drawer/rectangle.js","../../src_modules/js/drawer/left.js","../../src_modules/js/drawer/right.js","../../src_modules/js/drawer/top.js","../../src_modules/js/drawer/index.js"],"sourcesContent":["export default class Final {\n\n  static START = 2\n  static HIDDEN = 'hidden'\n  static ZERO = 0\n  static DISPLAY = 'block'\n\n  static validateThreshold(tsh) {\n    if (tsh < 1) {\n      tsh = 1 - tsh\n      return tsh\n    } else if (tsh >= 1) {\n      tsh = 1 / 1e10\n      return tsh\n    }\n  }\n}\n","import Final from './util'\n\nexport default class Bottom {\n  /**\n   *\n   * @param {*} options\n   * an object containing all required properties\n   */\n  constructor(options) {\n    this.options = options\n    this.element = options.ELEMENT\n    /**\n     * Size of device window\n     */\n    this.winSize = this.options.sizeOfWindow || window.screen.availHeight\n    this.height = this.element.offsetHeight\n    this.unit = this.options.unit\n    /**\n     * @type number\n     * A maximum area where the draw-start is sensitive\n     */\n    this.maxArea = this.winSize - this.options.maxStartArea\n\n    this.context = null\n  }\n\n  start(e) {\n    const start = e.changedTouches[0].pageY || e.changedTouches[0].clientY\n    const startX =  e.changedTouches[0].pageX || e.changedTouches[0].clientX\n    /**\n     * The `Drawer`'s `Top` class uses the `CSS property` `top`\n     * for updating and defining position of the drawn element\n     */\n    const currentPosition = parseFloat(\n      this.element.style.bottom.replace(\n        /[^\\d]*$/, ''\n      )\n    )\n    const dimension = `-${this.height - start}${this.unit}`\n    const displacement = `-${this.height - Final.START}${this.unit}`\n\n    if (start >= Final.ZERO && start <= this.maxArea && currentPosition !== Final.ZERO) {\n      this.element.style.bottom = displacement || dimension\n      // Block every scroll job on the screen\n      document.body.style.overflow = Final.HIDDEN\n    }\n  }\n\n  move() {\n\n  }\n\n  end() {\n\n  }\n\n  setContext(ctx) {\n    this.context = ctx\n    return this\n  }\n\n  static _getStyle(elt, pseudoElt) {\n    return pseudoElt ? window.getComputedStyle(elt, pseudoElt) : window.getComputedStyle(elt)\n  }\n\n  // no need for `window.onorientationchange`\n  _loopWinSizeChangeEvent() {\n    window.setInterval(() => {\n      this.winSize = window.screen.availWidth\n    }, 1e3)\n  }\n}\n","export default class Rectangle {\n  constructor(x1, y1, x2, y2) {\n    this.coordsX = {\n      x1,\n      x2\n    }\n    this.coordsY = {\n      y1,\n      y2\n    }\n  }\n\n  // getter\n  get width() {\n    return Math.abs(this.coordsX.x2 - this.coordsX.x1)\n  }\n\n  get height() {\n    return Math.abs(this.coordsY.y2 - this.coordsY.y1)\n  }\n\n  // methods\n  wGTh() {\n    return this.width > this.height\n  }\n\n  hGTw() {\n    return !this.wGTh()\n  }\n}\n","import Rectangle from './rectangle'\nimport Util from './util'\n\nconst DIRECTION = 'left'\nconst DIMENSION = 'dimension'\nconst DISPLACEMENT = 'displacement'\nconst EVENT_OBJ = 'event'\nconst THRESHOLD = 'threshold'\nconst BELOW_THRESHOLD = 'belowthreshold'\nconst OPEN = 'open'\nconst CLOSE = 'close'\nconst UNIT = 'px'\nconst MAX_START_AREA = 25\nconst THRESHOLD_VALUE = 0.666666666\n\nexport default class Left {\n  /**\n   *\n   * @param {{}} options\n   * an object containing all required properties\n   */\n  constructor(options) {\n    this.options = options\n    /**\n     * @type {HTMLElement}\n     */\n    this.element = options.ELEMENT\n    /**\n     * Size of device window\n     * @type {number}\n     */\n    this.winSize = this.options.sizeOfWindow || window.screen.availWidth\n    /**\n     * @type {number}\n     */\n    this.width = this.element.offsetWidth\n    this.unit = this.options.unit || UNIT\n    /**\n     * @type {number}\n     * A maximum area where the draw-start is sensitive\n     */\n    this.maxArea = this.options.maxStartArea || MAX_START_AREA\n\n    /**\n     * A threshold which the `touchmove` signal must attain\n     * before being qualified to stay shown\n     * the threshold should be a value between `0` and `1.0`\n     * @type {number}\n     */\n    this.threshold = this.options.threshold || THRESHOLD_VALUE\n    this.threshold = Util.validateThreshold(this.threshold)\n\n    // Touch coordinates (Touch Start)\n    this.startX = -1\n    this.startY = -1\n    // Touch coordinates (Touch Move)\n    this.resumeX = -1\n    this.resumeY = -1\n    // Touch coordinates (Touch End) [these may not be important]\n    this.endX = -1\n    this.endY = -1\n\n    /**\n     * A control for scroll. This control prevents\n     * a clash between coordinates dancing between\n     * the (&delta;`X`) coords and (&delta;`Y`) coords.\n     * Utilising the `Rectangle` class to get bounds\n     * and isolate territories\n     * @type {boolean}\n     */\n    this.scrollControlSet = false\n    this.scrollControl = null\n    this.timing = {\n      /**\n       * @type {Date}\n       */\n      start: null,\n      /**\n       * @type {Date}\n       */\n      end: null\n    }\n\n    this.context = null\n  }\n\n  /**\n   * The `touchstart` event handler for the `Left` drawer `class`\n   * @param {{}} e an event `object`: An event `object`\n   * representing an `object` of all `properties` related\n   * to the `touchstart` event.\n   * @param {Function} fn - a callback function called when the `start`\n   * event is triggered\n   * @returns {void}\n   */\n  start(e, fn) {\n    this.timing.start = new Date()\n    const start = e.changedTouches[0].pageX || e.changedTouches[0].clientX\n    this.startX = start\n    this.startY =  e.changedTouches[0].pageY || e.changedTouches[0].clientY\n    /**\n     * The `Drawer`'s `Left` class uses the `CSS property` -- `left`\n     * for updating and defining position of the drawn element\n     */\n    const currentPosition = parseFloat(\n      Left._getStyle(this.element)[DIRECTION].replace(\n        /[^\\d]*$/, ''\n      )\n    )\n    this.positionOnStart = currentPosition\n    const dimension = `-${this.width - start}${this.unit}`\n    const displacement = `-${this.width - Util.START}${this.unit}`\n\n    if (start >= Util.ZERO && start <= this.maxArea && currentPosition !== Util.ZERO) {\n      const response = {\n        [EVENT_OBJ]: e,\n        [DIMENSION]: dimension,\n        [DISPLACEMENT]: displacement\n      }\n      fn.call(this.context || this, response, new Rectangle(this.startX, this.startY, -1, -1))\n      // this.element.style.left = displacement || dimension\n      // Block every scroll job on the screen\n      // document.body.style.overflow = Final.HIDDEN\n    }\n  }\n\n  /**\n   * The `touchstart` event handler for the `Left` drawer `class`\n   * @param {{}} e an event `object`: An event `object`\n   * representing an `object` of all `properties` related\n   * to the `touchmove` event.\n   * @param {Function} fn - a callback function called when the `move`\n   * event is triggered\n   * @returns {void}\n   */\n  move(e, fn) {\n    const resume = e.changedTouches[0].pageX || e.changedTouches[0].clientX\n    this.resumeX = resume\n    this.resumeY = e.changedTouches[0].pageY || e.changedTouches[0].clientY\n\n    const currentPosition = parseFloat(\n      Left._getStyle(this.element)[DIRECTION].replace(\n        /[^\\d]*$/, ''\n      )\n    )\n    const nextAction = this.positionOnStart === Util.ZERO ? CLOSE : OPEN\n\n    const start = this.startX\n    const width = this.width\n    /**\n     * When the touch doesn't start from the max-width\n     * of the element ignore `start` and use `width`\n     * as starting point.\n     */\n    const virtualStart = start > width ? width : start\n    /**\n     * Dimension for opening. When the drawer is being opened,\n     * the `width` is the max dimension, and the `start` can\n     * only be less than the `width` (from a range of `0` to `this.maxArea` e.g `0` - `25`), so the current\n     * reading from `resume` is subtracted from the `width` to\n     * get the accurate position to update the drawer with.\n     */\n    const dimension = `-${width - resume}${this.unit}`\n    /**\n     * Dimension for closing. When the drawer is being closed,\n     * the `width` is the max dimension and the `start` could\n     * possibly be more than the `width`\n     * or less than the `width`.\n     * To assure an accurate dimension the `virtualStart`\n     * determines whether to use the `width` as starting point\n     * or the actual `start`. If the actual start is more than\n     * `width`, the width becomes the start point else the `start`\n     */\n    const vdimension = `-${virtualStart - resume}${this.unit}`\n    const backdropSheet = {\n      opacity: resume / width,\n      display: Util.DISPLAY\n    }\n    const rect = new Rectangle(\n      this.startX,\n      this.startY,\n      this.resumeX,\n      this.resumeY\n    )\n    const isBoundX = rect.wGTh()\n\n    if (!this.scrollControlSet) {\n      this.scrollControl = isBoundX\n      this.scrollControlset = !this.scrollControlSet\n    }\n\n    // OPEN LOGIC\n    if (start >= Util.ZERO && start <= this.maxArea && currentPosition !== Util.ZERO && isBoundX && nextAction === OPEN && this.scrollControl) {\n      const response = {\n        [EVENT_OBJ]: e,\n        [DIMENSION]: dimension,\n        open: true,\n        close: false\n      }\n      fn.call(this.context || this, response, rect)\n      // this.element.style[DIRECTION] = dimension\n    }\n\n    // CLOSE LOGIC\n    if (start <= this.width && isBoundX && nextAction === CLOSE && this.scrollControl) {\n      const response = {\n        [EVENT_OBJ]: e,\n        [DIMENSION]: vdimension,\n        close: true,\n        open: false\n      }\n      fn.call(this.context || this, response, rect)\n      // this.element.style[DIRECTION] = vdimension\n    }\n  }\n\n  /**\n   * The `touchstart` event handler for the `Left` drawer `class`\n   * @param {{}} e an event `object`: An event `object`\n   * representing an `object` of all `properties` related\n   * to the `touchend` event.\n   * @param {Function} fn - a callback function called when the `end`\n   * event is triggered\n   * @param {{}} thresholdState - a state object which should be passed\n   * by reference for updating by this method\n   * @returns {void}\n   */\n  end(e, fn, thresholdState) {\n    this.timing.end = new Date()\n\n    const end = e.changedTouches[0].pageX || e.changedTouches[0].clientX\n    this.endX = end\n    this.endY = e.changedTouches[0].pageY || e.changedTouches[0].clientY\n\n    const rect = new Rectangle(this.startX, this.startY, this.endX, this.endY)\n\n    const start = this.startX\n    const TIMING = this.timing.end.getTime() - this.timing.start.getTime()\n    const threshold = this.threshold\n    const signedOffsetSide = parseFloat(\n      Left._getStyle(this.element)[DIRECTION].replace(\n        /[^\\d]*$/, ''\n      )\n    )\n    const nonZero = `-${this.width}px`\n    const zero = `${Util.ZERO}`\n    const offsetSide = Math.abs(signedOffsetSide)\n    let action = OPEN\n    // release the control for another session\n    this.scrollControl = this.scrollControlSet = false // eslint-disable-line no-multi-assign\n\n    const response = {\n      [EVENT_OBJ]: e,\n      position: signedOffsetSide,\n      rect\n    }\n\n    function getResponse(state, trueForOpen) {\n      const opposite = 'oppositeDimension'\n      if (state === THRESHOLD && trueForOpen || state === BELOW_THRESHOLD && !trueForOpen) {\n        return {\n          [DIMENSION]: zero,\n          TIMING,\n          [opposite]: nonZero,\n          ...response\n        }\n      } else if (state === THRESHOLD && !trueForOpen || state === BELOW_THRESHOLD && trueForOpen) {\n        return {\n          [DIMENSION]: nonZero,\n          TIMING,\n          [opposite]: zero,\n          ...response\n        }\n      }\n      return {}\n    }\n\n    // OPEN LOGIC\n    if (offsetSide <= this.width * threshold && this.startX <= this.maxArea) {\n      thresholdState.state = [THRESHOLD, CLOSE]\n      thresholdState.stateObj = getResponse(thresholdState.state[0], true)\n      // this.element.style[DIRECTION] = zero\n    } else {\n      thresholdState.state = [BELOW_THRESHOLD, CLOSE]\n      thresholdState.stateObj = getResponse(thresholdState.state[0], true)\n      // this.element.style[DIRECTION] = nonZero\n    }\n\n    // CLOSE LOGIC\n    if (start > this.maxArea && offsetSide !== this.width) {\n      action = CLOSE\n      if (offsetSide > this.width * threshold) {\n        thresholdState.state = [THRESHOLD, OPEN]\n        thresholdState.stateObj = getResponse(thresholdState.state[0], false)\n        // this.element.style[DIRECTION] = nonZero\n      } else {\n        thresholdState.state = [BELOW_THRESHOLD, OPEN]\n        thresholdState.stateObj = getResponse(thresholdState.state[0], false)\n        // this.element.style[DIRECTION] = zero\n      }\n    }\n    fn.call(this, action)\n  }\n\n  setContext(ctx) {\n    this.context = ctx\n    return this\n  }\n\n  static _getStyle(elt, pseudoElt) {\n    return pseudoElt ? window.getComputedStyle(elt, pseudoElt) : window.getComputedStyle(elt)\n  }\n\n  // no need for `window.onorientationchange`\n  _loopWinSizeChangeEvent() {\n    window.setInterval(() => {\n      this.winSize = window.screen.availWidth\n    }, 1e3) // eslint-disable-line no-magic-numbers\n  }\n}\n","import Final from './util'\n\nconst DIRECTION = 'right'\nconst DIMENSION = 'dimension'\nconst DISPLACEMENT = 'displacement'\nconst EVENT_OBJ = 'event'\nconst THRESHOLD = 'threshold'\nconst BELOW_THRESHOLD = 'belowthreshold'\n\nexport default class Right {\n  /**\n   *\n   * @param {*} options\n   * an object containing all required properties\n   */\n  constructor(options) {\n    this.options = options\n    // the target element, not listening to,\n    // but reacting to event\n    this.element = options.ELEMENT\n    /**\n     * @type number\n     * Size of device window in pixels\n     */\n    this.winSize = this.options.sizeOfWindow || window.screen.availWidth\n    /**\n     * @type number\n     * A numerical representation of the\n     * target element's width\n     */\n    this.width = this.element.offsetWidth\n    this.unit = this.options.UNIT\n    /**\n     * @type number\n     * A maximum area where the draw-start is sensitive\n     */\n    this.maxArea = this.winSize - this.options.maxStartArea\n\n    /**\n     * A threshold which the `touchmove` signal must attain\n     * before being qualified to stay shown\n     * the threshold should be a value between `1.0` and `0`\n     * @type number\n     */\n    this.threshold = this.options.threshold\n\n    // Touch coordinates (Touch Start)\n    this.startX = -1\n    this.startY = -1\n    // Touch coordinates (Touch Move)\n    this.resumeX = -1\n    this.resumeY = -1\n\n    /**\n     * A control for scroll. This control prevents\n     * a clash between coordinates dancing between\n     * the (&delta;`X`) coords and (&delta;`Y`) coords.\n     * Utilising the `Rectangle` class to get bounds\n     * and isolate territories\n     * @type boolean\n     */\n    this.scrollControlSet = false\n    this.scrollControl = null\n\n    this.context = null\n  }\n\n  start() {\n    const start = e.changedTouches[0].pageX || e.changedTouches[0].clientX\n    this.startX = start\n    this.startY =  e.changedTouches[0].pageY || e.changedTouches[0].clientY\n    /**\n     * The `Drawer`'s `Right` class uses the `CSS property` `Right`\n     * for updating and defining position of the drawn element\n     */\n    const currentPosition = parseFloat(\n      this.element.style.right.replace(\n        /[^\\d]*$/, ''\n      )\n    )\n    const dimension = `-${this.width - (this.winSize - start)}${this.unit}`\n    const displacement = `-${this.width - Final.START}${this.unit}`\n\n    if (start >= Final.ZERO && start <= this.maxArea && currentPosition !== Final.ZERO) {\n      this.element.style.right = displacement || dimension\n      // Block every scroll job on the screen\n      document.body.style.overflow = Final.HIDDEN\n    }\n  }\n\n  /**\n   * The `touchmove` event handler for the `Right` drawer `class`\n   * @param {*} e an event `object`: An event `object`\n   * representing an `object` of all `properties` related\n   * to the `touchstart` event.\n   */\n  move() {\n    const resume = e.changedTouches[0].pageX || e.changedTouches[0].clientX\n    this.resumeX = resume\n    this.resumeY = e.changedTouches[0].pageY || e.changedTouches[0].clientY\n\n    const currentPosition = parseFloat(\n      this.element.style[DIRECTION].replace(\n        /[^\\d]*$/, ''\n      )\n    )\n\n    const start = this.startX\n    const width = this.width\n    /**\n     * When the touch doesn't start from the max-width\n     * of the element ignore `start` and use `width`\n     * as starting point.\n     */\n    const virtualStart = start < (this.winSize - width) ? this.winSize - width : start\n    /**\n     * Dimension for opening. When the drawer is being opened,\n     * the `width` is the max dimension, and the `start` can\n     * only be less than the `width` (from a range of `0` to `this.maxArea` e.g `0` - `25`), so the current\n     * reading from `resume` is subtracted from the `width` to\n     * get the accurate position to update the drawer with.\n     *\n     *\n     * **WHY IT IS LIKE THIS `width - (this.winSize - resume)`**\n     *\n     * `this.winSize - resume` converts it from a vector to a scalar.\n     * Keeping it as a vector makes the dimension inaccurate\n     * as the `right` property of the `HTMLElement.style` is the one being updated and not the left,\n     * so the css `right` property is an enough respect for its direction.\n     *\n     * *__If it should be respected then__*,\n     * 1. The `Right Drawer class` would be updating `left css property` and not `right`, i.e, initialy an element that uses the `Right Drawer` must have a `css file` that defines a `css left property` for the element and not a `right` property; As in\n     * ```scss\n     * .menu {\n     *   left: // (window size + width of the element)px\n     * }\n     * ```\n     * 2. Cardinal's `Right Drawer class` can always update\n     * as `HTMLElement.style.left = ${width - resume}px`, and\n     * not as it is now.\n     * This way there is no `right` property respecting the direction\n     * So the vector attribute of the dimension is preserved.\n     */\n    const dimension = `-${width - (this.winSize - resume)}${this.unit}`\n    /**\n     * Dimension for closing. When the drawer is being closed,\n     * the `width` is the max dimension and the `start` could\n     * possibly be more than the `width`\n     * or less than the `width`.\n     * To assure an accurate dimension the `virtualStart`\n     * determines whether to use the `width` as starting point\n     * or the actual `start`. If the actual start is more than\n     * `width`, the width becomes the start point else the `start`\n     */\n    const vdimension = `-${resume - virtualStart}${this.unit}`\n    new Final()\n    const backdropSheet = {\n      opacity: (this.winSize - resume) / width,\n      display: Final.DISPLAY\n    }\n    const rect = new Rectangle(\n      this.startX,\n      this.startY,\n      this.resumeX,\n      this.resumeY\n    )\n    const isBoundX = rect.wGTh()\n    // eslint-disable-next-line no-unused-expression, no-sequence, no-extra-parens\n    !this.scrollControlSet &&\n    (this.scrollControl = isBoundX), (this.scrollControlset = !this.scrollControlSet)\n  }\n\n  end() {\n\n  }\n\n  setContext(ctx) {\n    this.context = ctx\n    return this\n  }\n\n  static _getStyle(elt, pseudoElt) {\n    return pseudoElt ? window.getComputedStyle(elt, pseudoElt) : window.getComputedStyle(elt)\n  }\n\n  // no need for `window.onorientationchange`\n  _loopWinSizeChangeEvent() {\n    window.setInterval(() => {\n      this.winSize = window.screen.availWidth\n    }, 1e3)\n  }\n}\n","import Final from './util'\n\nexport default class Top {\n  /**\n   *\n   * @param {*} options\n   * an object containing all required properties\n   */\n  constructor(options) {\n    this.options = options\n    this.element = options.ELEMENT\n    /**\n     * Size of device window\n     */\n    this.winSize = this.options.sizeOfWindow || window.screen.availHeight\n    this.height = this.element.offsetHeight\n    this.unit = this.options.unit\n    /**\n     * @type number\n     * A maximum area where the draw-start is sensitive\n     */\n    this.maxArea = this.options.maxStartArea\n    this.context = null\n  }\n\n  start(e) {\n    let start = e.changedTouches[0].pageY || e.changedTouches[0].clientY\n    let startX =  e.changedTouches[0].pageX || e.changedTouches[0].clientX\n    /**\n     * The `Drawer`'s `Top` class uses the `CSS property` `top`\n     * for updating and defining position of the drawn element\n     */\n    let currentPosition = parseFloat(\n      this.element.style.top.replace(\n        /[^\\d]*$/, ''\n      )\n    )\n    let dimension = `-${this.height - start}${this.unit}`\n    let displacement = `-${this.height - Final.START}${this.unit}`\n\n    if (start >= Final.ZERO && start <= this.maxArea && currentPosition != Final.ZERO) {\n      this.element.style.top = displacement || dimension\n      // Block every scroll job on the screen\n      document.body.style.overflow = Final.HIDDEN\n    }\n  }\n\n  move() {\n\n  }\n\n  end() {\n\n  }\n\n  setContext(ctx) {\n    this.context = ctx\n    return this\n  }\n\n  static _getStyle(elt, pseudoElt) {\n    return pseudoElt ? window.getComputedStyle(elt, pseudoElt) : window.getComputedStyle(elt)\n  }\n\n  // no need for `window.onorientationchange`\n  _loopWinSizeChangeEvent() {\n    window.setInterval(() => {\n      this.winSize = window.screen.availWidth\n    }, 1e3)\n  }\n}\n","import Bottom from './bottom'\nimport Left from './left'\nimport Right from './right'\nimport Top from './top'\n\nconst START = 'start'\nconst MOVE = 'move'\nconst END = 'end'\nconst THRESHOLD = 'threshold'\nconst BELOW_THRESHOLD = 'belowthreshold'\n\nexport default class Drawer {\n  /**\n   *\n   * @param {{}} options - an object of configuration options\n   */\n  constructor(options) {\n    this.options = options\n    /**\n     * @type {HTMLElement}\n     */\n    this.element = options.ELEMENT\n    this.target = options.TARGET\n    this.events = ['touchstart', 'touchmove', 'touchend']\n    this.handlers = null\n    this.direction = options.DIRECTION\n    this.up = new Top(this.options)\n    this.down = new Bottom(this.options)\n    this.left = new Left(this.options)\n    this.right = new Right(this.options)\n    /**\n     *\n     * @type {{}}\n     */\n    this.callbacks = null\n    this.context = null\n  }\n\n  // enum\n  static UP = 0\n  static LEFT = 1\n  static DOWN = 2 // eslint-disable-line no-magic-numbers\n  static RIGHT = 3 // eslint-disable-line no-magic-numbers\n\n  // public\n  /**\n   * Make sure event handlers are registered using `Drawer.on(...)` before\n   * calling `Drawer.activate()`\n   *\n   * @see {@link Drawer#on | Drawer.on}\n   * @returns {void}\n   */\n  activate() {\n    // get registered callbacks or set default\n    const startfn = this.callbacks ? this.callbacks[START] : def\n    const movefn = this.callbacks ? this.callbacks[MOVE] : def\n    const endfn = this.callbacks ? this.callbacks[END] : def\n\n    const startHandler = (e) => {\n      if (this.direction === Drawer.UP) {\n        this.up.start(e, startfn)\n      } else if (this.direction === Drawer.DOWN) {\n        this.down.start(e, startfn)\n      } else if (this.direction === Drawer.LEFT) {\n        this.left.start(e, startfn)\n      } else if (this.direction === Drawer.DOWN) {\n        this.right.start(e, startfn)\n      } else {\n        this.deactivate()\n      }\n    }\n\n    const moveHandler = (e) => {\n      if (this.direction === Drawer.UP) {\n        this.up.move(e, movefn)\n      } else if (this.direction === Drawer.DOWN) {\n        this.down.move(e, movefn)\n      } else if (this.direction === Drawer.LEFT) {\n        this.left.move(e, movefn)\n      } else if (this.direction === Drawer.DOWN) {\n        this.right.move(e, movefn)\n      } else {\n        this.deactivate()\n      }\n    }\n\n    const endHandler = (e) => {\n      if (this.direction === Drawer.UP) {\n        const state = {}\n        this.up.end(e, endfn, state) // `state` is passed by Ref\n        this._processThresholdState(state)\n      } else if (this.direction === Drawer.DOWN) {\n        const state = {}\n        this.down.end(e, endfn, state)\n        this._processThresholdState(state)\n      } else if (this.direction === Drawer.LEFT) {\n        const state = {}\n        this.left.end(e, endfn, state)\n        this._processThresholdState(state)\n      } else if (this.direction === Drawer.DOWN) {\n        const state = {}\n        this.right.end(e, endfn, state)\n        this._processThresholdState(state)\n      } else {\n        this.deactivate()\n      }\n    }\n\n    this._register(startHandler, moveHandler, endHandler)\n    for (let i = 0; i < this.events.length; i++) {\n      this.target.addEventListener(this.events[i], this.handlers[i])\n    }\n  }\n\n  /**\n   * A method provided by the `Drawer interface` to deactivate the drawer\n   * @returns {void}\n   */\n  deactivate() {\n    for (let i = 0; i < this.events; i++) {\n      this.target.removeEventListener(this.events[i], this.handlers[i])\n    }\n    this._register()\n  }\n\n  /**\n   * A function used to register callbacks for the `Drawer class` `touchstart`,\n   * `touchmove` and `touchend` event handlers.\n   *\n   * Always call `Drawer.on(...)` before `Drawer.activate()`.\n   * As in:\n   * ```js\n   * const drawer = new Drawer()\n   * drawer.on(event, () => {\n   *  // TODO\n   * }).activate()\n   * ```\n   *\n   * To prevent modifying the context of `this`, the\n   * `drawer.setContext(...)` method should be invoked with an\n   * argument which is the `this` context of the\n   * `calling class` or alternatively using a wrapper function,\n   * then call the main handler method.\n   * ```js\n   * class UseDrawer {\n   *  // CODE\n   *  method() {\n   *    const drawer = new Drawer()\n   *    drawer.on(...)\n   *      .setContext(this)\n   *      .activate()\n   *  }\n   * }\n   * // OR\n   * drawer.on(event, (stateObj) => {\n   *  this.handler.call(this, stateObj)\n   * }).activate()\n   * ```\n   *\n   * Valid event types taken by this method are:\n   * - `start`\n   * - `move`\n   * - `end`\n   * - `threshold`\n   * - `belowthreshold`\n   * @param {string} event The event type as in the above list\n   * @param {Function} fn A function to call when this event triggers\n   * @returns {Drawer} Returns a instance of the `Drawer` class\n   */\n  on(event, fn) {\n    this._registerCallbacks(event, fn)\n    return this\n  }\n\n  setContext(ctx) {\n    this.context = ctx\n    this.left.setContext(ctx)\n    this.right.setContext(ctx)\n    this.up.setContext(ctx)\n    this.down.setContext(ctx)\n    return this\n  }\n\n  _processThresholdState(state) {\n    const thState = state.state[0]\n    const rect = state.stateObj.rect\n    delete state.stateObj.rect\n    this.callbacks[thState].call(this.context || this, state.state, state.stateObj, rect)\n  }\n\n  _registerCallbacks(event, fn) {\n    this.callbacks = this.callbacks || {\n      [START]: def,\n      [MOVE]: def,\n      [END]: def,\n      [THRESHOLD]: def,\n      [BELOW_THRESHOLD]: def\n    }\n    if (event in this.callbacks) {\n      this.callbacks[event] = fn\n    }\n  }\n\n  // private\n  _register(...handlers) {\n    this.handlers = [...handlers]\n  }\n}\n\nfunction def() {\n  return false\n}\n"],"names":["Final","validateThreshold","tsh","Bottom","options","element","ELEMENT","winSize","sizeOfWindow","window","screen","availHeight","height","offsetHeight","unit","maxArea","maxStartArea","context","start","e","changedTouches","pageY","clientY","startX","pageX","clientX","currentPosition","parseFloat","style","bottom","replace","dimension","displacement","START","ZERO","document","body","overflow","HIDDEN","move","end","setContext","ctx","_getStyle","elt","pseudoElt","getComputedStyle","_loopWinSizeChangeEvent","setInterval","availWidth","Rectangle","x1","y1","x2","y2","coordsX","coordsY","wGTh","width","hGTw","Math","abs","DIRECTION","DIMENSION","DISPLACEMENT","EVENT_OBJ","THRESHOLD","BELOW_THRESHOLD","OPEN","CLOSE","UNIT","MAX_START_AREA","THRESHOLD_VALUE","Left","offsetWidth","threshold","Util","startY","resumeX","resumeY","endX","endY","scrollControlSet","scrollControl","timing","fn","Date","positionOnStart","response","call","resume","nextAction","virtualStart","vdimension","rect","isBoundX","scrollControlset","open","close","thresholdState","TIMING","getTime","signedOffsetSide","nonZero","zero","offsetSide","action","position","getResponse","state","trueForOpen","opposite","stateObj","Right","right","backdropSheet","opacity","display","DISPLAY","Top","top","MOVE","END","Drawer","target","TARGET","events","handlers","direction","up","down","left","callbacks","activate","startfn","def","movefn","endfn","startHandler","UP","DOWN","LEFT","deactivate","moveHandler","endHandler","_processThresholdState","_register","i","length","addEventListener","removeEventListener","on","event","_registerCallbacks","thState"],"mappings":"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"}